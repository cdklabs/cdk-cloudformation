{
  "tasks": {
    "build": {
      "name": "build",
      "description": "Full release build",
      "steps": [
        {
          "spawn": "default"
        },
        {
          "spawn": "pre-compile"
        },
        {
          "spawn": "compile"
        },
        {
          "spawn": "post-compile"
        },
        {
          "spawn": "test"
        },
        {
          "spawn": "package"
        }
      ]
    },
    "build:alexa-ask-skill": {
      "name": "build:alexa-ask-skill",
      "description": "build alexa-ask-skill",
      "steps": [
        {
          "spawn": "compile:alexa-ask-skill"
        },
        {
          "spawn": "package:alexa-ask-skill"
        }
      ]
    },
    "build:aqua-enterprise-enforcer": {
      "name": "build:aqua-enterprise-enforcer",
      "description": "build aqua-enterprise-enforcer",
      "steps": [
        {
          "spawn": "compile:aqua-enterprise-enforcer"
        },
        {
          "spawn": "package:aqua-enterprise-enforcer"
        }
      ]
    },
    "build:aqua-enterprise-kubeenforcer": {
      "name": "build:aqua-enterprise-kubeenforcer",
      "description": "build aqua-enterprise-kubeenforcer",
      "steps": [
        {
          "spawn": "compile:aqua-enterprise-kubeenforcer"
        },
        {
          "spawn": "package:aqua-enterprise-kubeenforcer"
        }
      ]
    },
    "build:aqua-enterprise-scanner": {
      "name": "build:aqua-enterprise-scanner",
      "description": "build aqua-enterprise-scanner",
      "steps": [
        {
          "spawn": "compile:aqua-enterprise-scanner"
        },
        {
          "spawn": "package:aqua-enterprise-scanner"
        }
      ]
    },
    "build:aqua-enterprise-server": {
      "name": "build:aqua-enterprise-server",
      "description": "build aqua-enterprise-server",
      "steps": [
        {
          "spawn": "compile:aqua-enterprise-server"
        },
        {
          "spawn": "package:aqua-enterprise-server"
        }
      ]
    },
    "build:atlassian-opsgenie-integration": {
      "name": "build:atlassian-opsgenie-integration",
      "description": "build atlassian-opsgenie-integration",
      "steps": [
        {
          "spawn": "compile:atlassian-opsgenie-integration"
        },
        {
          "spawn": "package:atlassian-opsgenie-integration"
        }
      ]
    },
    "build:atlassian-opsgenie-team": {
      "name": "build:atlassian-opsgenie-team",
      "description": "build atlassian-opsgenie-team",
      "steps": [
        {
          "spawn": "compile:atlassian-opsgenie-team"
        },
        {
          "spawn": "package:atlassian-opsgenie-team"
        }
      ]
    },
    "build:atlassian-opsgenie-user": {
      "name": "build:atlassian-opsgenie-user",
      "description": "build atlassian-opsgenie-user",
      "steps": [
        {
          "spawn": "compile:atlassian-opsgenie-user"
        },
        {
          "spawn": "package:atlassian-opsgenie-user"
        }
      ]
    },
    "build:awscommunity-account-alternatecontact": {
      "name": "build:awscommunity-account-alternatecontact",
      "description": "build awscommunity-account-alternatecontact",
      "steps": [
        {
          "spawn": "compile:awscommunity-account-alternatecontact"
        },
        {
          "spawn": "package:awscommunity-account-alternatecontact"
        }
      ]
    },
    "build:awscommunity-s3-deletebucketcontents": {
      "name": "build:awscommunity-s3-deletebucketcontents",
      "description": "build awscommunity-s3-deletebucketcontents",
      "steps": [
        {
          "spawn": "compile:awscommunity-s3-deletebucketcontents"
        },
        {
          "spawn": "package:awscommunity-s3-deletebucketcontents"
        }
      ]
    },
    "build:awsqs-checkpoint-cloudguardqs-module": {
      "name": "build:awsqs-checkpoint-cloudguardqs-module",
      "description": "build awsqs-checkpoint-cloudguardqs-module",
      "steps": [
        {
          "spawn": "compile:awsqs-checkpoint-cloudguardqs-module"
        },
        {
          "spawn": "package:awsqs-checkpoint-cloudguardqs-module"
        }
      ]
    },
    "build:awsqs-ec2-linuxbastionqs-module": {
      "name": "build:awsqs-ec2-linuxbastionqs-module",
      "description": "build awsqs-ec2-linuxbastionqs-module",
      "steps": [
        {
          "spawn": "compile:awsqs-ec2-linuxbastionqs-module"
        },
        {
          "spawn": "package:awsqs-ec2-linuxbastionqs-module"
        }
      ]
    },
    "build:awsqs-eks-cluster": {
      "name": "build:awsqs-eks-cluster",
      "description": "build awsqs-eks-cluster",
      "steps": [
        {
          "spawn": "compile:awsqs-eks-cluster"
        },
        {
          "spawn": "package:awsqs-eks-cluster"
        }
      ]
    },
    "build:awsqs-iridium-cloudconnectqs-module": {
      "name": "build:awsqs-iridium-cloudconnectqs-module",
      "description": "build awsqs-iridium-cloudconnectqs-module",
      "steps": [
        {
          "spawn": "compile:awsqs-iridium-cloudconnectqs-module"
        },
        {
          "spawn": "package:awsqs-iridium-cloudconnectqs-module"
        }
      ]
    },
    "build:awsqs-kubernetes-get": {
      "name": "build:awsqs-kubernetes-get",
      "description": "build awsqs-kubernetes-get",
      "steps": [
        {
          "spawn": "compile:awsqs-kubernetes-get"
        },
        {
          "spawn": "package:awsqs-kubernetes-get"
        }
      ]
    },
    "build:awsqs-kubernetes-helm": {
      "name": "build:awsqs-kubernetes-helm",
      "description": "build awsqs-kubernetes-helm",
      "steps": [
        {
          "spawn": "compile:awsqs-kubernetes-helm"
        },
        {
          "spawn": "package:awsqs-kubernetes-helm"
        }
      ]
    },
    "build:awsqs-kubernetes-resource": {
      "name": "build:awsqs-kubernetes-resource",
      "description": "build awsqs-kubernetes-resource",
      "steps": [
        {
          "spawn": "compile:awsqs-kubernetes-resource"
        },
        {
          "spawn": "package:awsqs-kubernetes-resource"
        }
      ]
    },
    "build:awsqs-vpc-vpcqs-module": {
      "name": "build:awsqs-vpc-vpcqs-module",
      "description": "build awsqs-vpc-vpcqs-module",
      "steps": [
        {
          "spawn": "compile:awsqs-vpc-vpcqs-module"
        },
        {
          "spawn": "package:awsqs-vpc-vpcqs-module"
        }
      ]
    },
    "build:awssamples-ec2imageidcheckssm-hook": {
      "name": "build:awssamples-ec2imageidcheckssm-hook",
      "description": "build awssamples-ec2imageidcheckssm-hook",
      "steps": [
        {
          "spawn": "compile:awssamples-ec2imageidcheckssm-hook"
        },
        {
          "spawn": "package:awssamples-ec2imageidcheckssm-hook"
        }
      ]
    },
    "build:awssamples-ec2ssmsmonly-hook": {
      "name": "build:awssamples-ec2ssmsmonly-hook",
      "description": "build awssamples-ec2ssmsmonly-hook",
      "steps": [
        {
          "spawn": "compile:awssamples-ec2ssmsmonly-hook"
        },
        {
          "spawn": "package:awssamples-ec2ssmsmonly-hook"
        }
      ]
    },
    "build:awssamples-ec2volumeencryptionkms-hook": {
      "name": "build:awssamples-ec2volumeencryptionkms-hook",
      "description": "build awssamples-ec2volumeencryptionkms-hook",
      "steps": [
        {
          "spawn": "compile:awssamples-ec2volumeencryptionkms-hook"
        },
        {
          "spawn": "package:awssamples-ec2volumeencryptionkms-hook"
        }
      ]
    },
    "build:awssamples-efsencrypt-hook": {
      "name": "build:awssamples-efsencrypt-hook",
      "description": "build awssamples-efsencrypt-hook",
      "steps": [
        {
          "spawn": "compile:awssamples-efsencrypt-hook"
        },
        {
          "spawn": "package:awssamples-efsencrypt-hook"
        }
      ]
    },
    "build:awssamples-eksclusterlogging-hook": {
      "name": "build:awssamples-eksclusterlogging-hook",
      "description": "build awssamples-eksclusterlogging-hook",
      "steps": [
        {
          "spawn": "compile:awssamples-eksclusterlogging-hook"
        },
        {
          "spawn": "package:awssamples-eksclusterlogging-hook"
        }
      ]
    },
    "build:awssamples-eksclusterpublicapi-hook": {
      "name": "build:awssamples-eksclusterpublicapi-hook",
      "description": "build awssamples-eksclusterpublicapi-hook",
      "steps": [
        {
          "spawn": "compile:awssamples-eksclusterpublicapi-hook"
        },
        {
          "spawn": "package:awssamples-eksclusterpublicapi-hook"
        }
      ]
    },
    "build:awssamples-fsxwindowsonly-hook": {
      "name": "build:awssamples-fsxwindowsonly-hook",
      "description": "build awssamples-fsxwindowsonly-hook",
      "steps": [
        {
          "spawn": "compile:awssamples-fsxwindowsonly-hook"
        },
        {
          "spawn": "package:awssamples-fsxwindowsonly-hook"
        }
      ]
    },
    "build:awssamples-iampoliciesrequiremfa-hook": {
      "name": "build:awssamples-iampoliciesrequiremfa-hook",
      "description": "build awssamples-iampoliciesrequiremfa-hook",
      "steps": [
        {
          "spawn": "compile:awssamples-iampoliciesrequiremfa-hook"
        },
        {
          "spawn": "package:awssamples-iampoliciesrequiremfa-hook"
        }
      ]
    },
    "build:awssamples-iampolicydoesnotgiveadmin-hook": {
      "name": "build:awssamples-iampolicydoesnotgiveadmin-hook",
      "description": "build awssamples-iampolicydoesnotgiveadmin-hook",
      "steps": [
        {
          "spawn": "compile:awssamples-iampolicydoesnotgiveadmin-hook"
        },
        {
          "spawn": "package:awssamples-iampolicydoesnotgiveadmin-hook"
        }
      ]
    },
    "build:awssamples-iamprincipalboundary-hook": {
      "name": "build:awssamples-iamprincipalboundary-hook",
      "description": "build awssamples-iamprincipalboundary-hook",
      "steps": [
        {
          "spawn": "compile:awssamples-iamprincipalboundary-hook"
        },
        {
          "spawn": "package:awssamples-iamprincipalboundary-hook"
        }
      ]
    },
    "build:awssamples-iamusershavepolicy-hook": {
      "name": "build:awssamples-iamusershavepolicy-hook",
      "description": "build awssamples-iamusershavepolicy-hook",
      "steps": [
        {
          "spawn": "compile:awssamples-iamusershavepolicy-hook"
        },
        {
          "spawn": "package:awssamples-iamusershavepolicy-hook"
        }
      ]
    },
    "build:awssamples-noip6-hook": {
      "name": "build:awssamples-noip6-hook",
      "description": "build awssamples-noip6-hook",
      "steps": [
        {
          "spawn": "compile:awssamples-noip6-hook"
        },
        {
          "spawn": "package:awssamples-noip6-hook"
        }
      ]
    },
    "build:awssamples-rdsencrypt-hook": {
      "name": "build:awssamples-rdsencrypt-hook",
      "description": "build awssamples-rdsencrypt-hook",
      "steps": [
        {
          "spawn": "compile:awssamples-rdsencrypt-hook"
        },
        {
          "spawn": "package:awssamples-rdsencrypt-hook"
        }
      ]
    },
    "build:awssamples-s3blockpublicaccess-hook": {
      "name": "build:awssamples-s3blockpublicaccess-hook",
      "description": "build awssamples-s3blockpublicaccess-hook",
      "steps": [
        {
          "spawn": "compile:awssamples-s3blockpublicaccess-hook"
        },
        {
          "spawn": "package:awssamples-s3blockpublicaccess-hook"
        }
      ]
    },
    "build:awssamples-s3bucketencrypt-hook": {
      "name": "build:awssamples-s3bucketencrypt-hook",
      "description": "build awssamples-s3bucketencrypt-hook",
      "steps": [
        {
          "spawn": "compile:awssamples-s3bucketencrypt-hook"
        },
        {
          "spawn": "package:awssamples-s3bucketencrypt-hook"
        }
      ]
    },
    "build:awssamples-s3bucketloggingcompliance-hook": {
      "name": "build:awssamples-s3bucketloggingcompliance-hook",
      "description": "build awssamples-s3bucketloggingcompliance-hook",
      "steps": [
        {
          "spawn": "compile:awssamples-s3bucketloggingcompliance-hook"
        },
        {
          "spawn": "package:awssamples-s3bucketloggingcompliance-hook"
        }
      ]
    },
    "build:awssamples-s3bucketloggingenabled-hook": {
      "name": "build:awssamples-s3bucketloggingenabled-hook",
      "description": "build awssamples-s3bucketloggingenabled-hook",
      "steps": [
        {
          "spawn": "compile:awssamples-s3bucketloggingenabled-hook"
        },
        {
          "spawn": "package:awssamples-s3bucketloggingenabled-hook"
        }
      ]
    },
    "build:awssamples-securitygroupopeningress-hook": {
      "name": "build:awssamples-securitygroupopeningress-hook",
      "description": "build awssamples-securitygroupopeningress-hook",
      "steps": [
        {
          "spawn": "compile:awssamples-securitygroupopeningress-hook"
        },
        {
          "spawn": "package:awssamples-securitygroupopeningress-hook"
        }
      ]
    },
    "build:awssamples-sqsnonpublic-hook": {
      "name": "build:awssamples-sqsnonpublic-hook",
      "description": "build awssamples-sqsnonpublic-hook",
      "steps": [
        {
          "spawn": "compile:awssamples-sqsnonpublic-hook"
        },
        {
          "spawn": "package:awssamples-sqsnonpublic-hook"
        }
      ]
    },
    "build:awssamples-sqspolicyencryption-hook": {
      "name": "build:awssamples-sqspolicyencryption-hook",
      "description": "build awssamples-sqspolicyencryption-hook",
      "steps": [
        {
          "spawn": "compile:awssamples-sqspolicyencryption-hook"
        },
        {
          "spawn": "package:awssamples-sqspolicyencryption-hook"
        }
      ]
    },
    "build:bigid-datasource-dynamodb": {
      "name": "build:bigid-datasource-dynamodb",
      "description": "build bigid-datasource-dynamodb",
      "steps": [
        {
          "spawn": "compile:bigid-datasource-dynamodb"
        },
        {
          "spawn": "package:bigid-datasource-dynamodb"
        }
      ]
    },
    "build:bigid-datasource-s3": {
      "name": "build:bigid-datasource-s3",
      "description": "build bigid-datasource-s3",
      "steps": [
        {
          "spawn": "compile:bigid-datasource-s3"
        },
        {
          "spawn": "package:bigid-datasource-s3"
        }
      ]
    },
    "build:cloudflare-dns-record": {
      "name": "build:cloudflare-dns-record",
      "description": "build cloudflare-dns-record",
      "steps": [
        {
          "spawn": "compile:cloudflare-dns-record"
        },
        {
          "spawn": "package:cloudflare-dns-record"
        }
      ]
    },
    "build:cloudflare-loadbalancer-loadbalancer": {
      "name": "build:cloudflare-loadbalancer-loadbalancer",
      "description": "build cloudflare-loadbalancer-loadbalancer",
      "steps": [
        {
          "spawn": "compile:cloudflare-loadbalancer-loadbalancer"
        },
        {
          "spawn": "package:cloudflare-loadbalancer-loadbalancer"
        }
      ]
    },
    "build:cloudflare-loadbalancer-monitor": {
      "name": "build:cloudflare-loadbalancer-monitor",
      "description": "build cloudflare-loadbalancer-monitor",
      "steps": [
        {
          "spawn": "compile:cloudflare-loadbalancer-monitor"
        },
        {
          "spawn": "package:cloudflare-loadbalancer-monitor"
        }
      ]
    },
    "build:cloudflare-loadbalancer-pool": {
      "name": "build:cloudflare-loadbalancer-pool",
      "description": "build cloudflare-loadbalancer-pool",
      "steps": [
        {
          "spawn": "compile:cloudflare-loadbalancer-pool"
        },
        {
          "spawn": "package:cloudflare-loadbalancer-pool"
        }
      ]
    },
    "build:confluentcloud-iam-serviceaccount": {
      "name": "build:confluentcloud-iam-serviceaccount",
      "description": "build confluentcloud-iam-serviceaccount",
      "steps": [
        {
          "spawn": "compile:confluentcloud-iam-serviceaccount"
        },
        {
          "spawn": "package:confluentcloud-iam-serviceaccount"
        }
      ]
    },
    "build:databricks-clusters-cluster": {
      "name": "build:databricks-clusters-cluster",
      "description": "build databricks-clusters-cluster",
      "steps": [
        {
          "spawn": "compile:databricks-clusters-cluster"
        },
        {
          "spawn": "package:databricks-clusters-cluster"
        }
      ]
    },
    "build:databricks-clusters-job": {
      "name": "build:databricks-clusters-job",
      "description": "build databricks-clusters-job",
      "steps": [
        {
          "spawn": "compile:databricks-clusters-job"
        },
        {
          "spawn": "package:databricks-clusters-job"
        }
      ]
    },
    "build:datadog-dashboards-dashboard": {
      "name": "build:datadog-dashboards-dashboard",
      "description": "build datadog-dashboards-dashboard",
      "steps": [
        {
          "spawn": "compile:datadog-dashboards-dashboard"
        },
        {
          "spawn": "package:datadog-dashboards-dashboard"
        }
      ]
    },
    "build:datadog-integrations-aws": {
      "name": "build:datadog-integrations-aws",
      "description": "build datadog-integrations-aws",
      "steps": [
        {
          "spawn": "compile:datadog-integrations-aws"
        },
        {
          "spawn": "package:datadog-integrations-aws"
        }
      ]
    },
    "build:datadog-monitors-downtime": {
      "name": "build:datadog-monitors-downtime",
      "description": "build datadog-monitors-downtime",
      "steps": [
        {
          "spawn": "compile:datadog-monitors-downtime"
        },
        {
          "spawn": "package:datadog-monitors-downtime"
        }
      ]
    },
    "build:datadog-monitors-monitor": {
      "name": "build:datadog-monitors-monitor",
      "description": "build datadog-monitors-monitor",
      "steps": [
        {
          "spawn": "compile:datadog-monitors-monitor"
        },
        {
          "spawn": "package:datadog-monitors-monitor"
        }
      ]
    },
    "build:datadog-slos-slo": {
      "name": "build:datadog-slos-slo",
      "description": "build datadog-slos-slo",
      "steps": [
        {
          "spawn": "compile:datadog-slos-slo"
        },
        {
          "spawn": "package:datadog-slos-slo"
        }
      ]
    },
    "build:dynatrace-configuration-dashboard": {
      "name": "build:dynatrace-configuration-dashboard",
      "description": "build dynatrace-configuration-dashboard",
      "steps": [
        {
          "spawn": "compile:dynatrace-configuration-dashboard"
        },
        {
          "spawn": "package:dynatrace-configuration-dashboard"
        }
      ]
    },
    "build:dynatrace-environment-servicelevelobjective": {
      "name": "build:dynatrace-environment-servicelevelobjective",
      "description": "build dynatrace-environment-servicelevelobjective",
      "steps": [
        {
          "spawn": "compile:dynatrace-environment-servicelevelobjective"
        },
        {
          "spawn": "package:dynatrace-environment-servicelevelobjective"
        }
      ]
    },
    "build:dynatrace-environment-syntheticlocation": {
      "name": "build:dynatrace-environment-syntheticlocation",
      "description": "build dynatrace-environment-syntheticlocation",
      "steps": [
        {
          "spawn": "compile:dynatrace-environment-syntheticlocation"
        },
        {
          "spawn": "package:dynatrace-environment-syntheticlocation"
        }
      ]
    },
    "build:dynatrace-environment-syntheticmonitor": {
      "name": "build:dynatrace-environment-syntheticmonitor",
      "description": "build dynatrace-environment-syntheticmonitor",
      "steps": [
        {
          "spawn": "compile:dynatrace-environment-syntheticmonitor"
        },
        {
          "spawn": "package:dynatrace-environment-syntheticmonitor"
        }
      ]
    },
    "build:fastly-dictionary-dictionary": {
      "name": "build:fastly-dictionary-dictionary",
      "description": "build fastly-dictionary-dictionary",
      "steps": [
        {
          "spawn": "compile:fastly-dictionary-dictionary"
        },
        {
          "spawn": "package:fastly-dictionary-dictionary"
        }
      ]
    },
    "build:fastly-dictionary-dictionaryitem": {
      "name": "build:fastly-dictionary-dictionaryitem",
      "description": "build fastly-dictionary-dictionaryitem",
      "steps": [
        {
          "spawn": "compile:fastly-dictionary-dictionaryitem"
        },
        {
          "spawn": "package:fastly-dictionary-dictionaryitem"
        }
      ]
    },
    "build:fastly-services-backend": {
      "name": "build:fastly-services-backend",
      "description": "build fastly-services-backend",
      "steps": [
        {
          "spawn": "compile:fastly-services-backend"
        },
        {
          "spawn": "package:fastly-services-backend"
        }
      ]
    },
    "build:fastly-services-domain": {
      "name": "build:fastly-services-domain",
      "description": "build fastly-services-domain",
      "steps": [
        {
          "spawn": "compile:fastly-services-domain"
        },
        {
          "spawn": "package:fastly-services-domain"
        }
      ]
    },
    "build:fastly-services-healthcheck": {
      "name": "build:fastly-services-healthcheck",
      "description": "build fastly-services-healthcheck",
      "steps": [
        {
          "spawn": "compile:fastly-services-healthcheck"
        },
        {
          "spawn": "package:fastly-services-healthcheck"
        }
      ]
    },
    "build:fastly-services-service": {
      "name": "build:fastly-services-service",
      "description": "build fastly-services-service",
      "steps": [
        {
          "spawn": "compile:fastly-services-service"
        },
        {
          "spawn": "package:fastly-services-service"
        }
      ]
    },
    "build:fireeye-cloudintegrations-cloudwatch": {
      "name": "build:fireeye-cloudintegrations-cloudwatch",
      "description": "build fireeye-cloudintegrations-cloudwatch",
      "steps": [
        {
          "spawn": "compile:fireeye-cloudintegrations-cloudwatch"
        },
        {
          "spawn": "package:fireeye-cloudintegrations-cloudwatch"
        }
      ]
    },
    "build:freyraim-impactapi-apigateway-module": {
      "name": "build:freyraim-impactapi-apigateway-module",
      "description": "build freyraim-impactapi-apigateway-module",
      "steps": [
        {
          "spawn": "compile:freyraim-impactapi-apigateway-module"
        },
        {
          "spawn": "package:freyraim-impactapi-apigateway-module"
        }
      ]
    },
    "build:freyraim-impactapi-apihandle-module": {
      "name": "build:freyraim-impactapi-apihandle-module",
      "description": "build freyraim-impactapi-apihandle-module",
      "steps": [
        {
          "spawn": "compile:freyraim-impactapi-apihandle-module"
        },
        {
          "spawn": "package:freyraim-impactapi-apihandle-module"
        }
      ]
    },
    "build:freyraim-impactapi-ec2instance-module": {
      "name": "build:freyraim-impactapi-ec2instance-module",
      "description": "build freyraim-impactapi-ec2instance-module",
      "steps": [
        {
          "spawn": "compile:freyraim-impactapi-ec2instance-module"
        },
        {
          "spawn": "package:freyraim-impactapi-ec2instance-module"
        }
      ]
    },
    "build:freyraim-impactapi-lambdafunction-module": {
      "name": "build:freyraim-impactapi-lambdafunction-module",
      "description": "build freyraim-impactapi-lambdafunction-module",
      "steps": [
        {
          "spawn": "compile:freyraim-impactapi-lambdafunction-module"
        },
        {
          "spawn": "package:freyraim-impactapi-lambdafunction-module"
        }
      ]
    },
    "build:freyraim-impactapi-loadbalancer-module": {
      "name": "build:freyraim-impactapi-loadbalancer-module",
      "description": "build freyraim-impactapi-loadbalancer-module",
      "steps": [
        {
          "spawn": "compile:freyraim-impactapi-loadbalancer-module"
        },
        {
          "spawn": "package:freyraim-impactapi-loadbalancer-module"
        }
      ]
    },
    "build:freyraim-spider-cloudfront-module": {
      "name": "build:freyraim-spider-cloudfront-module",
      "description": "build freyraim-spider-cloudfront-module",
      "steps": [
        {
          "spawn": "compile:freyraim-spider-cloudfront-module"
        },
        {
          "spawn": "package:freyraim-spider-cloudfront-module"
        }
      ]
    },
    "build:freyraim-spider-ec2instance-module": {
      "name": "build:freyraim-spider-ec2instance-module",
      "description": "build freyraim-spider-ec2instance-module",
      "steps": [
        {
          "spawn": "compile:freyraim-spider-ec2instance-module"
        },
        {
          "spawn": "package:freyraim-spider-ec2instance-module"
        }
      ]
    },
    "build:freyraim-spider-ecs-module": {
      "name": "build:freyraim-spider-ecs-module",
      "description": "build freyraim-spider-ecs-module",
      "steps": [
        {
          "spawn": "compile:freyraim-spider-ecs-module"
        },
        {
          "spawn": "package:freyraim-spider-ecs-module"
        }
      ]
    },
    "build:freyraim-spider-loadbalancer-module": {
      "name": "build:freyraim-spider-loadbalancer-module",
      "description": "build freyraim-spider-loadbalancer-module",
      "steps": [
        {
          "spawn": "compile:freyraim-spider-loadbalancer-module"
        },
        {
          "spawn": "package:freyraim-spider-loadbalancer-module"
        }
      ]
    },
    "build:freyraim-spider-postgresql-module": {
      "name": "build:freyraim-spider-postgresql-module",
      "description": "build freyraim-spider-postgresql-module",
      "steps": [
        {
          "spawn": "compile:freyraim-spider-postgresql-module"
        },
        {
          "spawn": "package:freyraim-spider-postgresql-module"
        }
      ]
    },
    "build:freyraim-spider-s3bucket-module": {
      "name": "build:freyraim-spider-s3bucket-module",
      "description": "build freyraim-spider-s3bucket-module",
      "steps": [
        {
          "spawn": "compile:freyraim-spider-s3bucket-module"
        },
        {
          "spawn": "package:freyraim-spider-s3bucket-module"
        }
      ]
    },
    "build:generic-database-schema": {
      "name": "build:generic-database-schema",
      "description": "build generic-database-schema",
      "steps": [
        {
          "spawn": "compile:generic-database-schema"
        },
        {
          "spawn": "package:generic-database-schema"
        }
      ]
    },
    "build:generic-secretsprotection-hook": {
      "name": "build:generic-secretsprotection-hook",
      "description": "build generic-secretsprotection-hook",
      "steps": [
        {
          "spawn": "compile:generic-secretsprotection-hook"
        },
        {
          "spawn": "package:generic-secretsprotection-hook"
        }
      ]
    },
    "build:generic-transcribe-vocabulary": {
      "name": "build:generic-transcribe-vocabulary",
      "description": "build generic-transcribe-vocabulary",
      "steps": [
        {
          "spawn": "compile:generic-transcribe-vocabulary"
        },
        {
          "spawn": "package:generic-transcribe-vocabulary"
        }
      ]
    },
    "build:github-git-tag": {
      "name": "build:github-git-tag",
      "description": "build github-git-tag",
      "steps": [
        {
          "spawn": "compile:github-git-tag"
        },
        {
          "spawn": "package:github-git-tag"
        }
      ]
    },
    "build:github-organizations-membership": {
      "name": "build:github-organizations-membership",
      "description": "build github-organizations-membership",
      "steps": [
        {
          "spawn": "compile:github-organizations-membership"
        },
        {
          "spawn": "package:github-organizations-membership"
        }
      ]
    },
    "build:github-repositories-collaborator": {
      "name": "build:github-repositories-collaborator",
      "description": "build github-repositories-collaborator",
      "steps": [
        {
          "spawn": "compile:github-repositories-collaborator"
        },
        {
          "spawn": "package:github-repositories-collaborator"
        }
      ]
    },
    "build:github-repositories-repository": {
      "name": "build:github-repositories-repository",
      "description": "build github-repositories-repository",
      "steps": [
        {
          "spawn": "compile:github-repositories-repository"
        },
        {
          "spawn": "package:github-repositories-repository"
        }
      ]
    },
    "build:github-repositories-webhook": {
      "name": "build:github-repositories-webhook",
      "description": "build github-repositories-webhook",
      "steps": [
        {
          "spawn": "compile:github-repositories-webhook"
        },
        {
          "spawn": "package:github-repositories-webhook"
        }
      ]
    },
    "build:github-teams-membership": {
      "name": "build:github-teams-membership",
      "description": "build github-teams-membership",
      "steps": [
        {
          "spawn": "compile:github-teams-membership"
        },
        {
          "spawn": "package:github-teams-membership"
        }
      ]
    },
    "build:github-teams-repositoryaccess": {
      "name": "build:github-teams-repositoryaccess",
      "description": "build github-teams-repositoryaccess",
      "steps": [
        {
          "spawn": "compile:github-teams-repositoryaccess"
        },
        {
          "spawn": "package:github-teams-repositoryaccess"
        }
      ]
    },
    "build:github-teams-team": {
      "name": "build:github-teams-team",
      "description": "build github-teams-team",
      "steps": [
        {
          "spawn": "compile:github-teams-team"
        },
        {
          "spawn": "package:github-teams-team"
        }
      ]
    },
    "build:gitlab-code-tag": {
      "name": "build:gitlab-code-tag",
      "description": "build gitlab-code-tag",
      "steps": [
        {
          "spawn": "compile:gitlab-code-tag"
        },
        {
          "spawn": "package:gitlab-code-tag"
        }
      ]
    },
    "build:gitlab-groups-group": {
      "name": "build:gitlab-groups-group",
      "description": "build gitlab-groups-group",
      "steps": [
        {
          "spawn": "compile:gitlab-groups-group"
        },
        {
          "spawn": "package:gitlab-groups-group"
        }
      ]
    },
    "build:gitlab-groups-groupaccesstogroup": {
      "name": "build:gitlab-groups-groupaccesstogroup",
      "description": "build gitlab-groups-groupaccesstogroup",
      "steps": [
        {
          "spawn": "compile:gitlab-groups-groupaccesstogroup"
        },
        {
          "spawn": "package:gitlab-groups-groupaccesstogroup"
        }
      ]
    },
    "build:gitlab-groups-usermemberofgroup": {
      "name": "build:gitlab-groups-usermemberofgroup",
      "description": "build gitlab-groups-usermemberofgroup",
      "steps": [
        {
          "spawn": "compile:gitlab-groups-usermemberofgroup"
        },
        {
          "spawn": "package:gitlab-groups-usermemberofgroup"
        }
      ]
    },
    "build:gitlab-projects-accesstoken": {
      "name": "build:gitlab-projects-accesstoken",
      "description": "build gitlab-projects-accesstoken",
      "steps": [
        {
          "spawn": "compile:gitlab-projects-accesstoken"
        },
        {
          "spawn": "package:gitlab-projects-accesstoken"
        }
      ]
    },
    "build:gitlab-projects-groupaccesstoproject": {
      "name": "build:gitlab-projects-groupaccesstoproject",
      "description": "build gitlab-projects-groupaccesstoproject",
      "steps": [
        {
          "spawn": "compile:gitlab-projects-groupaccesstoproject"
        },
        {
          "spawn": "package:gitlab-projects-groupaccesstoproject"
        }
      ]
    },
    "build:gitlab-projects-project": {
      "name": "build:gitlab-projects-project",
      "description": "build gitlab-projects-project",
      "steps": [
        {
          "spawn": "compile:gitlab-projects-project"
        },
        {
          "spawn": "package:gitlab-projects-project"
        }
      ]
    },
    "build:gitlab-projects-usermemberofproject": {
      "name": "build:gitlab-projects-usermemberofproject",
      "description": "build gitlab-projects-usermemberofproject",
      "steps": [
        {
          "spawn": "compile:gitlab-projects-usermemberofproject"
        },
        {
          "spawn": "package:gitlab-projects-usermemberofproject"
        }
      ]
    },
    "build:gremlin-agent-helm": {
      "name": "build:gremlin-agent-helm",
      "description": "build gremlin-agent-helm",
      "steps": [
        {
          "spawn": "compile:gremlin-agent-helm"
        },
        {
          "spawn": "package:gremlin-agent-helm"
        }
      ]
    },
    "build:jfrog-artifactory-core-module": {
      "name": "build:jfrog-artifactory-core-module",
      "description": "build jfrog-artifactory-core-module",
      "steps": [
        {
          "spawn": "compile:jfrog-artifactory-core-module"
        },
        {
          "spawn": "package:jfrog-artifactory-core-module"
        }
      ]
    },
    "build:jfrog-artifactory-ec2instance-module": {
      "name": "build:jfrog-artifactory-ec2instance-module",
      "description": "build jfrog-artifactory-ec2instance-module",
      "steps": [
        {
          "spawn": "compile:jfrog-artifactory-ec2instance-module"
        },
        {
          "spawn": "package:jfrog-artifactory-ec2instance-module"
        }
      ]
    },
    "build:jfrog-artifactory-existingvpc-module": {
      "name": "build:jfrog-artifactory-existingvpc-module",
      "description": "build jfrog-artifactory-existingvpc-module",
      "steps": [
        {
          "spawn": "compile:jfrog-artifactory-existingvpc-module"
        },
        {
          "spawn": "package:jfrog-artifactory-existingvpc-module"
        }
      ]
    },
    "build:jfrog-artifactory-newvpc-module": {
      "name": "build:jfrog-artifactory-newvpc-module",
      "description": "build jfrog-artifactory-newvpc-module",
      "steps": [
        {
          "spawn": "compile:jfrog-artifactory-newvpc-module"
        },
        {
          "spawn": "package:jfrog-artifactory-newvpc-module"
        }
      ]
    },
    "build:jfrog-linux-bastion-module": {
      "name": "build:jfrog-linux-bastion-module",
      "description": "build jfrog-linux-bastion-module",
      "steps": [
        {
          "spawn": "compile:jfrog-linux-bastion-module"
        },
        {
          "spawn": "package:jfrog-linux-bastion-module"
        }
      ]
    },
    "build:jfrog-vpc-multiaz-module": {
      "name": "build:jfrog-vpc-multiaz-module",
      "description": "build jfrog-vpc-multiaz-module",
      "steps": [
        {
          "spawn": "compile:jfrog-vpc-multiaz-module"
        },
        {
          "spawn": "package:jfrog-vpc-multiaz-module"
        }
      ]
    },
    "build:jfrog-xray-ec2instance-module": {
      "name": "build:jfrog-xray-ec2instance-module",
      "description": "build jfrog-xray-ec2instance-module",
      "steps": [
        {
          "spawn": "compile:jfrog-xray-ec2instance-module"
        },
        {
          "spawn": "package:jfrog-xray-ec2instance-module"
        }
      ]
    },
    "build:karte-eventbridge-documentdb-module": {
      "name": "build:karte-eventbridge-documentdb-module",
      "description": "build karte-eventbridge-documentdb-module",
      "steps": [
        {
          "spawn": "compile:karte-eventbridge-documentdb-module"
        },
        {
          "spawn": "package:karte-eventbridge-documentdb-module"
        }
      ]
    },
    "build:logzio-autodeploymentlogzio-cloudwatch-module": {
      "name": "build:logzio-autodeploymentlogzio-cloudwatch-module",
      "description": "build logzio-autodeploymentlogzio-cloudwatch-module",
      "steps": [
        {
          "spawn": "compile:logzio-autodeploymentlogzio-cloudwatch-module"
        },
        {
          "spawn": "package:logzio-autodeploymentlogzio-cloudwatch-module"
        }
      ]
    },
    "build:logzio-awscostandusage-cur-module": {
      "name": "build:logzio-awscostandusage-cur-module",
      "description": "build logzio-awscostandusage-cur-module",
      "steps": [
        {
          "spawn": "compile:logzio-awscostandusage-cur-module"
        },
        {
          "spawn": "package:logzio-awscostandusage-cur-module"
        }
      ]
    },
    "build:logzio-awssecurityhub-collector-module": {
      "name": "build:logzio-awssecurityhub-collector-module",
      "description": "build logzio-awssecurityhub-collector-module",
      "steps": [
        {
          "spawn": "compile:logzio-awssecurityhub-collector-module"
        },
        {
          "spawn": "package:logzio-awssecurityhub-collector-module"
        }
      ]
    },
    "build:logzio-kinesisshipper-kinesisshipper-module": {
      "name": "build:logzio-kinesisshipper-kinesisshipper-module",
      "description": "build logzio-kinesisshipper-kinesisshipper-module",
      "steps": [
        {
          "spawn": "compile:logzio-kinesisshipper-kinesisshipper-module"
        },
        {
          "spawn": "package:logzio-kinesisshipper-kinesisshipper-module"
        }
      ]
    },
    "build:logzio-myservice-myname-module": {
      "name": "build:logzio-myservice-myname-module",
      "description": "build logzio-myservice-myname-module",
      "steps": [
        {
          "spawn": "compile:logzio-myservice-myname-module"
        },
        {
          "spawn": "package:logzio-myservice-myname-module"
        }
      ]
    },
    "build:mongodb-atlas-alertconfiguration": {
      "name": "build:mongodb-atlas-alertconfiguration",
      "description": "build mongodb-atlas-alertconfiguration",
      "steps": [
        {
          "spawn": "compile:mongodb-atlas-alertconfiguration"
        },
        {
          "spawn": "package:mongodb-atlas-alertconfiguration"
        }
      ]
    },
    "build:mongodb-atlas-auditing": {
      "name": "build:mongodb-atlas-auditing",
      "description": "build mongodb-atlas-auditing",
      "steps": [
        {
          "spawn": "compile:mongodb-atlas-auditing"
        },
        {
          "spawn": "package:mongodb-atlas-auditing"
        }
      ]
    },
    "build:mongodb-atlas-awsiamdatabaseuser": {
      "name": "build:mongodb-atlas-awsiamdatabaseuser",
      "description": "build mongodb-atlas-awsiamdatabaseuser",
      "steps": [
        {
          "spawn": "compile:mongodb-atlas-awsiamdatabaseuser"
        },
        {
          "spawn": "package:mongodb-atlas-awsiamdatabaseuser"
        }
      ]
    },
    "build:mongodb-atlas-cloudbackuprestorejobs": {
      "name": "build:mongodb-atlas-cloudbackuprestorejobs",
      "description": "build mongodb-atlas-cloudbackuprestorejobs",
      "steps": [
        {
          "spawn": "compile:mongodb-atlas-cloudbackuprestorejobs"
        },
        {
          "spawn": "package:mongodb-atlas-cloudbackuprestorejobs"
        }
      ]
    },
    "build:mongodb-atlas-cloudbackupschedule": {
      "name": "build:mongodb-atlas-cloudbackupschedule",
      "description": "build mongodb-atlas-cloudbackupschedule",
      "steps": [
        {
          "spawn": "compile:mongodb-atlas-cloudbackupschedule"
        },
        {
          "spawn": "package:mongodb-atlas-cloudbackupschedule"
        }
      ]
    },
    "build:mongodb-atlas-cloudbackupsnapshot": {
      "name": "build:mongodb-atlas-cloudbackupsnapshot",
      "description": "build mongodb-atlas-cloudbackupsnapshot",
      "steps": [
        {
          "spawn": "compile:mongodb-atlas-cloudbackupsnapshot"
        },
        {
          "spawn": "package:mongodb-atlas-cloudbackupsnapshot"
        }
      ]
    },
    "build:mongodb-atlas-cloudbackupsnapshotexportbucket": {
      "name": "build:mongodb-atlas-cloudbackupsnapshotexportbucket",
      "description": "build mongodb-atlas-cloudbackupsnapshotexportbucket",
      "steps": [
        {
          "spawn": "compile:mongodb-atlas-cloudbackupsnapshotexportbucket"
        },
        {
          "spawn": "package:mongodb-atlas-cloudbackupsnapshotexportbucket"
        }
      ]
    },
    "build:mongodb-atlas-cluster": {
      "name": "build:mongodb-atlas-cluster",
      "description": "build mongodb-atlas-cluster",
      "steps": [
        {
          "spawn": "compile:mongodb-atlas-cluster"
        },
        {
          "spawn": "package:mongodb-atlas-cluster"
        }
      ]
    },
    "build:mongodb-atlas-customdbrole": {
      "name": "build:mongodb-atlas-customdbrole",
      "description": "build mongodb-atlas-customdbrole",
      "steps": [
        {
          "spawn": "compile:mongodb-atlas-customdbrole"
        },
        {
          "spawn": "package:mongodb-atlas-customdbrole"
        }
      ]
    },
    "build:mongodb-atlas-customdnsconfigurationclusteraws": {
      "name": "build:mongodb-atlas-customdnsconfigurationclusteraws",
      "description": "build mongodb-atlas-customdnsconfigurationclusteraws",
      "steps": [
        {
          "spawn": "compile:mongodb-atlas-customdnsconfigurationclusteraws"
        },
        {
          "spawn": "package:mongodb-atlas-customdnsconfigurationclusteraws"
        }
      ]
    },
    "build:mongodb-atlas-databaseuser": {
      "name": "build:mongodb-atlas-databaseuser",
      "description": "build mongodb-atlas-databaseuser",
      "steps": [
        {
          "spawn": "compile:mongodb-atlas-databaseuser"
        },
        {
          "spawn": "package:mongodb-atlas-databaseuser"
        }
      ]
    },
    "build:mongodb-atlas-datalakes": {
      "name": "build:mongodb-atlas-datalakes",
      "description": "build mongodb-atlas-datalakes",
      "steps": [
        {
          "spawn": "compile:mongodb-atlas-datalakes"
        },
        {
          "spawn": "package:mongodb-atlas-datalakes"
        }
      ]
    },
    "build:mongodb-atlas-encryptionatrest": {
      "name": "build:mongodb-atlas-encryptionatrest",
      "description": "build mongodb-atlas-encryptionatrest",
      "steps": [
        {
          "spawn": "compile:mongodb-atlas-encryptionatrest"
        },
        {
          "spawn": "package:mongodb-atlas-encryptionatrest"
        }
      ]
    },
    "build:mongodb-atlas-federatedsettingsorgrolemapping": {
      "name": "build:mongodb-atlas-federatedsettingsorgrolemapping",
      "description": "build mongodb-atlas-federatedsettingsorgrolemapping",
      "steps": [
        {
          "spawn": "compile:mongodb-atlas-federatedsettingsorgrolemapping"
        },
        {
          "spawn": "package:mongodb-atlas-federatedsettingsorgrolemapping"
        }
      ]
    },
    "build:mongodb-atlas-globalclusterconfig": {
      "name": "build:mongodb-atlas-globalclusterconfig",
      "description": "build mongodb-atlas-globalclusterconfig",
      "steps": [
        {
          "spawn": "compile:mongodb-atlas-globalclusterconfig"
        },
        {
          "spawn": "package:mongodb-atlas-globalclusterconfig"
        }
      ]
    },
    "build:mongodb-atlas-ldapconfiguration": {
      "name": "build:mongodb-atlas-ldapconfiguration",
      "description": "build mongodb-atlas-ldapconfiguration",
      "steps": [
        {
          "spawn": "compile:mongodb-atlas-ldapconfiguration"
        },
        {
          "spawn": "package:mongodb-atlas-ldapconfiguration"
        }
      ]
    },
    "build:mongodb-atlas-ldapverify": {
      "name": "build:mongodb-atlas-ldapverify",
      "description": "build mongodb-atlas-ldapverify",
      "steps": [
        {
          "spawn": "compile:mongodb-atlas-ldapverify"
        },
        {
          "spawn": "package:mongodb-atlas-ldapverify"
        }
      ]
    },
    "build:mongodb-atlas-maintenancewindow": {
      "name": "build:mongodb-atlas-maintenancewindow",
      "description": "build mongodb-atlas-maintenancewindow",
      "steps": [
        {
          "spawn": "compile:mongodb-atlas-maintenancewindow"
        },
        {
          "spawn": "package:mongodb-atlas-maintenancewindow"
        }
      ]
    },
    "build:mongodb-atlas-networkcontainer": {
      "name": "build:mongodb-atlas-networkcontainer",
      "description": "build mongodb-atlas-networkcontainer",
      "steps": [
        {
          "spawn": "compile:mongodb-atlas-networkcontainer"
        },
        {
          "spawn": "package:mongodb-atlas-networkcontainer"
        }
      ]
    },
    "build:mongodb-atlas-networkpeering": {
      "name": "build:mongodb-atlas-networkpeering",
      "description": "build mongodb-atlas-networkpeering",
      "steps": [
        {
          "spawn": "compile:mongodb-atlas-networkpeering"
        },
        {
          "spawn": "package:mongodb-atlas-networkpeering"
        }
      ]
    },
    "build:mongodb-atlas-onlinearchive": {
      "name": "build:mongodb-atlas-onlinearchive",
      "description": "build mongodb-atlas-onlinearchive",
      "steps": [
        {
          "spawn": "compile:mongodb-atlas-onlinearchive"
        },
        {
          "spawn": "package:mongodb-atlas-onlinearchive"
        }
      ]
    },
    "build:mongodb-atlas-orginvitation": {
      "name": "build:mongodb-atlas-orginvitation",
      "description": "build mongodb-atlas-orginvitation",
      "steps": [
        {
          "spawn": "compile:mongodb-atlas-orginvitation"
        },
        {
          "spawn": "package:mongodb-atlas-orginvitation"
        }
      ]
    },
    "build:mongodb-atlas-privateendpoint": {
      "name": "build:mongodb-atlas-privateendpoint",
      "description": "build mongodb-atlas-privateendpoint",
      "steps": [
        {
          "spawn": "compile:mongodb-atlas-privateendpoint"
        },
        {
          "spawn": "package:mongodb-atlas-privateendpoint"
        }
      ]
    },
    "build:mongodb-atlas-privateendpointadl": {
      "name": "build:mongodb-atlas-privateendpointadl",
      "description": "build mongodb-atlas-privateendpointadl",
      "steps": [
        {
          "spawn": "compile:mongodb-atlas-privateendpointadl"
        },
        {
          "spawn": "package:mongodb-atlas-privateendpointadl"
        }
      ]
    },
    "build:mongodb-atlas-privateendpointregionalmode": {
      "name": "build:mongodb-atlas-privateendpointregionalmode",
      "description": "build mongodb-atlas-privateendpointregionalmode",
      "steps": [
        {
          "spawn": "compile:mongodb-atlas-privateendpointregionalmode"
        },
        {
          "spawn": "package:mongodb-atlas-privateendpointregionalmode"
        }
      ]
    },
    "build:mongodb-atlas-project": {
      "name": "build:mongodb-atlas-project",
      "description": "build mongodb-atlas-project",
      "steps": [
        {
          "spawn": "compile:mongodb-atlas-project"
        },
        {
          "spawn": "package:mongodb-atlas-project"
        }
      ]
    },
    "build:mongodb-atlas-projectinvitation": {
      "name": "build:mongodb-atlas-projectinvitation",
      "description": "build mongodb-atlas-projectinvitation",
      "steps": [
        {
          "spawn": "compile:mongodb-atlas-projectinvitation"
        },
        {
          "spawn": "package:mongodb-atlas-projectinvitation"
        }
      ]
    },
    "build:mongodb-atlas-projectipaccesslist": {
      "name": "build:mongodb-atlas-projectipaccesslist",
      "description": "build mongodb-atlas-projectipaccesslist",
      "steps": [
        {
          "spawn": "compile:mongodb-atlas-projectipaccesslist"
        },
        {
          "spawn": "package:mongodb-atlas-projectipaccesslist"
        }
      ]
    },
    "build:mongodb-atlas-searchindex": {
      "name": "build:mongodb-atlas-searchindex",
      "description": "build mongodb-atlas-searchindex",
      "steps": [
        {
          "spawn": "compile:mongodb-atlas-searchindex"
        },
        {
          "spawn": "package:mongodb-atlas-searchindex"
        }
      ]
    },
    "build:mongodb-atlas-serverlessinstance": {
      "name": "build:mongodb-atlas-serverlessinstance",
      "description": "build mongodb-atlas-serverlessinstance",
      "steps": [
        {
          "spawn": "compile:mongodb-atlas-serverlessinstance"
        },
        {
          "spawn": "package:mongodb-atlas-serverlessinstance"
        }
      ]
    },
    "build:mongodb-atlas-teams": {
      "name": "build:mongodb-atlas-teams",
      "description": "build mongodb-atlas-teams",
      "steps": [
        {
          "spawn": "compile:mongodb-atlas-teams"
        },
        {
          "spawn": "package:mongodb-atlas-teams"
        }
      ]
    },
    "build:mongodb-atlas-thirdpartyintegration": {
      "name": "build:mongodb-atlas-thirdpartyintegration",
      "description": "build mongodb-atlas-thirdpartyintegration",
      "steps": [
        {
          "spawn": "compile:mongodb-atlas-thirdpartyintegration"
        },
        {
          "spawn": "package:mongodb-atlas-thirdpartyintegration"
        }
      ]
    },
    "build:mongodb-atlas-trigger": {
      "name": "build:mongodb-atlas-trigger",
      "description": "build mongodb-atlas-trigger",
      "steps": [
        {
          "spawn": "compile:mongodb-atlas-trigger"
        },
        {
          "spawn": "package:mongodb-atlas-trigger"
        }
      ]
    },
    "build:mongodb-atlas-x509authenticationdatabaseuser": {
      "name": "build:mongodb-atlas-x509authenticationdatabaseuser",
      "description": "build mongodb-atlas-x509authenticationdatabaseuser",
      "steps": [
        {
          "spawn": "compile:mongodb-atlas-x509authenticationdatabaseuser"
        },
        {
          "spawn": "package:mongodb-atlas-x509authenticationdatabaseuser"
        }
      ]
    },
    "build:newrelic-cloudformation-dashboards": {
      "name": "build:newrelic-cloudformation-dashboards",
      "description": "build newrelic-cloudformation-dashboards",
      "steps": [
        {
          "spawn": "compile:newrelic-cloudformation-dashboards"
        },
        {
          "spawn": "package:newrelic-cloudformation-dashboards"
        }
      ]
    },
    "build:newrelic-cloudformation-tagging": {
      "name": "build:newrelic-cloudformation-tagging",
      "description": "build newrelic-cloudformation-tagging",
      "steps": [
        {
          "spawn": "compile:newrelic-cloudformation-tagging"
        },
        {
          "spawn": "package:newrelic-cloudformation-tagging"
        }
      ]
    },
    "build:newrelic-cloudformation-workloads": {
      "name": "build:newrelic-cloudformation-workloads",
      "description": "build newrelic-cloudformation-workloads",
      "steps": [
        {
          "spawn": "compile:newrelic-cloudformation-workloads"
        },
        {
          "spawn": "package:newrelic-cloudformation-workloads"
        }
      ]
    },
    "build:newrelic-observability-dashboards": {
      "name": "build:newrelic-observability-dashboards",
      "description": "build newrelic-observability-dashboards",
      "steps": [
        {
          "spawn": "compile:newrelic-observability-dashboards"
        },
        {
          "spawn": "package:newrelic-observability-dashboards"
        }
      ]
    },
    "build:newrelic-observability-workloads": {
      "name": "build:newrelic-observability-workloads",
      "description": "build newrelic-observability-workloads",
      "steps": [
        {
          "spawn": "compile:newrelic-observability-workloads"
        },
        {
          "spawn": "package:newrelic-observability-workloads"
        }
      ]
    },
    "build:okta-application-application": {
      "name": "build:okta-application-application",
      "description": "build okta-application-application",
      "steps": [
        {
          "spawn": "compile:okta-application-application"
        },
        {
          "spawn": "package:okta-application-application"
        }
      ]
    },
    "build:okta-group-group": {
      "name": "build:okta-group-group",
      "description": "build okta-group-group",
      "steps": [
        {
          "spawn": "compile:okta-group-group"
        },
        {
          "spawn": "package:okta-group-group"
        }
      ]
    },
    "build:okta-group-groupapplicationassociation": {
      "name": "build:okta-group-groupapplicationassociation",
      "description": "build okta-group-groupapplicationassociation",
      "steps": [
        {
          "spawn": "compile:okta-group-groupapplicationassociation"
        },
        {
          "spawn": "package:okta-group-groupapplicationassociation"
        }
      ]
    },
    "build:okta-group-membership": {
      "name": "build:okta-group-membership",
      "description": "build okta-group-membership",
      "steps": [
        {
          "spawn": "compile:okta-group-membership"
        },
        {
          "spawn": "package:okta-group-membership"
        }
      ]
    },
    "build:okta-policy-policy": {
      "name": "build:okta-policy-policy",
      "description": "build okta-policy-policy",
      "steps": [
        {
          "spawn": "compile:okta-policy-policy"
        },
        {
          "spawn": "package:okta-policy-policy"
        }
      ]
    },
    "build:org-test-sample-module": {
      "name": "build:org-test-sample-module",
      "description": "build org-test-sample-module",
      "steps": [
        {
          "spawn": "compile:org-test-sample-module"
        },
        {
          "spawn": "package:org-test-sample-module"
        }
      ]
    },
    "build:pagerduty-escalationpolicies-escalationpolicy": {
      "name": "build:pagerduty-escalationpolicies-escalationpolicy",
      "description": "build pagerduty-escalationpolicies-escalationpolicy",
      "steps": [
        {
          "spawn": "compile:pagerduty-escalationpolicies-escalationpolicy"
        },
        {
          "spawn": "package:pagerduty-escalationpolicies-escalationpolicy"
        }
      ]
    },
    "build:pagerduty-responseplays-responseplay": {
      "name": "build:pagerduty-responseplays-responseplay",
      "description": "build pagerduty-responseplays-responseplay",
      "steps": [
        {
          "spawn": "compile:pagerduty-responseplays-responseplay"
        },
        {
          "spawn": "package:pagerduty-responseplays-responseplay"
        }
      ]
    },
    "build:pagerduty-schedules-schedule": {
      "name": "build:pagerduty-schedules-schedule",
      "description": "build pagerduty-schedules-schedule",
      "steps": [
        {
          "spawn": "compile:pagerduty-schedules-schedule"
        },
        {
          "spawn": "package:pagerduty-schedules-schedule"
        }
      ]
    },
    "build:pagerduty-teams-membership": {
      "name": "build:pagerduty-teams-membership",
      "description": "build pagerduty-teams-membership",
      "steps": [
        {
          "spawn": "compile:pagerduty-teams-membership"
        },
        {
          "spawn": "package:pagerduty-teams-membership"
        }
      ]
    },
    "build:pagerduty-teams-team": {
      "name": "build:pagerduty-teams-team",
      "description": "build pagerduty-teams-team",
      "steps": [
        {
          "spawn": "compile:pagerduty-teams-team"
        },
        {
          "spawn": "package:pagerduty-teams-team"
        }
      ]
    },
    "build:pagerduty-users-user": {
      "name": "build:pagerduty-users-user",
      "description": "build pagerduty-users-user",
      "steps": [
        {
          "spawn": "compile:pagerduty-users-user"
        },
        {
          "spawn": "package:pagerduty-users-user"
        }
      ]
    },
    "build:paloaltonetworks-cloudngfw-ngfw": {
      "name": "build:paloaltonetworks-cloudngfw-ngfw",
      "description": "build paloaltonetworks-cloudngfw-ngfw",
      "steps": [
        {
          "spawn": "compile:paloaltonetworks-cloudngfw-ngfw"
        },
        {
          "spawn": "package:paloaltonetworks-cloudngfw-ngfw"
        }
      ]
    },
    "build:paloaltonetworks-cloudngfw-rulestack": {
      "name": "build:paloaltonetworks-cloudngfw-rulestack",
      "description": "build paloaltonetworks-cloudngfw-rulestack",
      "steps": [
        {
          "spawn": "compile:paloaltonetworks-cloudngfw-rulestack"
        },
        {
          "spawn": "package:paloaltonetworks-cloudngfw-rulestack"
        }
      ]
    },
    "build:registry-test-resource1-module": {
      "name": "build:registry-test-resource1-module",
      "description": "build registry-test-resource1-module",
      "steps": [
        {
          "spawn": "compile:registry-test-resource1-module"
        },
        {
          "spawn": "package:registry-test-resource1-module"
        }
      ]
    },
    "build:rollbar-notifications-rule": {
      "name": "build:rollbar-notifications-rule",
      "description": "build rollbar-notifications-rule",
      "steps": [
        {
          "spawn": "compile:rollbar-notifications-rule"
        },
        {
          "spawn": "package:rollbar-notifications-rule"
        }
      ]
    },
    "build:rollbar-projects-accesstoken": {
      "name": "build:rollbar-projects-accesstoken",
      "description": "build rollbar-projects-accesstoken",
      "steps": [
        {
          "spawn": "compile:rollbar-projects-accesstoken"
        },
        {
          "spawn": "package:rollbar-projects-accesstoken"
        }
      ]
    },
    "build:rollbar-projects-project": {
      "name": "build:rollbar-projects-project",
      "description": "build rollbar-projects-project",
      "steps": [
        {
          "spawn": "compile:rollbar-projects-project"
        },
        {
          "spawn": "package:rollbar-projects-project"
        }
      ]
    },
    "build:rollbar-teams-membership": {
      "name": "build:rollbar-teams-membership",
      "description": "build rollbar-teams-membership",
      "steps": [
        {
          "spawn": "compile:rollbar-teams-membership"
        },
        {
          "spawn": "package:rollbar-teams-membership"
        }
      ]
    },
    "build:rollbar-teams-team": {
      "name": "build:rollbar-teams-team",
      "description": "build rollbar-teams-team",
      "steps": [
        {
          "spawn": "compile:rollbar-teams-team"
        },
        {
          "spawn": "package:rollbar-teams-team"
        }
      ]
    },
    "build:snowflake-database-database": {
      "name": "build:snowflake-database-database",
      "description": "build snowflake-database-database",
      "steps": [
        {
          "spawn": "compile:snowflake-database-database"
        },
        {
          "spawn": "package:snowflake-database-database"
        }
      ]
    },
    "build:snowflake-database-grant": {
      "name": "build:snowflake-database-grant",
      "description": "build snowflake-database-grant",
      "steps": [
        {
          "spawn": "compile:snowflake-database-grant"
        },
        {
          "spawn": "package:snowflake-database-grant"
        }
      ]
    },
    "build:snowflake-role-grant": {
      "name": "build:snowflake-role-grant",
      "description": "build snowflake-role-grant",
      "steps": [
        {
          "spawn": "compile:snowflake-role-grant"
        },
        {
          "spawn": "package:snowflake-role-grant"
        }
      ]
    },
    "build:snowflake-role-role": {
      "name": "build:snowflake-role-role",
      "description": "build snowflake-role-role",
      "steps": [
        {
          "spawn": "compile:snowflake-role-role"
        },
        {
          "spawn": "package:snowflake-role-role"
        }
      ]
    },
    "build:snowflake-user-user": {
      "name": "build:snowflake-user-user",
      "description": "build snowflake-user-user",
      "steps": [
        {
          "spawn": "compile:snowflake-user-user"
        },
        {
          "spawn": "package:snowflake-user-user"
        }
      ]
    },
    "build:snowflake-warehouse-grant": {
      "name": "build:snowflake-warehouse-grant",
      "description": "build snowflake-warehouse-grant",
      "steps": [
        {
          "spawn": "compile:snowflake-warehouse-grant"
        },
        {
          "spawn": "package:snowflake-warehouse-grant"
        }
      ]
    },
    "build:snyk-container-helm": {
      "name": "build:snyk-container-helm",
      "description": "build snyk-container-helm",
      "steps": [
        {
          "spawn": "compile:snyk-container-helm"
        },
        {
          "spawn": "package:snyk-container-helm"
        }
      ]
    },
    "build:splunk-enterprise-quickstart-module": {
      "name": "build:splunk-enterprise-quickstart-module",
      "description": "build splunk-enterprise-quickstart-module",
      "steps": [
        {
          "spawn": "compile:splunk-enterprise-quickstart-module"
        },
        {
          "spawn": "package:splunk-enterprise-quickstart-module"
        }
      ]
    },
    "build:spot-elastigroup-group": {
      "name": "build:spot-elastigroup-group",
      "description": "build spot-elastigroup-group",
      "steps": [
        {
          "spawn": "compile:spot-elastigroup-group"
        },
        {
          "spawn": "package:spot-elastigroup-group"
        }
      ]
    },
    "build:stackery-open-bastion-module": {
      "name": "build:stackery-open-bastion-module",
      "description": "build stackery-open-bastion-module",
      "steps": [
        {
          "spawn": "compile:stackery-open-bastion-module"
        },
        {
          "spawn": "package:stackery-open-bastion-module"
        }
      ]
    },
    "build:stocks-orders-marketorder": {
      "name": "build:stocks-orders-marketorder",
      "description": "build stocks-orders-marketorder",
      "steps": [
        {
          "spawn": "compile:stocks-orders-marketorder"
        },
        {
          "spawn": "package:stocks-orders-marketorder"
        }
      ]
    },
    "build:symphonia-opensource-cloudformationartifactsbucket-module": {
      "name": "build:symphonia-opensource-cloudformationartifactsbucket-module",
      "description": "build symphonia-opensource-cloudformationartifactsbucket-module",
      "steps": [
        {
          "spawn": "compile:symphonia-opensource-cloudformationartifactsbucket-module"
        },
        {
          "spawn": "package:symphonia-opensource-cloudformationartifactsbucket-module"
        }
      ]
    },
    "build:sysdig-helm-agent": {
      "name": "build:sysdig-helm-agent",
      "description": "build sysdig-helm-agent",
      "steps": [
        {
          "spawn": "compile:sysdig-helm-agent"
        },
        {
          "spawn": "package:sysdig-helm-agent"
        }
      ]
    },
    "build:tf-ad-computer": {
      "name": "build:tf-ad-computer",
      "description": "build tf-ad-computer",
      "steps": [
        {
          "spawn": "compile:tf-ad-computer"
        },
        {
          "spawn": "package:tf-ad-computer"
        }
      ]
    },
    "build:tf-ad-user": {
      "name": "build:tf-ad-user",
      "description": "build tf-ad-user",
      "steps": [
        {
          "spawn": "compile:tf-ad-user"
        },
        {
          "spawn": "package:tf-ad-user"
        }
      ]
    },
    "build:tf-aws-keypair": {
      "name": "build:tf-aws-keypair",
      "description": "build tf-aws-keypair",
      "steps": [
        {
          "spawn": "compile:tf-aws-keypair"
        },
        {
          "spawn": "package:tf-aws-keypair"
        }
      ]
    },
    "build:tf-aws-s3bucket": {
      "name": "build:tf-aws-s3bucket",
      "description": "build tf-aws-s3bucket",
      "steps": [
        {
          "spawn": "compile:tf-aws-s3bucket"
        },
        {
          "spawn": "package:tf-aws-s3bucket"
        }
      ]
    },
    "build:tf-aws-s3bucketobject": {
      "name": "build:tf-aws-s3bucketobject",
      "description": "build tf-aws-s3bucketobject",
      "steps": [
        {
          "spawn": "compile:tf-aws-s3bucketobject"
        },
        {
          "spawn": "package:tf-aws-s3bucketobject"
        }
      ]
    },
    "build:tf-azuread-application": {
      "name": "build:tf-azuread-application",
      "description": "build tf-azuread-application",
      "steps": [
        {
          "spawn": "compile:tf-azuread-application"
        },
        {
          "spawn": "package:tf-azuread-application"
        }
      ]
    },
    "build:tf-azuread-user": {
      "name": "build:tf-azuread-user",
      "description": "build tf-azuread-user",
      "steps": [
        {
          "spawn": "compile:tf-azuread-user"
        },
        {
          "spawn": "package:tf-azuread-user"
        }
      ]
    },
    "build:tf-cloudflare-record": {
      "name": "build:tf-cloudflare-record",
      "description": "build tf-cloudflare-record",
      "steps": [
        {
          "spawn": "compile:tf-cloudflare-record"
        },
        {
          "spawn": "package:tf-cloudflare-record"
        }
      ]
    },
    "build:tf-digitalocean-droplet": {
      "name": "build:tf-digitalocean-droplet",
      "description": "build tf-digitalocean-droplet",
      "steps": [
        {
          "spawn": "compile:tf-digitalocean-droplet"
        },
        {
          "spawn": "package:tf-digitalocean-droplet"
        }
      ]
    },
    "build:tf-github-repository": {
      "name": "build:tf-github-repository",
      "description": "build tf-github-repository",
      "steps": [
        {
          "spawn": "compile:tf-github-repository"
        },
        {
          "spawn": "package:tf-github-repository"
        }
      ]
    },
    "build:tf-google-storagebucket": {
      "name": "build:tf-google-storagebucket",
      "description": "build tf-google-storagebucket",
      "steps": [
        {
          "spawn": "compile:tf-google-storagebucket"
        },
        {
          "spawn": "package:tf-google-storagebucket"
        }
      ]
    },
    "build:tf-pagerduty-service": {
      "name": "build:tf-pagerduty-service",
      "description": "build tf-pagerduty-service",
      "steps": [
        {
          "spawn": "compile:tf-pagerduty-service"
        },
        {
          "spawn": "package:tf-pagerduty-service"
        }
      ]
    },
    "build:tf-random-string": {
      "name": "build:tf-random-string",
      "description": "build tf-random-string",
      "steps": [
        {
          "spawn": "compile:tf-random-string"
        },
        {
          "spawn": "package:tf-random-string"
        }
      ]
    },
    "build:tf-random-uuid": {
      "name": "build:tf-random-uuid",
      "description": "build tf-random-uuid",
      "steps": [
        {
          "spawn": "compile:tf-random-uuid"
        },
        {
          "spawn": "package:tf-random-uuid"
        }
      ]
    },
    "build:trendmicro-cloudonecontainer-helm": {
      "name": "build:trendmicro-cloudonecontainer-helm",
      "description": "build trendmicro-cloudonecontainer-helm",
      "steps": [
        {
          "spawn": "compile:trendmicro-cloudonecontainer-helm"
        },
        {
          "spawn": "package:trendmicro-cloudonecontainer-helm"
        }
      ]
    },
    "build:zmk-iam-lambdabasicrole-module": {
      "name": "build:zmk-iam-lambdabasicrole-module",
      "description": "build zmk-iam-lambdabasicrole-module",
      "steps": [
        {
          "spawn": "compile:zmk-iam-lambdabasicrole-module"
        },
        {
          "spawn": "package:zmk-iam-lambdabasicrole-module"
        }
      ]
    },
    "bump": {
      "name": "bump",
      "description": "Bumps version based on latest git tag and generates a changelog entry",
      "env": {
        "OUTFILE": "package.json",
        "CHANGELOG": "dist/changelog.md",
        "BUMPFILE": "dist/version.txt",
        "RELEASETAG": "dist/releasetag.txt",
        "RELEASE_TAG_PREFIX": ""
      },
      "steps": [
        {
          "builtin": "release/bump-version"
        }
      ],
      "condition": "! git log --oneline -1 | grep -q \"chore(release):\""
    },
    "cdk-deploy:github-connect": {
      "name": "cdk-deploy:github-connect",
      "steps": [
        {
          "exec": "cdk bootstrap aws://037840909260/us-east-1"
        },
        {
          "exec": "cdk deploy --app .awscdk/github-connect"
        }
      ]
    },
    "clobber": {
      "name": "clobber",
      "description": "hard resets to HEAD of origin and cleans the local repo",
      "env": {
        "BRANCH": "$(git branch --show-current)"
      },
      "steps": [
        {
          "exec": "git checkout -b scratch",
          "name": "save current HEAD in \"scratch\" branch"
        },
        {
          "exec": "git checkout $BRANCH"
        },
        {
          "exec": "git fetch origin",
          "name": "fetch latest changes from origin"
        },
        {
          "exec": "git reset --hard origin/$BRANCH",
          "name": "hard reset to origin commit"
        },
        {
          "exec": "git clean -fdx",
          "name": "clean all untracked files"
        },
        {
          "say": "ready to rock! (unpushed commits are under the \"scratch\" branch)"
        }
      ],
      "condition": "git diff --exit-code > /dev/null"
    },
    "compile": {
      "name": "compile",
      "description": "Only compile"
    },
    "compile:alexa-ask-skill": {
      "name": "compile:alexa-ask-skill",
      "description": "compile alexa-ask-skill with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/alexa-ask-skill"
    },
    "compile:aqua-enterprise-enforcer": {
      "name": "compile:aqua-enterprise-enforcer",
      "description": "compile aqua-enterprise-enforcer with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/aqua-enterprise-enforcer"
    },
    "compile:aqua-enterprise-kubeenforcer": {
      "name": "compile:aqua-enterprise-kubeenforcer",
      "description": "compile aqua-enterprise-kubeenforcer with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/aqua-enterprise-kubeenforcer"
    },
    "compile:aqua-enterprise-scanner": {
      "name": "compile:aqua-enterprise-scanner",
      "description": "compile aqua-enterprise-scanner with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/aqua-enterprise-scanner"
    },
    "compile:aqua-enterprise-server": {
      "name": "compile:aqua-enterprise-server",
      "description": "compile aqua-enterprise-server with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/aqua-enterprise-server"
    },
    "compile:atlassian-opsgenie-integration": {
      "name": "compile:atlassian-opsgenie-integration",
      "description": "compile atlassian-opsgenie-integration with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/atlassian-opsgenie-integration"
    },
    "compile:atlassian-opsgenie-team": {
      "name": "compile:atlassian-opsgenie-team",
      "description": "compile atlassian-opsgenie-team with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/atlassian-opsgenie-team"
    },
    "compile:atlassian-opsgenie-user": {
      "name": "compile:atlassian-opsgenie-user",
      "description": "compile atlassian-opsgenie-user with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/atlassian-opsgenie-user"
    },
    "compile:awscommunity-account-alternatecontact": {
      "name": "compile:awscommunity-account-alternatecontact",
      "description": "compile awscommunity-account-alternatecontact with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awscommunity-account-alternatecontact"
    },
    "compile:awscommunity-s3-deletebucketcontents": {
      "name": "compile:awscommunity-s3-deletebucketcontents",
      "description": "compile awscommunity-s3-deletebucketcontents with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awscommunity-s3-deletebucketcontents"
    },
    "compile:awsqs-checkpoint-cloudguardqs-module": {
      "name": "compile:awsqs-checkpoint-cloudguardqs-module",
      "description": "compile awsqs-checkpoint-cloudguardqs-module with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awsqs-checkpoint-cloudguardqs-module"
    },
    "compile:awsqs-ec2-linuxbastionqs-module": {
      "name": "compile:awsqs-ec2-linuxbastionqs-module",
      "description": "compile awsqs-ec2-linuxbastionqs-module with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awsqs-ec2-linuxbastionqs-module"
    },
    "compile:awsqs-eks-cluster": {
      "name": "compile:awsqs-eks-cluster",
      "description": "compile awsqs-eks-cluster with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awsqs-eks-cluster"
    },
    "compile:awsqs-iridium-cloudconnectqs-module": {
      "name": "compile:awsqs-iridium-cloudconnectqs-module",
      "description": "compile awsqs-iridium-cloudconnectqs-module with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awsqs-iridium-cloudconnectqs-module"
    },
    "compile:awsqs-kubernetes-get": {
      "name": "compile:awsqs-kubernetes-get",
      "description": "compile awsqs-kubernetes-get with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awsqs-kubernetes-get"
    },
    "compile:awsqs-kubernetes-helm": {
      "name": "compile:awsqs-kubernetes-helm",
      "description": "compile awsqs-kubernetes-helm with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awsqs-kubernetes-helm"
    },
    "compile:awsqs-kubernetes-resource": {
      "name": "compile:awsqs-kubernetes-resource",
      "description": "compile awsqs-kubernetes-resource with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awsqs-kubernetes-resource"
    },
    "compile:awsqs-vpc-vpcqs-module": {
      "name": "compile:awsqs-vpc-vpcqs-module",
      "description": "compile awsqs-vpc-vpcqs-module with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awsqs-vpc-vpcqs-module"
    },
    "compile:awssamples-ec2imageidcheckssm-hook": {
      "name": "compile:awssamples-ec2imageidcheckssm-hook",
      "description": "compile awssamples-ec2imageidcheckssm-hook with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awssamples-ec2imageidcheckssm-hook"
    },
    "compile:awssamples-ec2ssmsmonly-hook": {
      "name": "compile:awssamples-ec2ssmsmonly-hook",
      "description": "compile awssamples-ec2ssmsmonly-hook with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awssamples-ec2ssmsmonly-hook"
    },
    "compile:awssamples-ec2volumeencryptionkms-hook": {
      "name": "compile:awssamples-ec2volumeencryptionkms-hook",
      "description": "compile awssamples-ec2volumeencryptionkms-hook with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awssamples-ec2volumeencryptionkms-hook"
    },
    "compile:awssamples-efsencrypt-hook": {
      "name": "compile:awssamples-efsencrypt-hook",
      "description": "compile awssamples-efsencrypt-hook with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awssamples-efsencrypt-hook"
    },
    "compile:awssamples-eksclusterlogging-hook": {
      "name": "compile:awssamples-eksclusterlogging-hook",
      "description": "compile awssamples-eksclusterlogging-hook with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awssamples-eksclusterlogging-hook"
    },
    "compile:awssamples-eksclusterpublicapi-hook": {
      "name": "compile:awssamples-eksclusterpublicapi-hook",
      "description": "compile awssamples-eksclusterpublicapi-hook with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awssamples-eksclusterpublicapi-hook"
    },
    "compile:awssamples-fsxwindowsonly-hook": {
      "name": "compile:awssamples-fsxwindowsonly-hook",
      "description": "compile awssamples-fsxwindowsonly-hook with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awssamples-fsxwindowsonly-hook"
    },
    "compile:awssamples-iampoliciesrequiremfa-hook": {
      "name": "compile:awssamples-iampoliciesrequiremfa-hook",
      "description": "compile awssamples-iampoliciesrequiremfa-hook with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awssamples-iampoliciesrequiremfa-hook"
    },
    "compile:awssamples-iampolicydoesnotgiveadmin-hook": {
      "name": "compile:awssamples-iampolicydoesnotgiveadmin-hook",
      "description": "compile awssamples-iampolicydoesnotgiveadmin-hook with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awssamples-iampolicydoesnotgiveadmin-hook"
    },
    "compile:awssamples-iamprincipalboundary-hook": {
      "name": "compile:awssamples-iamprincipalboundary-hook",
      "description": "compile awssamples-iamprincipalboundary-hook with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awssamples-iamprincipalboundary-hook"
    },
    "compile:awssamples-iamusershavepolicy-hook": {
      "name": "compile:awssamples-iamusershavepolicy-hook",
      "description": "compile awssamples-iamusershavepolicy-hook with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awssamples-iamusershavepolicy-hook"
    },
    "compile:awssamples-noip6-hook": {
      "name": "compile:awssamples-noip6-hook",
      "description": "compile awssamples-noip6-hook with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awssamples-noip6-hook"
    },
    "compile:awssamples-rdsencrypt-hook": {
      "name": "compile:awssamples-rdsencrypt-hook",
      "description": "compile awssamples-rdsencrypt-hook with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awssamples-rdsencrypt-hook"
    },
    "compile:awssamples-s3blockpublicaccess-hook": {
      "name": "compile:awssamples-s3blockpublicaccess-hook",
      "description": "compile awssamples-s3blockpublicaccess-hook with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awssamples-s3blockpublicaccess-hook"
    },
    "compile:awssamples-s3bucketencrypt-hook": {
      "name": "compile:awssamples-s3bucketencrypt-hook",
      "description": "compile awssamples-s3bucketencrypt-hook with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awssamples-s3bucketencrypt-hook"
    },
    "compile:awssamples-s3bucketloggingcompliance-hook": {
      "name": "compile:awssamples-s3bucketloggingcompliance-hook",
      "description": "compile awssamples-s3bucketloggingcompliance-hook with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awssamples-s3bucketloggingcompliance-hook"
    },
    "compile:awssamples-s3bucketloggingenabled-hook": {
      "name": "compile:awssamples-s3bucketloggingenabled-hook",
      "description": "compile awssamples-s3bucketloggingenabled-hook with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awssamples-s3bucketloggingenabled-hook"
    },
    "compile:awssamples-securitygroupopeningress-hook": {
      "name": "compile:awssamples-securitygroupopeningress-hook",
      "description": "compile awssamples-securitygroupopeningress-hook with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awssamples-securitygroupopeningress-hook"
    },
    "compile:awssamples-sqsnonpublic-hook": {
      "name": "compile:awssamples-sqsnonpublic-hook",
      "description": "compile awssamples-sqsnonpublic-hook with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awssamples-sqsnonpublic-hook"
    },
    "compile:awssamples-sqspolicyencryption-hook": {
      "name": "compile:awssamples-sqspolicyencryption-hook",
      "description": "compile awssamples-sqspolicyencryption-hook with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awssamples-sqspolicyencryption-hook"
    },
    "compile:bigid-datasource-dynamodb": {
      "name": "compile:bigid-datasource-dynamodb",
      "description": "compile bigid-datasource-dynamodb with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/bigid-datasource-dynamodb"
    },
    "compile:bigid-datasource-s3": {
      "name": "compile:bigid-datasource-s3",
      "description": "compile bigid-datasource-s3 with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/bigid-datasource-s3"
    },
    "compile:cloudflare-dns-record": {
      "name": "compile:cloudflare-dns-record",
      "description": "compile cloudflare-dns-record with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/cloudflare-dns-record"
    },
    "compile:cloudflare-loadbalancer-loadbalancer": {
      "name": "compile:cloudflare-loadbalancer-loadbalancer",
      "description": "compile cloudflare-loadbalancer-loadbalancer with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/cloudflare-loadbalancer-loadbalancer"
    },
    "compile:cloudflare-loadbalancer-monitor": {
      "name": "compile:cloudflare-loadbalancer-monitor",
      "description": "compile cloudflare-loadbalancer-monitor with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/cloudflare-loadbalancer-monitor"
    },
    "compile:cloudflare-loadbalancer-pool": {
      "name": "compile:cloudflare-loadbalancer-pool",
      "description": "compile cloudflare-loadbalancer-pool with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/cloudflare-loadbalancer-pool"
    },
    "compile:confluentcloud-iam-serviceaccount": {
      "name": "compile:confluentcloud-iam-serviceaccount",
      "description": "compile confluentcloud-iam-serviceaccount with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/confluentcloud-iam-serviceaccount"
    },
    "compile:databricks-clusters-cluster": {
      "name": "compile:databricks-clusters-cluster",
      "description": "compile databricks-clusters-cluster with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/databricks-clusters-cluster"
    },
    "compile:databricks-clusters-job": {
      "name": "compile:databricks-clusters-job",
      "description": "compile databricks-clusters-job with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/databricks-clusters-job"
    },
    "compile:datadog-dashboards-dashboard": {
      "name": "compile:datadog-dashboards-dashboard",
      "description": "compile datadog-dashboards-dashboard with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/datadog-dashboards-dashboard"
    },
    "compile:datadog-integrations-aws": {
      "name": "compile:datadog-integrations-aws",
      "description": "compile datadog-integrations-aws with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/datadog-integrations-aws"
    },
    "compile:datadog-monitors-downtime": {
      "name": "compile:datadog-monitors-downtime",
      "description": "compile datadog-monitors-downtime with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/datadog-monitors-downtime"
    },
    "compile:datadog-monitors-monitor": {
      "name": "compile:datadog-monitors-monitor",
      "description": "compile datadog-monitors-monitor with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/datadog-monitors-monitor"
    },
    "compile:datadog-slos-slo": {
      "name": "compile:datadog-slos-slo",
      "description": "compile datadog-slos-slo with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/datadog-slos-slo"
    },
    "compile:dynatrace-configuration-dashboard": {
      "name": "compile:dynatrace-configuration-dashboard",
      "description": "compile dynatrace-configuration-dashboard with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/dynatrace-configuration-dashboard"
    },
    "compile:dynatrace-environment-servicelevelobjective": {
      "name": "compile:dynatrace-environment-servicelevelobjective",
      "description": "compile dynatrace-environment-servicelevelobjective with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/dynatrace-environment-servicelevelobjective"
    },
    "compile:dynatrace-environment-syntheticlocation": {
      "name": "compile:dynatrace-environment-syntheticlocation",
      "description": "compile dynatrace-environment-syntheticlocation with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/dynatrace-environment-syntheticlocation"
    },
    "compile:dynatrace-environment-syntheticmonitor": {
      "name": "compile:dynatrace-environment-syntheticmonitor",
      "description": "compile dynatrace-environment-syntheticmonitor with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/dynatrace-environment-syntheticmonitor"
    },
    "compile:fastly-dictionary-dictionary": {
      "name": "compile:fastly-dictionary-dictionary",
      "description": "compile fastly-dictionary-dictionary with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/fastly-dictionary-dictionary"
    },
    "compile:fastly-dictionary-dictionaryitem": {
      "name": "compile:fastly-dictionary-dictionaryitem",
      "description": "compile fastly-dictionary-dictionaryitem with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/fastly-dictionary-dictionaryitem"
    },
    "compile:fastly-services-backend": {
      "name": "compile:fastly-services-backend",
      "description": "compile fastly-services-backend with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/fastly-services-backend"
    },
    "compile:fastly-services-domain": {
      "name": "compile:fastly-services-domain",
      "description": "compile fastly-services-domain with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/fastly-services-domain"
    },
    "compile:fastly-services-healthcheck": {
      "name": "compile:fastly-services-healthcheck",
      "description": "compile fastly-services-healthcheck with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/fastly-services-healthcheck"
    },
    "compile:fastly-services-service": {
      "name": "compile:fastly-services-service",
      "description": "compile fastly-services-service with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/fastly-services-service"
    },
    "compile:fireeye-cloudintegrations-cloudwatch": {
      "name": "compile:fireeye-cloudintegrations-cloudwatch",
      "description": "compile fireeye-cloudintegrations-cloudwatch with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/fireeye-cloudintegrations-cloudwatch"
    },
    "compile:freyraim-impactapi-apigateway-module": {
      "name": "compile:freyraim-impactapi-apigateway-module",
      "description": "compile freyraim-impactapi-apigateway-module with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/freyraim-impactapi-apigateway-module"
    },
    "compile:freyraim-impactapi-apihandle-module": {
      "name": "compile:freyraim-impactapi-apihandle-module",
      "description": "compile freyraim-impactapi-apihandle-module with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/freyraim-impactapi-apihandle-module"
    },
    "compile:freyraim-impactapi-ec2instance-module": {
      "name": "compile:freyraim-impactapi-ec2instance-module",
      "description": "compile freyraim-impactapi-ec2instance-module with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/freyraim-impactapi-ec2instance-module"
    },
    "compile:freyraim-impactapi-lambdafunction-module": {
      "name": "compile:freyraim-impactapi-lambdafunction-module",
      "description": "compile freyraim-impactapi-lambdafunction-module with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/freyraim-impactapi-lambdafunction-module"
    },
    "compile:freyraim-impactapi-loadbalancer-module": {
      "name": "compile:freyraim-impactapi-loadbalancer-module",
      "description": "compile freyraim-impactapi-loadbalancer-module with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/freyraim-impactapi-loadbalancer-module"
    },
    "compile:freyraim-spider-cloudfront-module": {
      "name": "compile:freyraim-spider-cloudfront-module",
      "description": "compile freyraim-spider-cloudfront-module with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/freyraim-spider-cloudfront-module"
    },
    "compile:freyraim-spider-ec2instance-module": {
      "name": "compile:freyraim-spider-ec2instance-module",
      "description": "compile freyraim-spider-ec2instance-module with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/freyraim-spider-ec2instance-module"
    },
    "compile:freyraim-spider-ecs-module": {
      "name": "compile:freyraim-spider-ecs-module",
      "description": "compile freyraim-spider-ecs-module with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/freyraim-spider-ecs-module"
    },
    "compile:freyraim-spider-loadbalancer-module": {
      "name": "compile:freyraim-spider-loadbalancer-module",
      "description": "compile freyraim-spider-loadbalancer-module with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/freyraim-spider-loadbalancer-module"
    },
    "compile:freyraim-spider-postgresql-module": {
      "name": "compile:freyraim-spider-postgresql-module",
      "description": "compile freyraim-spider-postgresql-module with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/freyraim-spider-postgresql-module"
    },
    "compile:freyraim-spider-s3bucket-module": {
      "name": "compile:freyraim-spider-s3bucket-module",
      "description": "compile freyraim-spider-s3bucket-module with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/freyraim-spider-s3bucket-module"
    },
    "compile:generic-database-schema": {
      "name": "compile:generic-database-schema",
      "description": "compile generic-database-schema with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/generic-database-schema"
    },
    "compile:generic-secretsprotection-hook": {
      "name": "compile:generic-secretsprotection-hook",
      "description": "compile generic-secretsprotection-hook with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/generic-secretsprotection-hook"
    },
    "compile:generic-transcribe-vocabulary": {
      "name": "compile:generic-transcribe-vocabulary",
      "description": "compile generic-transcribe-vocabulary with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/generic-transcribe-vocabulary"
    },
    "compile:github-git-tag": {
      "name": "compile:github-git-tag",
      "description": "compile github-git-tag with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/github-git-tag"
    },
    "compile:github-organizations-membership": {
      "name": "compile:github-organizations-membership",
      "description": "compile github-organizations-membership with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/github-organizations-membership"
    },
    "compile:github-repositories-collaborator": {
      "name": "compile:github-repositories-collaborator",
      "description": "compile github-repositories-collaborator with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/github-repositories-collaborator"
    },
    "compile:github-repositories-repository": {
      "name": "compile:github-repositories-repository",
      "description": "compile github-repositories-repository with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/github-repositories-repository"
    },
    "compile:github-repositories-webhook": {
      "name": "compile:github-repositories-webhook",
      "description": "compile github-repositories-webhook with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/github-repositories-webhook"
    },
    "compile:github-teams-membership": {
      "name": "compile:github-teams-membership",
      "description": "compile github-teams-membership with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/github-teams-membership"
    },
    "compile:github-teams-repositoryaccess": {
      "name": "compile:github-teams-repositoryaccess",
      "description": "compile github-teams-repositoryaccess with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/github-teams-repositoryaccess"
    },
    "compile:github-teams-team": {
      "name": "compile:github-teams-team",
      "description": "compile github-teams-team with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/github-teams-team"
    },
    "compile:gitlab-code-tag": {
      "name": "compile:gitlab-code-tag",
      "description": "compile gitlab-code-tag with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/gitlab-code-tag"
    },
    "compile:gitlab-groups-group": {
      "name": "compile:gitlab-groups-group",
      "description": "compile gitlab-groups-group with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/gitlab-groups-group"
    },
    "compile:gitlab-groups-groupaccesstogroup": {
      "name": "compile:gitlab-groups-groupaccesstogroup",
      "description": "compile gitlab-groups-groupaccesstogroup with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/gitlab-groups-groupaccesstogroup"
    },
    "compile:gitlab-groups-usermemberofgroup": {
      "name": "compile:gitlab-groups-usermemberofgroup",
      "description": "compile gitlab-groups-usermemberofgroup with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/gitlab-groups-usermemberofgroup"
    },
    "compile:gitlab-projects-accesstoken": {
      "name": "compile:gitlab-projects-accesstoken",
      "description": "compile gitlab-projects-accesstoken with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/gitlab-projects-accesstoken"
    },
    "compile:gitlab-projects-groupaccesstoproject": {
      "name": "compile:gitlab-projects-groupaccesstoproject",
      "description": "compile gitlab-projects-groupaccesstoproject with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/gitlab-projects-groupaccesstoproject"
    },
    "compile:gitlab-projects-project": {
      "name": "compile:gitlab-projects-project",
      "description": "compile gitlab-projects-project with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/gitlab-projects-project"
    },
    "compile:gitlab-projects-usermemberofproject": {
      "name": "compile:gitlab-projects-usermemberofproject",
      "description": "compile gitlab-projects-usermemberofproject with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/gitlab-projects-usermemberofproject"
    },
    "compile:gremlin-agent-helm": {
      "name": "compile:gremlin-agent-helm",
      "description": "compile gremlin-agent-helm with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/gremlin-agent-helm"
    },
    "compile:jfrog-artifactory-core-module": {
      "name": "compile:jfrog-artifactory-core-module",
      "description": "compile jfrog-artifactory-core-module with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/jfrog-artifactory-core-module"
    },
    "compile:jfrog-artifactory-ec2instance-module": {
      "name": "compile:jfrog-artifactory-ec2instance-module",
      "description": "compile jfrog-artifactory-ec2instance-module with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/jfrog-artifactory-ec2instance-module"
    },
    "compile:jfrog-artifactory-existingvpc-module": {
      "name": "compile:jfrog-artifactory-existingvpc-module",
      "description": "compile jfrog-artifactory-existingvpc-module with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/jfrog-artifactory-existingvpc-module"
    },
    "compile:jfrog-artifactory-newvpc-module": {
      "name": "compile:jfrog-artifactory-newvpc-module",
      "description": "compile jfrog-artifactory-newvpc-module with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/jfrog-artifactory-newvpc-module"
    },
    "compile:jfrog-linux-bastion-module": {
      "name": "compile:jfrog-linux-bastion-module",
      "description": "compile jfrog-linux-bastion-module with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/jfrog-linux-bastion-module"
    },
    "compile:jfrog-vpc-multiaz-module": {
      "name": "compile:jfrog-vpc-multiaz-module",
      "description": "compile jfrog-vpc-multiaz-module with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/jfrog-vpc-multiaz-module"
    },
    "compile:jfrog-xray-ec2instance-module": {
      "name": "compile:jfrog-xray-ec2instance-module",
      "description": "compile jfrog-xray-ec2instance-module with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/jfrog-xray-ec2instance-module"
    },
    "compile:karte-eventbridge-documentdb-module": {
      "name": "compile:karte-eventbridge-documentdb-module",
      "description": "compile karte-eventbridge-documentdb-module with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/karte-eventbridge-documentdb-module"
    },
    "compile:logzio-autodeploymentlogzio-cloudwatch-module": {
      "name": "compile:logzio-autodeploymentlogzio-cloudwatch-module",
      "description": "compile logzio-autodeploymentlogzio-cloudwatch-module with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/logzio-autodeploymentlogzio-cloudwatch-module"
    },
    "compile:logzio-awscostandusage-cur-module": {
      "name": "compile:logzio-awscostandusage-cur-module",
      "description": "compile logzio-awscostandusage-cur-module with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/logzio-awscostandusage-cur-module"
    },
    "compile:logzio-awssecurityhub-collector-module": {
      "name": "compile:logzio-awssecurityhub-collector-module",
      "description": "compile logzio-awssecurityhub-collector-module with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/logzio-awssecurityhub-collector-module"
    },
    "compile:logzio-kinesisshipper-kinesisshipper-module": {
      "name": "compile:logzio-kinesisshipper-kinesisshipper-module",
      "description": "compile logzio-kinesisshipper-kinesisshipper-module with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/logzio-kinesisshipper-kinesisshipper-module"
    },
    "compile:logzio-myservice-myname-module": {
      "name": "compile:logzio-myservice-myname-module",
      "description": "compile logzio-myservice-myname-module with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/logzio-myservice-myname-module"
    },
    "compile:mongodb-atlas-alertconfiguration": {
      "name": "compile:mongodb-atlas-alertconfiguration",
      "description": "compile mongodb-atlas-alertconfiguration with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-alertconfiguration"
    },
    "compile:mongodb-atlas-auditing": {
      "name": "compile:mongodb-atlas-auditing",
      "description": "compile mongodb-atlas-auditing with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-auditing"
    },
    "compile:mongodb-atlas-awsiamdatabaseuser": {
      "name": "compile:mongodb-atlas-awsiamdatabaseuser",
      "description": "compile mongodb-atlas-awsiamdatabaseuser with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-awsiamdatabaseuser"
    },
    "compile:mongodb-atlas-cloudbackuprestorejobs": {
      "name": "compile:mongodb-atlas-cloudbackuprestorejobs",
      "description": "compile mongodb-atlas-cloudbackuprestorejobs with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-cloudbackuprestorejobs"
    },
    "compile:mongodb-atlas-cloudbackupschedule": {
      "name": "compile:mongodb-atlas-cloudbackupschedule",
      "description": "compile mongodb-atlas-cloudbackupschedule with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-cloudbackupschedule"
    },
    "compile:mongodb-atlas-cloudbackupsnapshot": {
      "name": "compile:mongodb-atlas-cloudbackupsnapshot",
      "description": "compile mongodb-atlas-cloudbackupsnapshot with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-cloudbackupsnapshot"
    },
    "compile:mongodb-atlas-cloudbackupsnapshotexportbucket": {
      "name": "compile:mongodb-atlas-cloudbackupsnapshotexportbucket",
      "description": "compile mongodb-atlas-cloudbackupsnapshotexportbucket with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-cloudbackupsnapshotexportbucket"
    },
    "compile:mongodb-atlas-cluster": {
      "name": "compile:mongodb-atlas-cluster",
      "description": "compile mongodb-atlas-cluster with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-cluster"
    },
    "compile:mongodb-atlas-customdbrole": {
      "name": "compile:mongodb-atlas-customdbrole",
      "description": "compile mongodb-atlas-customdbrole with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-customdbrole"
    },
    "compile:mongodb-atlas-customdnsconfigurationclusteraws": {
      "name": "compile:mongodb-atlas-customdnsconfigurationclusteraws",
      "description": "compile mongodb-atlas-customdnsconfigurationclusteraws with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-customdnsconfigurationclusteraws"
    },
    "compile:mongodb-atlas-databaseuser": {
      "name": "compile:mongodb-atlas-databaseuser",
      "description": "compile mongodb-atlas-databaseuser with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-databaseuser"
    },
    "compile:mongodb-atlas-datalakes": {
      "name": "compile:mongodb-atlas-datalakes",
      "description": "compile mongodb-atlas-datalakes with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-datalakes"
    },
    "compile:mongodb-atlas-encryptionatrest": {
      "name": "compile:mongodb-atlas-encryptionatrest",
      "description": "compile mongodb-atlas-encryptionatrest with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-encryptionatrest"
    },
    "compile:mongodb-atlas-federatedsettingsorgrolemapping": {
      "name": "compile:mongodb-atlas-federatedsettingsorgrolemapping",
      "description": "compile mongodb-atlas-federatedsettingsorgrolemapping with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-federatedsettingsorgrolemapping"
    },
    "compile:mongodb-atlas-globalclusterconfig": {
      "name": "compile:mongodb-atlas-globalclusterconfig",
      "description": "compile mongodb-atlas-globalclusterconfig with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-globalclusterconfig"
    },
    "compile:mongodb-atlas-ldapconfiguration": {
      "name": "compile:mongodb-atlas-ldapconfiguration",
      "description": "compile mongodb-atlas-ldapconfiguration with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-ldapconfiguration"
    },
    "compile:mongodb-atlas-ldapverify": {
      "name": "compile:mongodb-atlas-ldapverify",
      "description": "compile mongodb-atlas-ldapverify with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-ldapverify"
    },
    "compile:mongodb-atlas-maintenancewindow": {
      "name": "compile:mongodb-atlas-maintenancewindow",
      "description": "compile mongodb-atlas-maintenancewindow with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-maintenancewindow"
    },
    "compile:mongodb-atlas-networkcontainer": {
      "name": "compile:mongodb-atlas-networkcontainer",
      "description": "compile mongodb-atlas-networkcontainer with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-networkcontainer"
    },
    "compile:mongodb-atlas-networkpeering": {
      "name": "compile:mongodb-atlas-networkpeering",
      "description": "compile mongodb-atlas-networkpeering with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-networkpeering"
    },
    "compile:mongodb-atlas-onlinearchive": {
      "name": "compile:mongodb-atlas-onlinearchive",
      "description": "compile mongodb-atlas-onlinearchive with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-onlinearchive"
    },
    "compile:mongodb-atlas-orginvitation": {
      "name": "compile:mongodb-atlas-orginvitation",
      "description": "compile mongodb-atlas-orginvitation with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-orginvitation"
    },
    "compile:mongodb-atlas-privateendpoint": {
      "name": "compile:mongodb-atlas-privateendpoint",
      "description": "compile mongodb-atlas-privateendpoint with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-privateendpoint"
    },
    "compile:mongodb-atlas-privateendpointadl": {
      "name": "compile:mongodb-atlas-privateendpointadl",
      "description": "compile mongodb-atlas-privateendpointadl with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-privateendpointadl"
    },
    "compile:mongodb-atlas-privateendpointregionalmode": {
      "name": "compile:mongodb-atlas-privateendpointregionalmode",
      "description": "compile mongodb-atlas-privateendpointregionalmode with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-privateendpointregionalmode"
    },
    "compile:mongodb-atlas-project": {
      "name": "compile:mongodb-atlas-project",
      "description": "compile mongodb-atlas-project with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-project"
    },
    "compile:mongodb-atlas-projectinvitation": {
      "name": "compile:mongodb-atlas-projectinvitation",
      "description": "compile mongodb-atlas-projectinvitation with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-projectinvitation"
    },
    "compile:mongodb-atlas-projectipaccesslist": {
      "name": "compile:mongodb-atlas-projectipaccesslist",
      "description": "compile mongodb-atlas-projectipaccesslist with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-projectipaccesslist"
    },
    "compile:mongodb-atlas-searchindex": {
      "name": "compile:mongodb-atlas-searchindex",
      "description": "compile mongodb-atlas-searchindex with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-searchindex"
    },
    "compile:mongodb-atlas-serverlessinstance": {
      "name": "compile:mongodb-atlas-serverlessinstance",
      "description": "compile mongodb-atlas-serverlessinstance with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-serverlessinstance"
    },
    "compile:mongodb-atlas-teams": {
      "name": "compile:mongodb-atlas-teams",
      "description": "compile mongodb-atlas-teams with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-teams"
    },
    "compile:mongodb-atlas-thirdpartyintegration": {
      "name": "compile:mongodb-atlas-thirdpartyintegration",
      "description": "compile mongodb-atlas-thirdpartyintegration with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-thirdpartyintegration"
    },
    "compile:mongodb-atlas-trigger": {
      "name": "compile:mongodb-atlas-trigger",
      "description": "compile mongodb-atlas-trigger with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-trigger"
    },
    "compile:mongodb-atlas-x509authenticationdatabaseuser": {
      "name": "compile:mongodb-atlas-x509authenticationdatabaseuser",
      "description": "compile mongodb-atlas-x509authenticationdatabaseuser with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-x509authenticationdatabaseuser"
    },
    "compile:newrelic-cloudformation-dashboards": {
      "name": "compile:newrelic-cloudformation-dashboards",
      "description": "compile newrelic-cloudformation-dashboards with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/newrelic-cloudformation-dashboards"
    },
    "compile:newrelic-cloudformation-tagging": {
      "name": "compile:newrelic-cloudformation-tagging",
      "description": "compile newrelic-cloudformation-tagging with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/newrelic-cloudformation-tagging"
    },
    "compile:newrelic-cloudformation-workloads": {
      "name": "compile:newrelic-cloudformation-workloads",
      "description": "compile newrelic-cloudformation-workloads with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/newrelic-cloudformation-workloads"
    },
    "compile:newrelic-observability-dashboards": {
      "name": "compile:newrelic-observability-dashboards",
      "description": "compile newrelic-observability-dashboards with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/newrelic-observability-dashboards"
    },
    "compile:newrelic-observability-workloads": {
      "name": "compile:newrelic-observability-workloads",
      "description": "compile newrelic-observability-workloads with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/newrelic-observability-workloads"
    },
    "compile:okta-application-application": {
      "name": "compile:okta-application-application",
      "description": "compile okta-application-application with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/okta-application-application"
    },
    "compile:okta-group-group": {
      "name": "compile:okta-group-group",
      "description": "compile okta-group-group with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/okta-group-group"
    },
    "compile:okta-group-groupapplicationassociation": {
      "name": "compile:okta-group-groupapplicationassociation",
      "description": "compile okta-group-groupapplicationassociation with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/okta-group-groupapplicationassociation"
    },
    "compile:okta-group-membership": {
      "name": "compile:okta-group-membership",
      "description": "compile okta-group-membership with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/okta-group-membership"
    },
    "compile:okta-policy-policy": {
      "name": "compile:okta-policy-policy",
      "description": "compile okta-policy-policy with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/okta-policy-policy"
    },
    "compile:org-test-sample-module": {
      "name": "compile:org-test-sample-module",
      "description": "compile org-test-sample-module with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/org-test-sample-module"
    },
    "compile:pagerduty-escalationpolicies-escalationpolicy": {
      "name": "compile:pagerduty-escalationpolicies-escalationpolicy",
      "description": "compile pagerduty-escalationpolicies-escalationpolicy with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/pagerduty-escalationpolicies-escalationpolicy"
    },
    "compile:pagerduty-responseplays-responseplay": {
      "name": "compile:pagerduty-responseplays-responseplay",
      "description": "compile pagerduty-responseplays-responseplay with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/pagerduty-responseplays-responseplay"
    },
    "compile:pagerduty-schedules-schedule": {
      "name": "compile:pagerduty-schedules-schedule",
      "description": "compile pagerduty-schedules-schedule with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/pagerduty-schedules-schedule"
    },
    "compile:pagerduty-teams-membership": {
      "name": "compile:pagerduty-teams-membership",
      "description": "compile pagerduty-teams-membership with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/pagerduty-teams-membership"
    },
    "compile:pagerduty-teams-team": {
      "name": "compile:pagerduty-teams-team",
      "description": "compile pagerduty-teams-team with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/pagerduty-teams-team"
    },
    "compile:pagerduty-users-user": {
      "name": "compile:pagerduty-users-user",
      "description": "compile pagerduty-users-user with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/pagerduty-users-user"
    },
    "compile:paloaltonetworks-cloudngfw-ngfw": {
      "name": "compile:paloaltonetworks-cloudngfw-ngfw",
      "description": "compile paloaltonetworks-cloudngfw-ngfw with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/paloaltonetworks-cloudngfw-ngfw"
    },
    "compile:paloaltonetworks-cloudngfw-rulestack": {
      "name": "compile:paloaltonetworks-cloudngfw-rulestack",
      "description": "compile paloaltonetworks-cloudngfw-rulestack with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/paloaltonetworks-cloudngfw-rulestack"
    },
    "compile:registry-test-resource1-module": {
      "name": "compile:registry-test-resource1-module",
      "description": "compile registry-test-resource1-module with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/registry-test-resource1-module"
    },
    "compile:rollbar-notifications-rule": {
      "name": "compile:rollbar-notifications-rule",
      "description": "compile rollbar-notifications-rule with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/rollbar-notifications-rule"
    },
    "compile:rollbar-projects-accesstoken": {
      "name": "compile:rollbar-projects-accesstoken",
      "description": "compile rollbar-projects-accesstoken with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/rollbar-projects-accesstoken"
    },
    "compile:rollbar-projects-project": {
      "name": "compile:rollbar-projects-project",
      "description": "compile rollbar-projects-project with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/rollbar-projects-project"
    },
    "compile:rollbar-teams-membership": {
      "name": "compile:rollbar-teams-membership",
      "description": "compile rollbar-teams-membership with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/rollbar-teams-membership"
    },
    "compile:rollbar-teams-team": {
      "name": "compile:rollbar-teams-team",
      "description": "compile rollbar-teams-team with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/rollbar-teams-team"
    },
    "compile:snowflake-database-database": {
      "name": "compile:snowflake-database-database",
      "description": "compile snowflake-database-database with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/snowflake-database-database"
    },
    "compile:snowflake-database-grant": {
      "name": "compile:snowflake-database-grant",
      "description": "compile snowflake-database-grant with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/snowflake-database-grant"
    },
    "compile:snowflake-role-grant": {
      "name": "compile:snowflake-role-grant",
      "description": "compile snowflake-role-grant with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/snowflake-role-grant"
    },
    "compile:snowflake-role-role": {
      "name": "compile:snowflake-role-role",
      "description": "compile snowflake-role-role with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/snowflake-role-role"
    },
    "compile:snowflake-user-user": {
      "name": "compile:snowflake-user-user",
      "description": "compile snowflake-user-user with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/snowflake-user-user"
    },
    "compile:snowflake-warehouse-grant": {
      "name": "compile:snowflake-warehouse-grant",
      "description": "compile snowflake-warehouse-grant with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/snowflake-warehouse-grant"
    },
    "compile:snyk-container-helm": {
      "name": "compile:snyk-container-helm",
      "description": "compile snyk-container-helm with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/snyk-container-helm"
    },
    "compile:splunk-enterprise-quickstart-module": {
      "name": "compile:splunk-enterprise-quickstart-module",
      "description": "compile splunk-enterprise-quickstart-module with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/splunk-enterprise-quickstart-module"
    },
    "compile:spot-elastigroup-group": {
      "name": "compile:spot-elastigroup-group",
      "description": "compile spot-elastigroup-group with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/spot-elastigroup-group"
    },
    "compile:stackery-open-bastion-module": {
      "name": "compile:stackery-open-bastion-module",
      "description": "compile stackery-open-bastion-module with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/stackery-open-bastion-module"
    },
    "compile:stocks-orders-marketorder": {
      "name": "compile:stocks-orders-marketorder",
      "description": "compile stocks-orders-marketorder with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/stocks-orders-marketorder"
    },
    "compile:symphonia-opensource-cloudformationartifactsbucket-module": {
      "name": "compile:symphonia-opensource-cloudformationartifactsbucket-module",
      "description": "compile symphonia-opensource-cloudformationartifactsbucket-module with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/symphonia-opensource-cloudformationartifactsbucket-module"
    },
    "compile:sysdig-helm-agent": {
      "name": "compile:sysdig-helm-agent",
      "description": "compile sysdig-helm-agent with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/sysdig-helm-agent"
    },
    "compile:tf-ad-computer": {
      "name": "compile:tf-ad-computer",
      "description": "compile tf-ad-computer with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/tf-ad-computer"
    },
    "compile:tf-ad-user": {
      "name": "compile:tf-ad-user",
      "description": "compile tf-ad-user with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/tf-ad-user"
    },
    "compile:tf-aws-keypair": {
      "name": "compile:tf-aws-keypair",
      "description": "compile tf-aws-keypair with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/tf-aws-keypair"
    },
    "compile:tf-aws-s3bucket": {
      "name": "compile:tf-aws-s3bucket",
      "description": "compile tf-aws-s3bucket with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/tf-aws-s3bucket"
    },
    "compile:tf-aws-s3bucketobject": {
      "name": "compile:tf-aws-s3bucketobject",
      "description": "compile tf-aws-s3bucketobject with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/tf-aws-s3bucketobject"
    },
    "compile:tf-azuread-application": {
      "name": "compile:tf-azuread-application",
      "description": "compile tf-azuread-application with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/tf-azuread-application"
    },
    "compile:tf-azuread-user": {
      "name": "compile:tf-azuread-user",
      "description": "compile tf-azuread-user with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/tf-azuread-user"
    },
    "compile:tf-cloudflare-record": {
      "name": "compile:tf-cloudflare-record",
      "description": "compile tf-cloudflare-record with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/tf-cloudflare-record"
    },
    "compile:tf-digitalocean-droplet": {
      "name": "compile:tf-digitalocean-droplet",
      "description": "compile tf-digitalocean-droplet with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/tf-digitalocean-droplet"
    },
    "compile:tf-github-repository": {
      "name": "compile:tf-github-repository",
      "description": "compile tf-github-repository with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/tf-github-repository"
    },
    "compile:tf-google-storagebucket": {
      "name": "compile:tf-google-storagebucket",
      "description": "compile tf-google-storagebucket with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/tf-google-storagebucket"
    },
    "compile:tf-pagerduty-service": {
      "name": "compile:tf-pagerduty-service",
      "description": "compile tf-pagerduty-service with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/tf-pagerduty-service"
    },
    "compile:tf-random-string": {
      "name": "compile:tf-random-string",
      "description": "compile tf-random-string with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/tf-random-string"
    },
    "compile:tf-random-uuid": {
      "name": "compile:tf-random-uuid",
      "description": "compile tf-random-uuid with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/tf-random-uuid"
    },
    "compile:trendmicro-cloudonecontainer-helm": {
      "name": "compile:trendmicro-cloudonecontainer-helm",
      "description": "compile trendmicro-cloudonecontainer-helm with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/trendmicro-cloudonecontainer-helm"
    },
    "compile:zmk-iam-lambdabasicrole-module": {
      "name": "compile:zmk-iam-lambdabasicrole-module",
      "description": "compile zmk-iam-lambdabasicrole-module with JSII",
      "steps": [
        {
          "exec": "jsii"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/zmk-iam-lambdabasicrole-module"
    },
    "default": {
      "name": "default",
      "description": "Synthesize project files",
      "steps": [
        {
          "exec": "ts-node --project tsconfig.dev.json .projenrc.ts"
        }
      ]
    },
    "eject": {
      "name": "eject",
      "description": "Remove projen from the project",
      "env": {
        "PROJEN_EJECTING": "true"
      },
      "steps": [
        {
          "spawn": "default"
        }
      ]
    },
    "eslint": {
      "name": "eslint",
      "description": "Runs eslint against the codebase",
      "steps": [
        {
          "exec": "eslint --ext .ts,.tsx --fix --no-error-on-unmatched-pattern src test build-tools projenrc .projenrc.ts"
        }
      ]
    },
    "package": {
      "name": "package",
      "description": "Creates the distribution package"
    },
    "package:alexa-ask-skill": {
      "name": "package:alexa-ask-skill",
      "description": "produce multi-language packaging for alexa-ask-skill",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/alexa-ask-skill"
    },
    "package:aqua-enterprise-enforcer": {
      "name": "package:aqua-enterprise-enforcer",
      "description": "produce multi-language packaging for aqua-enterprise-enforcer",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/aqua-enterprise-enforcer"
    },
    "package:aqua-enterprise-kubeenforcer": {
      "name": "package:aqua-enterprise-kubeenforcer",
      "description": "produce multi-language packaging for aqua-enterprise-kubeenforcer",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/aqua-enterprise-kubeenforcer"
    },
    "package:aqua-enterprise-scanner": {
      "name": "package:aqua-enterprise-scanner",
      "description": "produce multi-language packaging for aqua-enterprise-scanner",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/aqua-enterprise-scanner"
    },
    "package:aqua-enterprise-server": {
      "name": "package:aqua-enterprise-server",
      "description": "produce multi-language packaging for aqua-enterprise-server",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/aqua-enterprise-server"
    },
    "package:atlassian-opsgenie-integration": {
      "name": "package:atlassian-opsgenie-integration",
      "description": "produce multi-language packaging for atlassian-opsgenie-integration",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/atlassian-opsgenie-integration"
    },
    "package:atlassian-opsgenie-team": {
      "name": "package:atlassian-opsgenie-team",
      "description": "produce multi-language packaging for atlassian-opsgenie-team",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/atlassian-opsgenie-team"
    },
    "package:atlassian-opsgenie-user": {
      "name": "package:atlassian-opsgenie-user",
      "description": "produce multi-language packaging for atlassian-opsgenie-user",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/atlassian-opsgenie-user"
    },
    "package:awscommunity-account-alternatecontact": {
      "name": "package:awscommunity-account-alternatecontact",
      "description": "produce multi-language packaging for awscommunity-account-alternatecontact",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awscommunity-account-alternatecontact"
    },
    "package:awscommunity-s3-deletebucketcontents": {
      "name": "package:awscommunity-s3-deletebucketcontents",
      "description": "produce multi-language packaging for awscommunity-s3-deletebucketcontents",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awscommunity-s3-deletebucketcontents"
    },
    "package:awsqs-checkpoint-cloudguardqs-module": {
      "name": "package:awsqs-checkpoint-cloudguardqs-module",
      "description": "produce multi-language packaging for awsqs-checkpoint-cloudguardqs-module",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awsqs-checkpoint-cloudguardqs-module"
    },
    "package:awsqs-ec2-linuxbastionqs-module": {
      "name": "package:awsqs-ec2-linuxbastionqs-module",
      "description": "produce multi-language packaging for awsqs-ec2-linuxbastionqs-module",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awsqs-ec2-linuxbastionqs-module"
    },
    "package:awsqs-eks-cluster": {
      "name": "package:awsqs-eks-cluster",
      "description": "produce multi-language packaging for awsqs-eks-cluster",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awsqs-eks-cluster"
    },
    "package:awsqs-iridium-cloudconnectqs-module": {
      "name": "package:awsqs-iridium-cloudconnectqs-module",
      "description": "produce multi-language packaging for awsqs-iridium-cloudconnectqs-module",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awsqs-iridium-cloudconnectqs-module"
    },
    "package:awsqs-kubernetes-get": {
      "name": "package:awsqs-kubernetes-get",
      "description": "produce multi-language packaging for awsqs-kubernetes-get",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awsqs-kubernetes-get"
    },
    "package:awsqs-kubernetes-helm": {
      "name": "package:awsqs-kubernetes-helm",
      "description": "produce multi-language packaging for awsqs-kubernetes-helm",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awsqs-kubernetes-helm"
    },
    "package:awsqs-kubernetes-resource": {
      "name": "package:awsqs-kubernetes-resource",
      "description": "produce multi-language packaging for awsqs-kubernetes-resource",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awsqs-kubernetes-resource"
    },
    "package:awsqs-vpc-vpcqs-module": {
      "name": "package:awsqs-vpc-vpcqs-module",
      "description": "produce multi-language packaging for awsqs-vpc-vpcqs-module",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awsqs-vpc-vpcqs-module"
    },
    "package:awssamples-ec2imageidcheckssm-hook": {
      "name": "package:awssamples-ec2imageidcheckssm-hook",
      "description": "produce multi-language packaging for awssamples-ec2imageidcheckssm-hook",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awssamples-ec2imageidcheckssm-hook"
    },
    "package:awssamples-ec2ssmsmonly-hook": {
      "name": "package:awssamples-ec2ssmsmonly-hook",
      "description": "produce multi-language packaging for awssamples-ec2ssmsmonly-hook",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awssamples-ec2ssmsmonly-hook"
    },
    "package:awssamples-ec2volumeencryptionkms-hook": {
      "name": "package:awssamples-ec2volumeencryptionkms-hook",
      "description": "produce multi-language packaging for awssamples-ec2volumeencryptionkms-hook",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awssamples-ec2volumeencryptionkms-hook"
    },
    "package:awssamples-efsencrypt-hook": {
      "name": "package:awssamples-efsencrypt-hook",
      "description": "produce multi-language packaging for awssamples-efsencrypt-hook",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awssamples-efsencrypt-hook"
    },
    "package:awssamples-eksclusterlogging-hook": {
      "name": "package:awssamples-eksclusterlogging-hook",
      "description": "produce multi-language packaging for awssamples-eksclusterlogging-hook",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awssamples-eksclusterlogging-hook"
    },
    "package:awssamples-eksclusterpublicapi-hook": {
      "name": "package:awssamples-eksclusterpublicapi-hook",
      "description": "produce multi-language packaging for awssamples-eksclusterpublicapi-hook",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awssamples-eksclusterpublicapi-hook"
    },
    "package:awssamples-fsxwindowsonly-hook": {
      "name": "package:awssamples-fsxwindowsonly-hook",
      "description": "produce multi-language packaging for awssamples-fsxwindowsonly-hook",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awssamples-fsxwindowsonly-hook"
    },
    "package:awssamples-iampoliciesrequiremfa-hook": {
      "name": "package:awssamples-iampoliciesrequiremfa-hook",
      "description": "produce multi-language packaging for awssamples-iampoliciesrequiremfa-hook",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awssamples-iampoliciesrequiremfa-hook"
    },
    "package:awssamples-iampolicydoesnotgiveadmin-hook": {
      "name": "package:awssamples-iampolicydoesnotgiveadmin-hook",
      "description": "produce multi-language packaging for awssamples-iampolicydoesnotgiveadmin-hook",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awssamples-iampolicydoesnotgiveadmin-hook"
    },
    "package:awssamples-iamprincipalboundary-hook": {
      "name": "package:awssamples-iamprincipalboundary-hook",
      "description": "produce multi-language packaging for awssamples-iamprincipalboundary-hook",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awssamples-iamprincipalboundary-hook"
    },
    "package:awssamples-iamusershavepolicy-hook": {
      "name": "package:awssamples-iamusershavepolicy-hook",
      "description": "produce multi-language packaging for awssamples-iamusershavepolicy-hook",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awssamples-iamusershavepolicy-hook"
    },
    "package:awssamples-noip6-hook": {
      "name": "package:awssamples-noip6-hook",
      "description": "produce multi-language packaging for awssamples-noip6-hook",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awssamples-noip6-hook"
    },
    "package:awssamples-rdsencrypt-hook": {
      "name": "package:awssamples-rdsencrypt-hook",
      "description": "produce multi-language packaging for awssamples-rdsencrypt-hook",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awssamples-rdsencrypt-hook"
    },
    "package:awssamples-s3blockpublicaccess-hook": {
      "name": "package:awssamples-s3blockpublicaccess-hook",
      "description": "produce multi-language packaging for awssamples-s3blockpublicaccess-hook",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awssamples-s3blockpublicaccess-hook"
    },
    "package:awssamples-s3bucketencrypt-hook": {
      "name": "package:awssamples-s3bucketencrypt-hook",
      "description": "produce multi-language packaging for awssamples-s3bucketencrypt-hook",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awssamples-s3bucketencrypt-hook"
    },
    "package:awssamples-s3bucketloggingcompliance-hook": {
      "name": "package:awssamples-s3bucketloggingcompliance-hook",
      "description": "produce multi-language packaging for awssamples-s3bucketloggingcompliance-hook",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awssamples-s3bucketloggingcompliance-hook"
    },
    "package:awssamples-s3bucketloggingenabled-hook": {
      "name": "package:awssamples-s3bucketloggingenabled-hook",
      "description": "produce multi-language packaging for awssamples-s3bucketloggingenabled-hook",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awssamples-s3bucketloggingenabled-hook"
    },
    "package:awssamples-securitygroupopeningress-hook": {
      "name": "package:awssamples-securitygroupopeningress-hook",
      "description": "produce multi-language packaging for awssamples-securitygroupopeningress-hook",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awssamples-securitygroupopeningress-hook"
    },
    "package:awssamples-sqsnonpublic-hook": {
      "name": "package:awssamples-sqsnonpublic-hook",
      "description": "produce multi-language packaging for awssamples-sqsnonpublic-hook",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awssamples-sqsnonpublic-hook"
    },
    "package:awssamples-sqspolicyencryption-hook": {
      "name": "package:awssamples-sqspolicyencryption-hook",
      "description": "produce multi-language packaging for awssamples-sqspolicyencryption-hook",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/awssamples-sqspolicyencryption-hook"
    },
    "package:bigid-datasource-dynamodb": {
      "name": "package:bigid-datasource-dynamodb",
      "description": "produce multi-language packaging for bigid-datasource-dynamodb",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/bigid-datasource-dynamodb"
    },
    "package:bigid-datasource-s3": {
      "name": "package:bigid-datasource-s3",
      "description": "produce multi-language packaging for bigid-datasource-s3",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/bigid-datasource-s3"
    },
    "package:cloudflare-dns-record": {
      "name": "package:cloudflare-dns-record",
      "description": "produce multi-language packaging for cloudflare-dns-record",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/cloudflare-dns-record"
    },
    "package:cloudflare-loadbalancer-loadbalancer": {
      "name": "package:cloudflare-loadbalancer-loadbalancer",
      "description": "produce multi-language packaging for cloudflare-loadbalancer-loadbalancer",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/cloudflare-loadbalancer-loadbalancer"
    },
    "package:cloudflare-loadbalancer-monitor": {
      "name": "package:cloudflare-loadbalancer-monitor",
      "description": "produce multi-language packaging for cloudflare-loadbalancer-monitor",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/cloudflare-loadbalancer-monitor"
    },
    "package:cloudflare-loadbalancer-pool": {
      "name": "package:cloudflare-loadbalancer-pool",
      "description": "produce multi-language packaging for cloudflare-loadbalancer-pool",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/cloudflare-loadbalancer-pool"
    },
    "package:confluentcloud-iam-serviceaccount": {
      "name": "package:confluentcloud-iam-serviceaccount",
      "description": "produce multi-language packaging for confluentcloud-iam-serviceaccount",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/confluentcloud-iam-serviceaccount"
    },
    "package:databricks-clusters-cluster": {
      "name": "package:databricks-clusters-cluster",
      "description": "produce multi-language packaging for databricks-clusters-cluster",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/databricks-clusters-cluster"
    },
    "package:databricks-clusters-job": {
      "name": "package:databricks-clusters-job",
      "description": "produce multi-language packaging for databricks-clusters-job",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/databricks-clusters-job"
    },
    "package:datadog-dashboards-dashboard": {
      "name": "package:datadog-dashboards-dashboard",
      "description": "produce multi-language packaging for datadog-dashboards-dashboard",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/datadog-dashboards-dashboard"
    },
    "package:datadog-integrations-aws": {
      "name": "package:datadog-integrations-aws",
      "description": "produce multi-language packaging for datadog-integrations-aws",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/datadog-integrations-aws"
    },
    "package:datadog-monitors-downtime": {
      "name": "package:datadog-monitors-downtime",
      "description": "produce multi-language packaging for datadog-monitors-downtime",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/datadog-monitors-downtime"
    },
    "package:datadog-monitors-monitor": {
      "name": "package:datadog-monitors-monitor",
      "description": "produce multi-language packaging for datadog-monitors-monitor",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/datadog-monitors-monitor"
    },
    "package:datadog-slos-slo": {
      "name": "package:datadog-slos-slo",
      "description": "produce multi-language packaging for datadog-slos-slo",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/datadog-slos-slo"
    },
    "package:dynatrace-configuration-dashboard": {
      "name": "package:dynatrace-configuration-dashboard",
      "description": "produce multi-language packaging for dynatrace-configuration-dashboard",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/dynatrace-configuration-dashboard"
    },
    "package:dynatrace-environment-servicelevelobjective": {
      "name": "package:dynatrace-environment-servicelevelobjective",
      "description": "produce multi-language packaging for dynatrace-environment-servicelevelobjective",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/dynatrace-environment-servicelevelobjective"
    },
    "package:dynatrace-environment-syntheticlocation": {
      "name": "package:dynatrace-environment-syntheticlocation",
      "description": "produce multi-language packaging for dynatrace-environment-syntheticlocation",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/dynatrace-environment-syntheticlocation"
    },
    "package:dynatrace-environment-syntheticmonitor": {
      "name": "package:dynatrace-environment-syntheticmonitor",
      "description": "produce multi-language packaging for dynatrace-environment-syntheticmonitor",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/dynatrace-environment-syntheticmonitor"
    },
    "package:fastly-dictionary-dictionary": {
      "name": "package:fastly-dictionary-dictionary",
      "description": "produce multi-language packaging for fastly-dictionary-dictionary",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/fastly-dictionary-dictionary"
    },
    "package:fastly-dictionary-dictionaryitem": {
      "name": "package:fastly-dictionary-dictionaryitem",
      "description": "produce multi-language packaging for fastly-dictionary-dictionaryitem",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/fastly-dictionary-dictionaryitem"
    },
    "package:fastly-services-backend": {
      "name": "package:fastly-services-backend",
      "description": "produce multi-language packaging for fastly-services-backend",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/fastly-services-backend"
    },
    "package:fastly-services-domain": {
      "name": "package:fastly-services-domain",
      "description": "produce multi-language packaging for fastly-services-domain",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/fastly-services-domain"
    },
    "package:fastly-services-healthcheck": {
      "name": "package:fastly-services-healthcheck",
      "description": "produce multi-language packaging for fastly-services-healthcheck",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/fastly-services-healthcheck"
    },
    "package:fastly-services-service": {
      "name": "package:fastly-services-service",
      "description": "produce multi-language packaging for fastly-services-service",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/fastly-services-service"
    },
    "package:fireeye-cloudintegrations-cloudwatch": {
      "name": "package:fireeye-cloudintegrations-cloudwatch",
      "description": "produce multi-language packaging for fireeye-cloudintegrations-cloudwatch",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/fireeye-cloudintegrations-cloudwatch"
    },
    "package:freyraim-impactapi-apigateway-module": {
      "name": "package:freyraim-impactapi-apigateway-module",
      "description": "produce multi-language packaging for freyraim-impactapi-apigateway-module",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/freyraim-impactapi-apigateway-module"
    },
    "package:freyraim-impactapi-apihandle-module": {
      "name": "package:freyraim-impactapi-apihandle-module",
      "description": "produce multi-language packaging for freyraim-impactapi-apihandle-module",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/freyraim-impactapi-apihandle-module"
    },
    "package:freyraim-impactapi-ec2instance-module": {
      "name": "package:freyraim-impactapi-ec2instance-module",
      "description": "produce multi-language packaging for freyraim-impactapi-ec2instance-module",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/freyraim-impactapi-ec2instance-module"
    },
    "package:freyraim-impactapi-lambdafunction-module": {
      "name": "package:freyraim-impactapi-lambdafunction-module",
      "description": "produce multi-language packaging for freyraim-impactapi-lambdafunction-module",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/freyraim-impactapi-lambdafunction-module"
    },
    "package:freyraim-impactapi-loadbalancer-module": {
      "name": "package:freyraim-impactapi-loadbalancer-module",
      "description": "produce multi-language packaging for freyraim-impactapi-loadbalancer-module",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/freyraim-impactapi-loadbalancer-module"
    },
    "package:freyraim-spider-cloudfront-module": {
      "name": "package:freyraim-spider-cloudfront-module",
      "description": "produce multi-language packaging for freyraim-spider-cloudfront-module",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/freyraim-spider-cloudfront-module"
    },
    "package:freyraim-spider-ec2instance-module": {
      "name": "package:freyraim-spider-ec2instance-module",
      "description": "produce multi-language packaging for freyraim-spider-ec2instance-module",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/freyraim-spider-ec2instance-module"
    },
    "package:freyraim-spider-ecs-module": {
      "name": "package:freyraim-spider-ecs-module",
      "description": "produce multi-language packaging for freyraim-spider-ecs-module",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/freyraim-spider-ecs-module"
    },
    "package:freyraim-spider-loadbalancer-module": {
      "name": "package:freyraim-spider-loadbalancer-module",
      "description": "produce multi-language packaging for freyraim-spider-loadbalancer-module",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/freyraim-spider-loadbalancer-module"
    },
    "package:freyraim-spider-postgresql-module": {
      "name": "package:freyraim-spider-postgresql-module",
      "description": "produce multi-language packaging for freyraim-spider-postgresql-module",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/freyraim-spider-postgresql-module"
    },
    "package:freyraim-spider-s3bucket-module": {
      "name": "package:freyraim-spider-s3bucket-module",
      "description": "produce multi-language packaging for freyraim-spider-s3bucket-module",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/freyraim-spider-s3bucket-module"
    },
    "package:generic-database-schema": {
      "name": "package:generic-database-schema",
      "description": "produce multi-language packaging for generic-database-schema",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/generic-database-schema"
    },
    "package:generic-secretsprotection-hook": {
      "name": "package:generic-secretsprotection-hook",
      "description": "produce multi-language packaging for generic-secretsprotection-hook",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/generic-secretsprotection-hook"
    },
    "package:generic-transcribe-vocabulary": {
      "name": "package:generic-transcribe-vocabulary",
      "description": "produce multi-language packaging for generic-transcribe-vocabulary",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/generic-transcribe-vocabulary"
    },
    "package:github-git-tag": {
      "name": "package:github-git-tag",
      "description": "produce multi-language packaging for github-git-tag",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/github-git-tag"
    },
    "package:github-organizations-membership": {
      "name": "package:github-organizations-membership",
      "description": "produce multi-language packaging for github-organizations-membership",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/github-organizations-membership"
    },
    "package:github-repositories-collaborator": {
      "name": "package:github-repositories-collaborator",
      "description": "produce multi-language packaging for github-repositories-collaborator",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/github-repositories-collaborator"
    },
    "package:github-repositories-repository": {
      "name": "package:github-repositories-repository",
      "description": "produce multi-language packaging for github-repositories-repository",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/github-repositories-repository"
    },
    "package:github-repositories-webhook": {
      "name": "package:github-repositories-webhook",
      "description": "produce multi-language packaging for github-repositories-webhook",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/github-repositories-webhook"
    },
    "package:github-teams-membership": {
      "name": "package:github-teams-membership",
      "description": "produce multi-language packaging for github-teams-membership",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/github-teams-membership"
    },
    "package:github-teams-repositoryaccess": {
      "name": "package:github-teams-repositoryaccess",
      "description": "produce multi-language packaging for github-teams-repositoryaccess",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/github-teams-repositoryaccess"
    },
    "package:github-teams-team": {
      "name": "package:github-teams-team",
      "description": "produce multi-language packaging for github-teams-team",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/github-teams-team"
    },
    "package:gitlab-code-tag": {
      "name": "package:gitlab-code-tag",
      "description": "produce multi-language packaging for gitlab-code-tag",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/gitlab-code-tag"
    },
    "package:gitlab-groups-group": {
      "name": "package:gitlab-groups-group",
      "description": "produce multi-language packaging for gitlab-groups-group",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/gitlab-groups-group"
    },
    "package:gitlab-groups-groupaccesstogroup": {
      "name": "package:gitlab-groups-groupaccesstogroup",
      "description": "produce multi-language packaging for gitlab-groups-groupaccesstogroup",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/gitlab-groups-groupaccesstogroup"
    },
    "package:gitlab-groups-usermemberofgroup": {
      "name": "package:gitlab-groups-usermemberofgroup",
      "description": "produce multi-language packaging for gitlab-groups-usermemberofgroup",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/gitlab-groups-usermemberofgroup"
    },
    "package:gitlab-projects-accesstoken": {
      "name": "package:gitlab-projects-accesstoken",
      "description": "produce multi-language packaging for gitlab-projects-accesstoken",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/gitlab-projects-accesstoken"
    },
    "package:gitlab-projects-groupaccesstoproject": {
      "name": "package:gitlab-projects-groupaccesstoproject",
      "description": "produce multi-language packaging for gitlab-projects-groupaccesstoproject",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/gitlab-projects-groupaccesstoproject"
    },
    "package:gitlab-projects-project": {
      "name": "package:gitlab-projects-project",
      "description": "produce multi-language packaging for gitlab-projects-project",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/gitlab-projects-project"
    },
    "package:gitlab-projects-usermemberofproject": {
      "name": "package:gitlab-projects-usermemberofproject",
      "description": "produce multi-language packaging for gitlab-projects-usermemberofproject",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/gitlab-projects-usermemberofproject"
    },
    "package:gremlin-agent-helm": {
      "name": "package:gremlin-agent-helm",
      "description": "produce multi-language packaging for gremlin-agent-helm",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/gremlin-agent-helm"
    },
    "package:jfrog-artifactory-core-module": {
      "name": "package:jfrog-artifactory-core-module",
      "description": "produce multi-language packaging for jfrog-artifactory-core-module",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/jfrog-artifactory-core-module"
    },
    "package:jfrog-artifactory-ec2instance-module": {
      "name": "package:jfrog-artifactory-ec2instance-module",
      "description": "produce multi-language packaging for jfrog-artifactory-ec2instance-module",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/jfrog-artifactory-ec2instance-module"
    },
    "package:jfrog-artifactory-existingvpc-module": {
      "name": "package:jfrog-artifactory-existingvpc-module",
      "description": "produce multi-language packaging for jfrog-artifactory-existingvpc-module",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/jfrog-artifactory-existingvpc-module"
    },
    "package:jfrog-artifactory-newvpc-module": {
      "name": "package:jfrog-artifactory-newvpc-module",
      "description": "produce multi-language packaging for jfrog-artifactory-newvpc-module",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/jfrog-artifactory-newvpc-module"
    },
    "package:jfrog-linux-bastion-module": {
      "name": "package:jfrog-linux-bastion-module",
      "description": "produce multi-language packaging for jfrog-linux-bastion-module",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/jfrog-linux-bastion-module"
    },
    "package:jfrog-vpc-multiaz-module": {
      "name": "package:jfrog-vpc-multiaz-module",
      "description": "produce multi-language packaging for jfrog-vpc-multiaz-module",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/jfrog-vpc-multiaz-module"
    },
    "package:jfrog-xray-ec2instance-module": {
      "name": "package:jfrog-xray-ec2instance-module",
      "description": "produce multi-language packaging for jfrog-xray-ec2instance-module",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/jfrog-xray-ec2instance-module"
    },
    "package:karte-eventbridge-documentdb-module": {
      "name": "package:karte-eventbridge-documentdb-module",
      "description": "produce multi-language packaging for karte-eventbridge-documentdb-module",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/karte-eventbridge-documentdb-module"
    },
    "package:logzio-autodeploymentlogzio-cloudwatch-module": {
      "name": "package:logzio-autodeploymentlogzio-cloudwatch-module",
      "description": "produce multi-language packaging for logzio-autodeploymentlogzio-cloudwatch-module",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/logzio-autodeploymentlogzio-cloudwatch-module"
    },
    "package:logzio-awscostandusage-cur-module": {
      "name": "package:logzio-awscostandusage-cur-module",
      "description": "produce multi-language packaging for logzio-awscostandusage-cur-module",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/logzio-awscostandusage-cur-module"
    },
    "package:logzio-awssecurityhub-collector-module": {
      "name": "package:logzio-awssecurityhub-collector-module",
      "description": "produce multi-language packaging for logzio-awssecurityhub-collector-module",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/logzio-awssecurityhub-collector-module"
    },
    "package:logzio-kinesisshipper-kinesisshipper-module": {
      "name": "package:logzio-kinesisshipper-kinesisshipper-module",
      "description": "produce multi-language packaging for logzio-kinesisshipper-kinesisshipper-module",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/logzio-kinesisshipper-kinesisshipper-module"
    },
    "package:logzio-myservice-myname-module": {
      "name": "package:logzio-myservice-myname-module",
      "description": "produce multi-language packaging for logzio-myservice-myname-module",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/logzio-myservice-myname-module"
    },
    "package:mongodb-atlas-alertconfiguration": {
      "name": "package:mongodb-atlas-alertconfiguration",
      "description": "produce multi-language packaging for mongodb-atlas-alertconfiguration",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-alertconfiguration"
    },
    "package:mongodb-atlas-auditing": {
      "name": "package:mongodb-atlas-auditing",
      "description": "produce multi-language packaging for mongodb-atlas-auditing",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-auditing"
    },
    "package:mongodb-atlas-awsiamdatabaseuser": {
      "name": "package:mongodb-atlas-awsiamdatabaseuser",
      "description": "produce multi-language packaging for mongodb-atlas-awsiamdatabaseuser",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-awsiamdatabaseuser"
    },
    "package:mongodb-atlas-cloudbackuprestorejobs": {
      "name": "package:mongodb-atlas-cloudbackuprestorejobs",
      "description": "produce multi-language packaging for mongodb-atlas-cloudbackuprestorejobs",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-cloudbackuprestorejobs"
    },
    "package:mongodb-atlas-cloudbackupschedule": {
      "name": "package:mongodb-atlas-cloudbackupschedule",
      "description": "produce multi-language packaging for mongodb-atlas-cloudbackupschedule",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-cloudbackupschedule"
    },
    "package:mongodb-atlas-cloudbackupsnapshot": {
      "name": "package:mongodb-atlas-cloudbackupsnapshot",
      "description": "produce multi-language packaging for mongodb-atlas-cloudbackupsnapshot",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-cloudbackupsnapshot"
    },
    "package:mongodb-atlas-cloudbackupsnapshotexportbucket": {
      "name": "package:mongodb-atlas-cloudbackupsnapshotexportbucket",
      "description": "produce multi-language packaging for mongodb-atlas-cloudbackupsnapshotexportbucket",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-cloudbackupsnapshotexportbucket"
    },
    "package:mongodb-atlas-cluster": {
      "name": "package:mongodb-atlas-cluster",
      "description": "produce multi-language packaging for mongodb-atlas-cluster",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-cluster"
    },
    "package:mongodb-atlas-customdbrole": {
      "name": "package:mongodb-atlas-customdbrole",
      "description": "produce multi-language packaging for mongodb-atlas-customdbrole",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-customdbrole"
    },
    "package:mongodb-atlas-customdnsconfigurationclusteraws": {
      "name": "package:mongodb-atlas-customdnsconfigurationclusteraws",
      "description": "produce multi-language packaging for mongodb-atlas-customdnsconfigurationclusteraws",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-customdnsconfigurationclusteraws"
    },
    "package:mongodb-atlas-databaseuser": {
      "name": "package:mongodb-atlas-databaseuser",
      "description": "produce multi-language packaging for mongodb-atlas-databaseuser",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-databaseuser"
    },
    "package:mongodb-atlas-datalakes": {
      "name": "package:mongodb-atlas-datalakes",
      "description": "produce multi-language packaging for mongodb-atlas-datalakes",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-datalakes"
    },
    "package:mongodb-atlas-encryptionatrest": {
      "name": "package:mongodb-atlas-encryptionatrest",
      "description": "produce multi-language packaging for mongodb-atlas-encryptionatrest",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-encryptionatrest"
    },
    "package:mongodb-atlas-federatedsettingsorgrolemapping": {
      "name": "package:mongodb-atlas-federatedsettingsorgrolemapping",
      "description": "produce multi-language packaging for mongodb-atlas-federatedsettingsorgrolemapping",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-federatedsettingsorgrolemapping"
    },
    "package:mongodb-atlas-globalclusterconfig": {
      "name": "package:mongodb-atlas-globalclusterconfig",
      "description": "produce multi-language packaging for mongodb-atlas-globalclusterconfig",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-globalclusterconfig"
    },
    "package:mongodb-atlas-ldapconfiguration": {
      "name": "package:mongodb-atlas-ldapconfiguration",
      "description": "produce multi-language packaging for mongodb-atlas-ldapconfiguration",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-ldapconfiguration"
    },
    "package:mongodb-atlas-ldapverify": {
      "name": "package:mongodb-atlas-ldapverify",
      "description": "produce multi-language packaging for mongodb-atlas-ldapverify",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-ldapverify"
    },
    "package:mongodb-atlas-maintenancewindow": {
      "name": "package:mongodb-atlas-maintenancewindow",
      "description": "produce multi-language packaging for mongodb-atlas-maintenancewindow",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-maintenancewindow"
    },
    "package:mongodb-atlas-networkcontainer": {
      "name": "package:mongodb-atlas-networkcontainer",
      "description": "produce multi-language packaging for mongodb-atlas-networkcontainer",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-networkcontainer"
    },
    "package:mongodb-atlas-networkpeering": {
      "name": "package:mongodb-atlas-networkpeering",
      "description": "produce multi-language packaging for mongodb-atlas-networkpeering",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-networkpeering"
    },
    "package:mongodb-atlas-onlinearchive": {
      "name": "package:mongodb-atlas-onlinearchive",
      "description": "produce multi-language packaging for mongodb-atlas-onlinearchive",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-onlinearchive"
    },
    "package:mongodb-atlas-orginvitation": {
      "name": "package:mongodb-atlas-orginvitation",
      "description": "produce multi-language packaging for mongodb-atlas-orginvitation",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-orginvitation"
    },
    "package:mongodb-atlas-privateendpoint": {
      "name": "package:mongodb-atlas-privateendpoint",
      "description": "produce multi-language packaging for mongodb-atlas-privateendpoint",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-privateendpoint"
    },
    "package:mongodb-atlas-privateendpointadl": {
      "name": "package:mongodb-atlas-privateendpointadl",
      "description": "produce multi-language packaging for mongodb-atlas-privateendpointadl",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-privateendpointadl"
    },
    "package:mongodb-atlas-privateendpointregionalmode": {
      "name": "package:mongodb-atlas-privateendpointregionalmode",
      "description": "produce multi-language packaging for mongodb-atlas-privateendpointregionalmode",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-privateendpointregionalmode"
    },
    "package:mongodb-atlas-project": {
      "name": "package:mongodb-atlas-project",
      "description": "produce multi-language packaging for mongodb-atlas-project",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-project"
    },
    "package:mongodb-atlas-projectinvitation": {
      "name": "package:mongodb-atlas-projectinvitation",
      "description": "produce multi-language packaging for mongodb-atlas-projectinvitation",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-projectinvitation"
    },
    "package:mongodb-atlas-projectipaccesslist": {
      "name": "package:mongodb-atlas-projectipaccesslist",
      "description": "produce multi-language packaging for mongodb-atlas-projectipaccesslist",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-projectipaccesslist"
    },
    "package:mongodb-atlas-searchindex": {
      "name": "package:mongodb-atlas-searchindex",
      "description": "produce multi-language packaging for mongodb-atlas-searchindex",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-searchindex"
    },
    "package:mongodb-atlas-serverlessinstance": {
      "name": "package:mongodb-atlas-serverlessinstance",
      "description": "produce multi-language packaging for mongodb-atlas-serverlessinstance",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-serverlessinstance"
    },
    "package:mongodb-atlas-teams": {
      "name": "package:mongodb-atlas-teams",
      "description": "produce multi-language packaging for mongodb-atlas-teams",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-teams"
    },
    "package:mongodb-atlas-thirdpartyintegration": {
      "name": "package:mongodb-atlas-thirdpartyintegration",
      "description": "produce multi-language packaging for mongodb-atlas-thirdpartyintegration",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-thirdpartyintegration"
    },
    "package:mongodb-atlas-trigger": {
      "name": "package:mongodb-atlas-trigger",
      "description": "produce multi-language packaging for mongodb-atlas-trigger",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-trigger"
    },
    "package:mongodb-atlas-x509authenticationdatabaseuser": {
      "name": "package:mongodb-atlas-x509authenticationdatabaseuser",
      "description": "produce multi-language packaging for mongodb-atlas-x509authenticationdatabaseuser",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/mongodb-atlas-x509authenticationdatabaseuser"
    },
    "package:newrelic-cloudformation-dashboards": {
      "name": "package:newrelic-cloudformation-dashboards",
      "description": "produce multi-language packaging for newrelic-cloudformation-dashboards",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/newrelic-cloudformation-dashboards"
    },
    "package:newrelic-cloudformation-tagging": {
      "name": "package:newrelic-cloudformation-tagging",
      "description": "produce multi-language packaging for newrelic-cloudformation-tagging",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/newrelic-cloudformation-tagging"
    },
    "package:newrelic-cloudformation-workloads": {
      "name": "package:newrelic-cloudformation-workloads",
      "description": "produce multi-language packaging for newrelic-cloudformation-workloads",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/newrelic-cloudformation-workloads"
    },
    "package:newrelic-observability-dashboards": {
      "name": "package:newrelic-observability-dashboards",
      "description": "produce multi-language packaging for newrelic-observability-dashboards",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/newrelic-observability-dashboards"
    },
    "package:newrelic-observability-workloads": {
      "name": "package:newrelic-observability-workloads",
      "description": "produce multi-language packaging for newrelic-observability-workloads",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/newrelic-observability-workloads"
    },
    "package:okta-application-application": {
      "name": "package:okta-application-application",
      "description": "produce multi-language packaging for okta-application-application",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/okta-application-application"
    },
    "package:okta-group-group": {
      "name": "package:okta-group-group",
      "description": "produce multi-language packaging for okta-group-group",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/okta-group-group"
    },
    "package:okta-group-groupapplicationassociation": {
      "name": "package:okta-group-groupapplicationassociation",
      "description": "produce multi-language packaging for okta-group-groupapplicationassociation",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/okta-group-groupapplicationassociation"
    },
    "package:okta-group-membership": {
      "name": "package:okta-group-membership",
      "description": "produce multi-language packaging for okta-group-membership",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/okta-group-membership"
    },
    "package:okta-policy-policy": {
      "name": "package:okta-policy-policy",
      "description": "produce multi-language packaging for okta-policy-policy",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/okta-policy-policy"
    },
    "package:org-test-sample-module": {
      "name": "package:org-test-sample-module",
      "description": "produce multi-language packaging for org-test-sample-module",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/org-test-sample-module"
    },
    "package:pagerduty-escalationpolicies-escalationpolicy": {
      "name": "package:pagerduty-escalationpolicies-escalationpolicy",
      "description": "produce multi-language packaging for pagerduty-escalationpolicies-escalationpolicy",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/pagerduty-escalationpolicies-escalationpolicy"
    },
    "package:pagerduty-responseplays-responseplay": {
      "name": "package:pagerduty-responseplays-responseplay",
      "description": "produce multi-language packaging for pagerduty-responseplays-responseplay",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/pagerduty-responseplays-responseplay"
    },
    "package:pagerduty-schedules-schedule": {
      "name": "package:pagerduty-schedules-schedule",
      "description": "produce multi-language packaging for pagerduty-schedules-schedule",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/pagerduty-schedules-schedule"
    },
    "package:pagerduty-teams-membership": {
      "name": "package:pagerduty-teams-membership",
      "description": "produce multi-language packaging for pagerduty-teams-membership",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/pagerduty-teams-membership"
    },
    "package:pagerduty-teams-team": {
      "name": "package:pagerduty-teams-team",
      "description": "produce multi-language packaging for pagerduty-teams-team",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/pagerduty-teams-team"
    },
    "package:pagerduty-users-user": {
      "name": "package:pagerduty-users-user",
      "description": "produce multi-language packaging for pagerduty-users-user",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/pagerduty-users-user"
    },
    "package:paloaltonetworks-cloudngfw-ngfw": {
      "name": "package:paloaltonetworks-cloudngfw-ngfw",
      "description": "produce multi-language packaging for paloaltonetworks-cloudngfw-ngfw",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/paloaltonetworks-cloudngfw-ngfw"
    },
    "package:paloaltonetworks-cloudngfw-rulestack": {
      "name": "package:paloaltonetworks-cloudngfw-rulestack",
      "description": "produce multi-language packaging for paloaltonetworks-cloudngfw-rulestack",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/paloaltonetworks-cloudngfw-rulestack"
    },
    "package:registry-test-resource1-module": {
      "name": "package:registry-test-resource1-module",
      "description": "produce multi-language packaging for registry-test-resource1-module",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/registry-test-resource1-module"
    },
    "package:rollbar-notifications-rule": {
      "name": "package:rollbar-notifications-rule",
      "description": "produce multi-language packaging for rollbar-notifications-rule",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/rollbar-notifications-rule"
    },
    "package:rollbar-projects-accesstoken": {
      "name": "package:rollbar-projects-accesstoken",
      "description": "produce multi-language packaging for rollbar-projects-accesstoken",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/rollbar-projects-accesstoken"
    },
    "package:rollbar-projects-project": {
      "name": "package:rollbar-projects-project",
      "description": "produce multi-language packaging for rollbar-projects-project",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/rollbar-projects-project"
    },
    "package:rollbar-teams-membership": {
      "name": "package:rollbar-teams-membership",
      "description": "produce multi-language packaging for rollbar-teams-membership",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/rollbar-teams-membership"
    },
    "package:rollbar-teams-team": {
      "name": "package:rollbar-teams-team",
      "description": "produce multi-language packaging for rollbar-teams-team",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/rollbar-teams-team"
    },
    "package:snowflake-database-database": {
      "name": "package:snowflake-database-database",
      "description": "produce multi-language packaging for snowflake-database-database",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/snowflake-database-database"
    },
    "package:snowflake-database-grant": {
      "name": "package:snowflake-database-grant",
      "description": "produce multi-language packaging for snowflake-database-grant",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/snowflake-database-grant"
    },
    "package:snowflake-role-grant": {
      "name": "package:snowflake-role-grant",
      "description": "produce multi-language packaging for snowflake-role-grant",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/snowflake-role-grant"
    },
    "package:snowflake-role-role": {
      "name": "package:snowflake-role-role",
      "description": "produce multi-language packaging for snowflake-role-role",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/snowflake-role-role"
    },
    "package:snowflake-user-user": {
      "name": "package:snowflake-user-user",
      "description": "produce multi-language packaging for snowflake-user-user",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/snowflake-user-user"
    },
    "package:snowflake-warehouse-grant": {
      "name": "package:snowflake-warehouse-grant",
      "description": "produce multi-language packaging for snowflake-warehouse-grant",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/snowflake-warehouse-grant"
    },
    "package:snyk-container-helm": {
      "name": "package:snyk-container-helm",
      "description": "produce multi-language packaging for snyk-container-helm",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/snyk-container-helm"
    },
    "package:splunk-enterprise-quickstart-module": {
      "name": "package:splunk-enterprise-quickstart-module",
      "description": "produce multi-language packaging for splunk-enterprise-quickstart-module",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/splunk-enterprise-quickstart-module"
    },
    "package:spot-elastigroup-group": {
      "name": "package:spot-elastigroup-group",
      "description": "produce multi-language packaging for spot-elastigroup-group",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/spot-elastigroup-group"
    },
    "package:stackery-open-bastion-module": {
      "name": "package:stackery-open-bastion-module",
      "description": "produce multi-language packaging for stackery-open-bastion-module",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/stackery-open-bastion-module"
    },
    "package:stocks-orders-marketorder": {
      "name": "package:stocks-orders-marketorder",
      "description": "produce multi-language packaging for stocks-orders-marketorder",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/stocks-orders-marketorder"
    },
    "package:symphonia-opensource-cloudformationartifactsbucket-module": {
      "name": "package:symphonia-opensource-cloudformationartifactsbucket-module",
      "description": "produce multi-language packaging for symphonia-opensource-cloudformationartifactsbucket-module",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/symphonia-opensource-cloudformationartifactsbucket-module"
    },
    "package:sysdig-helm-agent": {
      "name": "package:sysdig-helm-agent",
      "description": "produce multi-language packaging for sysdig-helm-agent",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/sysdig-helm-agent"
    },
    "package:tf-ad-computer": {
      "name": "package:tf-ad-computer",
      "description": "produce multi-language packaging for tf-ad-computer",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/tf-ad-computer"
    },
    "package:tf-ad-user": {
      "name": "package:tf-ad-user",
      "description": "produce multi-language packaging for tf-ad-user",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/tf-ad-user"
    },
    "package:tf-aws-keypair": {
      "name": "package:tf-aws-keypair",
      "description": "produce multi-language packaging for tf-aws-keypair",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/tf-aws-keypair"
    },
    "package:tf-aws-s3bucket": {
      "name": "package:tf-aws-s3bucket",
      "description": "produce multi-language packaging for tf-aws-s3bucket",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/tf-aws-s3bucket"
    },
    "package:tf-aws-s3bucketobject": {
      "name": "package:tf-aws-s3bucketobject",
      "description": "produce multi-language packaging for tf-aws-s3bucketobject",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/tf-aws-s3bucketobject"
    },
    "package:tf-azuread-application": {
      "name": "package:tf-azuread-application",
      "description": "produce multi-language packaging for tf-azuread-application",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/tf-azuread-application"
    },
    "package:tf-azuread-user": {
      "name": "package:tf-azuread-user",
      "description": "produce multi-language packaging for tf-azuread-user",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/tf-azuread-user"
    },
    "package:tf-cloudflare-record": {
      "name": "package:tf-cloudflare-record",
      "description": "produce multi-language packaging for tf-cloudflare-record",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/tf-cloudflare-record"
    },
    "package:tf-digitalocean-droplet": {
      "name": "package:tf-digitalocean-droplet",
      "description": "produce multi-language packaging for tf-digitalocean-droplet",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/tf-digitalocean-droplet"
    },
    "package:tf-github-repository": {
      "name": "package:tf-github-repository",
      "description": "produce multi-language packaging for tf-github-repository",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/tf-github-repository"
    },
    "package:tf-google-storagebucket": {
      "name": "package:tf-google-storagebucket",
      "description": "produce multi-language packaging for tf-google-storagebucket",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/tf-google-storagebucket"
    },
    "package:tf-pagerduty-service": {
      "name": "package:tf-pagerduty-service",
      "description": "produce multi-language packaging for tf-pagerduty-service",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/tf-pagerduty-service"
    },
    "package:tf-random-string": {
      "name": "package:tf-random-string",
      "description": "produce multi-language packaging for tf-random-string",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/tf-random-string"
    },
    "package:tf-random-uuid": {
      "name": "package:tf-random-uuid",
      "description": "produce multi-language packaging for tf-random-uuid",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/tf-random-uuid"
    },
    "package:trendmicro-cloudonecontainer-helm": {
      "name": "package:trendmicro-cloudonecontainer-helm",
      "description": "produce multi-language packaging for trendmicro-cloudonecontainer-helm",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/trendmicro-cloudonecontainer-helm"
    },
    "package:zmk-iam-lambdabasicrole-module": {
      "name": "package:zmk-iam-lambdabasicrole-module",
      "description": "produce multi-language packaging for zmk-iam-lambdabasicrole-module",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ],
      "cwd": "packages/@cdk-cloudformation/zmk-iam-lambdabasicrole-module"
    },
    "post-compile": {
      "name": "post-compile",
      "description": "Runs after successful compilation"
    },
    "post-upgrade": {
      "name": "post-upgrade",
      "description": "Runs after upgrading dependencies"
    },
    "pre-compile": {
      "name": "pre-compile",
      "description": "Prepare the project for compilation"
    },
    "release": {
      "name": "release",
      "description": "Prepare a release from \"main\" branch",
      "env": {
        "RELEASE": "true"
      },
      "steps": [
        {
          "exec": "rm -fr dist"
        },
        {
          "spawn": "bump"
        },
        {
          "spawn": "build"
        },
        {
          "spawn": "unbump"
        },
        {
          "exec": "git diff --ignore-space-at-eol --exit-code"
        }
      ]
    },
    "test": {
      "name": "test",
      "description": "Run tests",
      "steps": [
        {
          "exec": "jest --passWithNoTests --updateSnapshot",
          "receiveArgs": true
        },
        {
          "spawn": "eslint"
        }
      ]
    },
    "test:watch": {
      "name": "test:watch",
      "description": "Run jest in watch mode",
      "steps": [
        {
          "exec": "jest --watch"
        }
      ]
    },
    "unbump": {
      "name": "unbump",
      "description": "Restores version to 0.0.0",
      "env": {
        "OUTFILE": "package.json",
        "CHANGELOG": "dist/changelog.md",
        "BUMPFILE": "dist/version.txt",
        "RELEASETAG": "dist/releasetag.txt",
        "RELEASE_TAG_PREFIX": ""
      },
      "steps": [
        {
          "builtin": "release/reset-version"
        }
      ]
    },
    "update-registry": {
      "name": "update-registry",
      "steps": [
        {
          "exec": "node registry/refresh.js"
        }
      ]
    },
    "upgrade": {
      "name": "upgrade",
      "description": "upgrade dependencies",
      "env": {
        "CI": "0"
      },
      "steps": [
        {
          "exec": "yarn upgrade npm-check-updates"
        },
        {
          "exec": "npm-check-updates --dep dev --upgrade --target=minor"
        },
        {
          "exec": "npm-check-updates --dep optional --upgrade --target=minor"
        },
        {
          "exec": "npm-check-updates --dep peer --upgrade --target=minor"
        },
        {
          "exec": "npm-check-updates --dep prod --upgrade --target=minor"
        },
        {
          "exec": "npm-check-updates --dep bundle --upgrade --target=minor"
        },
        {
          "exec": "yarn install --check-files"
        },
        {
          "exec": "yarn upgrade"
        },
        {
          "exec": "npx projen"
        },
        {
          "spawn": "post-upgrade"
        }
      ]
    },
    "watch": {
      "name": "watch",
      "description": "Watch & compile in the background",
      "steps": [
        {
          "exec": "tsc --build -w"
        }
      ]
    }
  },
  "env": {
    "PATH": "$(npx -c \"node -e \\\"console.log(process.env.PATH)\\\"\")"
  },
  "//": "~~ Generated by projen. To modify, edit .projenrc.js and run \"npx projen\"."
}
