{
  "name": "cdk-cloudformation-types",
  "scripts": {
    "build": "npx projen build",
    "build:alexa-ask-skill": "npx projen build:alexa-ask-skill",
    "build:aqua-enterprise-enforcer": "npx projen build:aqua-enterprise-enforcer",
    "build:aqua-enterprise-kubeenforcer": "npx projen build:aqua-enterprise-kubeenforcer",
    "build:aqua-enterprise-scanner": "npx projen build:aqua-enterprise-scanner",
    "build:aqua-enterprise-server": "npx projen build:aqua-enterprise-server",
    "build:atlassian-opsgenie-integration": "npx projen build:atlassian-opsgenie-integration",
    "build:atlassian-opsgenie-team": "npx projen build:atlassian-opsgenie-team",
    "build:atlassian-opsgenie-user": "npx projen build:atlassian-opsgenie-user",
    "build:awsqs-checkpoint-cloudguardqs-module": "npx projen build:awsqs-checkpoint-cloudguardqs-module",
    "build:awsqs-ec2-linuxbastionqs-module": "npx projen build:awsqs-ec2-linuxbastionqs-module",
    "build:awsqs-eks-cluster": "npx projen build:awsqs-eks-cluster",
    "build:awsqs-iridium-cloudconnectqs-module": "npx projen build:awsqs-iridium-cloudconnectqs-module",
    "build:awsqs-kubernetes-get": "npx projen build:awsqs-kubernetes-get",
    "build:awsqs-kubernetes-helm": "npx projen build:awsqs-kubernetes-helm",
    "build:awsqs-kubernetes-resource": "npx projen build:awsqs-kubernetes-resource",
    "build:awsqs-vpc-vpcqs-module": "npx projen build:awsqs-vpc-vpcqs-module",
    "build:datadog-dashboards-dashboard": "npx projen build:datadog-dashboards-dashboard",
    "build:datadog-integrations-aws": "npx projen build:datadog-integrations-aws",
    "build:datadog-monitors-downtime": "npx projen build:datadog-monitors-downtime",
    "build:datadog-monitors-monitor": "npx projen build:datadog-monitors-monitor",
    "build:datadog-slos-slo": "npx projen build:datadog-slos-slo",
    "build:fireeye-cloudintegrations-cloudwatch": "npx projen build:fireeye-cloudintegrations-cloudwatch",
    "build:generic-database-schema": "npx projen build:generic-database-schema",
    "build:generic-transcribe-vocabulary": "npx projen build:generic-transcribe-vocabulary",
    "build:gremlin-agent-helm": "npx projen build:gremlin-agent-helm",
    "build:jfrog-artifactory-core-module": "npx projen build:jfrog-artifactory-core-module",
    "build:jfrog-artifactory-ec2instance-module": "npx projen build:jfrog-artifactory-ec2instance-module",
    "build:jfrog-artifactory-existingvpc-module": "npx projen build:jfrog-artifactory-existingvpc-module",
    "build:jfrog-artifactory-newvpc-module": "npx projen build:jfrog-artifactory-newvpc-module",
    "build:jfrog-linux-bastion-module": "npx projen build:jfrog-linux-bastion-module",
    "build:jfrog-vpc-multiaz-module": "npx projen build:jfrog-vpc-multiaz-module",
    "build:jfrog-xray-ec2instance-module": "npx projen build:jfrog-xray-ec2instance-module",
    "build:logzio-autodeploymentlogzio-cloudwatch-module": "npx projen build:logzio-autodeploymentlogzio-cloudwatch-module",
    "build:logzio-awscostandusage-cur-module": "npx projen build:logzio-awscostandusage-cur-module",
    "build:logzio-awssecurityhub-collector-module": "npx projen build:logzio-awssecurityhub-collector-module",
    "build:logzio-kinesisshipper-kinesisshipper-module": "npx projen build:logzio-kinesisshipper-kinesisshipper-module",
    "build:logzio-myservice-myname-module": "npx projen build:logzio-myservice-myname-module",
    "build:mongodb-atlas-cluster": "npx projen build:mongodb-atlas-cluster",
    "build:mongodb-atlas-databaseuser": "npx projen build:mongodb-atlas-databaseuser",
    "build:mongodb-atlas-networkpeering": "npx projen build:mongodb-atlas-networkpeering",
    "build:mongodb-atlas-project": "npx projen build:mongodb-atlas-project",
    "build:mongodb-atlas-projectipaccesslist": "npx projen build:mongodb-atlas-projectipaccesslist",
    "build:registry-test-resource1-module": "npx projen build:registry-test-resource1-module",
    "build:snyk-container-helm": "npx projen build:snyk-container-helm",
    "build:splunk-enterprise-quickstart-module": "npx projen build:splunk-enterprise-quickstart-module",
    "build:spot-elastigroup-group": "npx projen build:spot-elastigroup-group",
    "build:stackery-open-bastion-module": "npx projen build:stackery-open-bastion-module",
    "build:stocks-orders-marketorder": "npx projen build:stocks-orders-marketorder",
    "build:symphonia-opensource-cloudformationartifactsbucket-module": "npx projen build:symphonia-opensource-cloudformationartifactsbucket-module",
    "build:sysdig-helm-agent": "npx projen build:sysdig-helm-agent",
    "build:tf-ad-computer": "npx projen build:tf-ad-computer",
    "build:tf-ad-user": "npx projen build:tf-ad-user",
    "build:tf-aws-keypair": "npx projen build:tf-aws-keypair",
    "build:tf-aws-s3bucket": "npx projen build:tf-aws-s3bucket",
    "build:tf-aws-s3bucketobject": "npx projen build:tf-aws-s3bucketobject",
    "build:tf-azuread-application": "npx projen build:tf-azuread-application",
    "build:tf-azuread-user": "npx projen build:tf-azuread-user",
    "build:tf-cloudflare-record": "npx projen build:tf-cloudflare-record",
    "build:tf-digitalocean-droplet": "npx projen build:tf-digitalocean-droplet",
    "build:tf-github-repository": "npx projen build:tf-github-repository",
    "build:tf-google-storagebucket": "npx projen build:tf-google-storagebucket",
    "build:tf-pagerduty-service": "npx projen build:tf-pagerduty-service",
    "build:tf-random-string": "npx projen build:tf-random-string",
    "build:tf-random-uuid": "npx projen build:tf-random-uuid",
    "build:trendmicro-cloudonecontainer-helm": "npx projen build:trendmicro-cloudonecontainer-helm",
    "bump": "npx projen bump",
    "cdk-deploy:github-connect": "npx projen cdk-deploy:github-connect",
    "clobber": "npx projen clobber",
    "compile": "npx projen compile",
    "compile:alexa-ask-skill": "npx projen compile:alexa-ask-skill",
    "compile:aqua-enterprise-enforcer": "npx projen compile:aqua-enterprise-enforcer",
    "compile:aqua-enterprise-kubeenforcer": "npx projen compile:aqua-enterprise-kubeenforcer",
    "compile:aqua-enterprise-scanner": "npx projen compile:aqua-enterprise-scanner",
    "compile:aqua-enterprise-server": "npx projen compile:aqua-enterprise-server",
    "compile:atlassian-opsgenie-integration": "npx projen compile:atlassian-opsgenie-integration",
    "compile:atlassian-opsgenie-team": "npx projen compile:atlassian-opsgenie-team",
    "compile:atlassian-opsgenie-user": "npx projen compile:atlassian-opsgenie-user",
    "compile:awsqs-checkpoint-cloudguardqs-module": "npx projen compile:awsqs-checkpoint-cloudguardqs-module",
    "compile:awsqs-ec2-linuxbastionqs-module": "npx projen compile:awsqs-ec2-linuxbastionqs-module",
    "compile:awsqs-eks-cluster": "npx projen compile:awsqs-eks-cluster",
    "compile:awsqs-iridium-cloudconnectqs-module": "npx projen compile:awsqs-iridium-cloudconnectqs-module",
    "compile:awsqs-kubernetes-get": "npx projen compile:awsqs-kubernetes-get",
    "compile:awsqs-kubernetes-helm": "npx projen compile:awsqs-kubernetes-helm",
    "compile:awsqs-kubernetes-resource": "npx projen compile:awsqs-kubernetes-resource",
    "compile:awsqs-vpc-vpcqs-module": "npx projen compile:awsqs-vpc-vpcqs-module",
    "compile:datadog-dashboards-dashboard": "npx projen compile:datadog-dashboards-dashboard",
    "compile:datadog-integrations-aws": "npx projen compile:datadog-integrations-aws",
    "compile:datadog-monitors-downtime": "npx projen compile:datadog-monitors-downtime",
    "compile:datadog-monitors-monitor": "npx projen compile:datadog-monitors-monitor",
    "compile:datadog-slos-slo": "npx projen compile:datadog-slos-slo",
    "compile:fireeye-cloudintegrations-cloudwatch": "npx projen compile:fireeye-cloudintegrations-cloudwatch",
    "compile:generic-database-schema": "npx projen compile:generic-database-schema",
    "compile:generic-transcribe-vocabulary": "npx projen compile:generic-transcribe-vocabulary",
    "compile:gremlin-agent-helm": "npx projen compile:gremlin-agent-helm",
    "compile:jfrog-artifactory-core-module": "npx projen compile:jfrog-artifactory-core-module",
    "compile:jfrog-artifactory-ec2instance-module": "npx projen compile:jfrog-artifactory-ec2instance-module",
    "compile:jfrog-artifactory-existingvpc-module": "npx projen compile:jfrog-artifactory-existingvpc-module",
    "compile:jfrog-artifactory-newvpc-module": "npx projen compile:jfrog-artifactory-newvpc-module",
    "compile:jfrog-linux-bastion-module": "npx projen compile:jfrog-linux-bastion-module",
    "compile:jfrog-vpc-multiaz-module": "npx projen compile:jfrog-vpc-multiaz-module",
    "compile:jfrog-xray-ec2instance-module": "npx projen compile:jfrog-xray-ec2instance-module",
    "compile:logzio-autodeploymentlogzio-cloudwatch-module": "npx projen compile:logzio-autodeploymentlogzio-cloudwatch-module",
    "compile:logzio-awscostandusage-cur-module": "npx projen compile:logzio-awscostandusage-cur-module",
    "compile:logzio-awssecurityhub-collector-module": "npx projen compile:logzio-awssecurityhub-collector-module",
    "compile:logzio-kinesisshipper-kinesisshipper-module": "npx projen compile:logzio-kinesisshipper-kinesisshipper-module",
    "compile:logzio-myservice-myname-module": "npx projen compile:logzio-myservice-myname-module",
    "compile:mongodb-atlas-cluster": "npx projen compile:mongodb-atlas-cluster",
    "compile:mongodb-atlas-databaseuser": "npx projen compile:mongodb-atlas-databaseuser",
    "compile:mongodb-atlas-networkpeering": "npx projen compile:mongodb-atlas-networkpeering",
    "compile:mongodb-atlas-project": "npx projen compile:mongodb-atlas-project",
    "compile:mongodb-atlas-projectipaccesslist": "npx projen compile:mongodb-atlas-projectipaccesslist",
    "compile:registry-test-resource1-module": "npx projen compile:registry-test-resource1-module",
    "compile:snyk-container-helm": "npx projen compile:snyk-container-helm",
    "compile:splunk-enterprise-quickstart-module": "npx projen compile:splunk-enterprise-quickstart-module",
    "compile:spot-elastigroup-group": "npx projen compile:spot-elastigroup-group",
    "compile:stackery-open-bastion-module": "npx projen compile:stackery-open-bastion-module",
    "compile:stocks-orders-marketorder": "npx projen compile:stocks-orders-marketorder",
    "compile:symphonia-opensource-cloudformationartifactsbucket-module": "npx projen compile:symphonia-opensource-cloudformationartifactsbucket-module",
    "compile:sysdig-helm-agent": "npx projen compile:sysdig-helm-agent",
    "compile:tf-ad-computer": "npx projen compile:tf-ad-computer",
    "compile:tf-ad-user": "npx projen compile:tf-ad-user",
    "compile:tf-aws-keypair": "npx projen compile:tf-aws-keypair",
    "compile:tf-aws-s3bucket": "npx projen compile:tf-aws-s3bucket",
    "compile:tf-aws-s3bucketobject": "npx projen compile:tf-aws-s3bucketobject",
    "compile:tf-azuread-application": "npx projen compile:tf-azuread-application",
    "compile:tf-azuread-user": "npx projen compile:tf-azuread-user",
    "compile:tf-cloudflare-record": "npx projen compile:tf-cloudflare-record",
    "compile:tf-digitalocean-droplet": "npx projen compile:tf-digitalocean-droplet",
    "compile:tf-github-repository": "npx projen compile:tf-github-repository",
    "compile:tf-google-storagebucket": "npx projen compile:tf-google-storagebucket",
    "compile:tf-pagerduty-service": "npx projen compile:tf-pagerduty-service",
    "compile:tf-random-string": "npx projen compile:tf-random-string",
    "compile:tf-random-uuid": "npx projen compile:tf-random-uuid",
    "compile:trendmicro-cloudonecontainer-helm": "npx projen compile:trendmicro-cloudonecontainer-helm",
    "default": "npx projen default",
    "eslint": "npx projen eslint",
    "package": "npx projen package",
    "package:alexa-ask-skill": "npx projen package:alexa-ask-skill",
    "package:aqua-enterprise-enforcer": "npx projen package:aqua-enterprise-enforcer",
    "package:aqua-enterprise-kubeenforcer": "npx projen package:aqua-enterprise-kubeenforcer",
    "package:aqua-enterprise-scanner": "npx projen package:aqua-enterprise-scanner",
    "package:aqua-enterprise-server": "npx projen package:aqua-enterprise-server",
    "package:atlassian-opsgenie-integration": "npx projen package:atlassian-opsgenie-integration",
    "package:atlassian-opsgenie-team": "npx projen package:atlassian-opsgenie-team",
    "package:atlassian-opsgenie-user": "npx projen package:atlassian-opsgenie-user",
    "package:awsqs-checkpoint-cloudguardqs-module": "npx projen package:awsqs-checkpoint-cloudguardqs-module",
    "package:awsqs-ec2-linuxbastionqs-module": "npx projen package:awsqs-ec2-linuxbastionqs-module",
    "package:awsqs-eks-cluster": "npx projen package:awsqs-eks-cluster",
    "package:awsqs-iridium-cloudconnectqs-module": "npx projen package:awsqs-iridium-cloudconnectqs-module",
    "package:awsqs-kubernetes-get": "npx projen package:awsqs-kubernetes-get",
    "package:awsqs-kubernetes-helm": "npx projen package:awsqs-kubernetes-helm",
    "package:awsqs-kubernetes-resource": "npx projen package:awsqs-kubernetes-resource",
    "package:awsqs-vpc-vpcqs-module": "npx projen package:awsqs-vpc-vpcqs-module",
    "package:datadog-dashboards-dashboard": "npx projen package:datadog-dashboards-dashboard",
    "package:datadog-integrations-aws": "npx projen package:datadog-integrations-aws",
    "package:datadog-monitors-downtime": "npx projen package:datadog-monitors-downtime",
    "package:datadog-monitors-monitor": "npx projen package:datadog-monitors-monitor",
    "package:datadog-slos-slo": "npx projen package:datadog-slos-slo",
    "package:fireeye-cloudintegrations-cloudwatch": "npx projen package:fireeye-cloudintegrations-cloudwatch",
    "package:generic-database-schema": "npx projen package:generic-database-schema",
    "package:generic-transcribe-vocabulary": "npx projen package:generic-transcribe-vocabulary",
    "package:gremlin-agent-helm": "npx projen package:gremlin-agent-helm",
    "package:jfrog-artifactory-core-module": "npx projen package:jfrog-artifactory-core-module",
    "package:jfrog-artifactory-ec2instance-module": "npx projen package:jfrog-artifactory-ec2instance-module",
    "package:jfrog-artifactory-existingvpc-module": "npx projen package:jfrog-artifactory-existingvpc-module",
    "package:jfrog-artifactory-newvpc-module": "npx projen package:jfrog-artifactory-newvpc-module",
    "package:jfrog-linux-bastion-module": "npx projen package:jfrog-linux-bastion-module",
    "package:jfrog-vpc-multiaz-module": "npx projen package:jfrog-vpc-multiaz-module",
    "package:jfrog-xray-ec2instance-module": "npx projen package:jfrog-xray-ec2instance-module",
    "package:logzio-autodeploymentlogzio-cloudwatch-module": "npx projen package:logzio-autodeploymentlogzio-cloudwatch-module",
    "package:logzio-awscostandusage-cur-module": "npx projen package:logzio-awscostandusage-cur-module",
    "package:logzio-awssecurityhub-collector-module": "npx projen package:logzio-awssecurityhub-collector-module",
    "package:logzio-kinesisshipper-kinesisshipper-module": "npx projen package:logzio-kinesisshipper-kinesisshipper-module",
    "package:logzio-myservice-myname-module": "npx projen package:logzio-myservice-myname-module",
    "package:mongodb-atlas-cluster": "npx projen package:mongodb-atlas-cluster",
    "package:mongodb-atlas-databaseuser": "npx projen package:mongodb-atlas-databaseuser",
    "package:mongodb-atlas-networkpeering": "npx projen package:mongodb-atlas-networkpeering",
    "package:mongodb-atlas-project": "npx projen package:mongodb-atlas-project",
    "package:mongodb-atlas-projectipaccesslist": "npx projen package:mongodb-atlas-projectipaccesslist",
    "package:registry-test-resource1-module": "npx projen package:registry-test-resource1-module",
    "package:snyk-container-helm": "npx projen package:snyk-container-helm",
    "package:splunk-enterprise-quickstart-module": "npx projen package:splunk-enterprise-quickstart-module",
    "package:spot-elastigroup-group": "npx projen package:spot-elastigroup-group",
    "package:stackery-open-bastion-module": "npx projen package:stackery-open-bastion-module",
    "package:stocks-orders-marketorder": "npx projen package:stocks-orders-marketorder",
    "package:symphonia-opensource-cloudformationartifactsbucket-module": "npx projen package:symphonia-opensource-cloudformationartifactsbucket-module",
    "package:sysdig-helm-agent": "npx projen package:sysdig-helm-agent",
    "package:tf-ad-computer": "npx projen package:tf-ad-computer",
    "package:tf-ad-user": "npx projen package:tf-ad-user",
    "package:tf-aws-keypair": "npx projen package:tf-aws-keypair",
    "package:tf-aws-s3bucket": "npx projen package:tf-aws-s3bucket",
    "package:tf-aws-s3bucketobject": "npx projen package:tf-aws-s3bucketobject",
    "package:tf-azuread-application": "npx projen package:tf-azuread-application",
    "package:tf-azuread-user": "npx projen package:tf-azuread-user",
    "package:tf-cloudflare-record": "npx projen package:tf-cloudflare-record",
    "package:tf-digitalocean-droplet": "npx projen package:tf-digitalocean-droplet",
    "package:tf-github-repository": "npx projen package:tf-github-repository",
    "package:tf-google-storagebucket": "npx projen package:tf-google-storagebucket",
    "package:tf-pagerduty-service": "npx projen package:tf-pagerduty-service",
    "package:tf-random-string": "npx projen package:tf-random-string",
    "package:tf-random-uuid": "npx projen package:tf-random-uuid",
    "package:trendmicro-cloudonecontainer-helm": "npx projen package:trendmicro-cloudonecontainer-helm",
    "post-compile": "npx projen post-compile",
    "pre-compile": "npx projen pre-compile",
    "publish:github": "npx projen publish:github",
    "release": "npx projen release",
    "test": "npx projen test",
    "test:update": "npx projen test:update",
    "test:watch": "npx projen test:watch",
    "unbump": "npx projen unbump",
    "update-registry": "npx projen update-registry",
    "upgrade": "npx projen upgrade",
    "upgrade-projen": "npx projen upgrade-projen",
    "watch": "npx projen watch",
    "projen": "npx projen"
  },
  "devDependencies": {
    "@aws-cdk/core": "^1.148.0",
    "@types/jest": "^27.4.1",
    "@types/node": "^14.17.0",
    "@typescript-eslint/eslint-plugin": "^5",
    "@typescript-eslint/parser": "^5",
    "aws-cdk": "^1.148.0",
    "aws-cdk-github-oidc": "^2.2.0",
    "aws-cdk-lib": "^2.16.0",
    "aws-sdk": "^2.1092.0",
    "case": "^1.6.3",
    "cdk-import": "^0.2.112",
    "constructs": "^10.0.5",
    "eslint": "^8",
    "eslint-import-resolver-node": "^0.3.6",
    "eslint-import-resolver-typescript": "^2.5.0",
    "eslint-plugin-import": "^2.25.4",
    "jest": "^27.5.1",
    "jest-junit": "^13",
    "jsii": "^1.55.0",
    "jsii-pacmak": "^1.55.0",
    "json-schema": "^0.4.0",
    "npm-check-updates": "^11",
    "projen": "^0.37.1",
    "standard-version": "^9",
    "ts-jest": "^27.1.3",
    "ts-node": "^9",
    "typescript": "^4.6.2"
  },
  "bundledDependencies": [],
  "main": "lib/index.js",
  "license": "Apache-2.0",
  "version": "0.0.0",
  "jest": {
    "testMatch": [
      "**/__tests__/**/*.ts?(x)",
      "**/?(*.)+(spec|test).ts?(x)"
    ],
    "clearMocks": true,
    "collectCoverage": true,
    "coverageReporters": [
      "json",
      "lcov",
      "clover",
      "text"
    ],
    "coverageDirectory": "coverage",
    "coveragePathIgnorePatterns": [
      "/node_modules/"
    ],
    "testPathIgnorePatterns": [
      "/node_modules/"
    ],
    "watchPathIgnorePatterns": [
      "/node_modules/"
    ],
    "reporters": [
      "default",
      [
        "jest-junit",
        {
          "outputDirectory": "test-reports"
        }
      ]
    ],
    "preset": "ts-jest",
    "globals": {
      "ts-jest": {
        "tsconfig": "tsconfig.dev.json"
      }
    }
  },
  "types": "lib/index.d.ts",
  "private": true,
  "workspaces": {
    "packages": [
      "packages/@cdk-cloudformation/*"
    ]
  },
  "//": "~~ Generated by projen. To modify, edit .projenrc.js and run \"npx projen\"."
}