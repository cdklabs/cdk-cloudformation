// Generated by cdk-import
import * as cdk from '@aws-cdk/core';

/**
 * Opsgenie Integration Resource definition
 *
 * @schema CfnIntegrationProps
 */
export interface CfnIntegrationProps {
  /**
   * @schema CfnIntegrationProps#OpsgenieApiEndpoint
   */
  readonly opsgenieApiEndpoint: string;

  /**
   * @schema CfnIntegrationProps#OpsgenieApiKey
   */
  readonly opsgenieApiKey: string;

  /**
   * Integration status, default is true
   *
   * @schema CfnIntegrationProps#Enabled
   */
  readonly enabled: boolean;

  /**
   * Integration name
   *
   * @schema CfnIntegrationProps#Name
   */
  readonly name: string;

  /**
   * Integration types, only api integration types supported
   *
   * @schema CfnIntegrationProps#IntegrationType
   */
  readonly integrationType: string;

  /**
   * Id of the integration owner team.
   *
   * @schema CfnIntegrationProps#OwnerTeamId
   */
  readonly ownerTeamId?: string;

  /**
   * Name of the integration owner team.
   *
   * @schema CfnIntegrationProps#OwnerTeamName
   */
  readonly ownerTeamName?: string;

  /**
   * This parameter is for configuring the read access of integration
   *
   * @schema CfnIntegrationProps#AllowReadAccess
   */
  readonly allowReadAccess?: boolean;

  /**
   * This parameter is for configuring the write access of integration.
   *
   * @schema CfnIntegrationProps#AllowWriteAccess
   */
  readonly allowWriteAccess?: boolean;

  /**
   * This parameter is for configuring the delete access of integration.
   *
   * @schema CfnIntegrationProps#AllowDeleteAccess
   */
  readonly allowDeleteAccess?: boolean;

  /**
   * This parameter is for allowing or restricting the configuration access.
   *
   * @schema CfnIntegrationProps#AllowConfigurationAccess
   */
  readonly allowConfigurationAccess?: boolean;

  /**
   * @schema CfnIntegrationProps#Responders
   */
  readonly responders?: RespondersProperty[];

}

/**
 * Converts an object of type 'CfnIntegrationProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnIntegrationProps(obj: CfnIntegrationProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'OpsgenieApiEndpoint': obj.opsgenieApiEndpoint,
    'OpsgenieApiKey': obj.opsgenieApiKey,
    'Enabled': obj.enabled,
    'Name': obj.name,
    'IntegrationType': obj.integrationType,
    'OwnerTeamId': obj.ownerTeamId,
    'OwnerTeamName': obj.ownerTeamName,
    'AllowReadAccess': obj.allowReadAccess,
    'AllowWriteAccess': obj.allowWriteAccess,
    'AllowDeleteAccess': obj.allowDeleteAccess,
    'AllowConfigurationAccess': obj.allowConfigurationAccess,
    'Responders': obj.responders?.map(y => toJson_RespondersProperty(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema respondersProperty
 */
export interface RespondersProperty {
  /**
   * Responder type
   *
   * @schema respondersProperty#type
   */
  readonly type?: string;

  /**
   * Responder name if available
   *
   * @schema respondersProperty#name
   */
  readonly name?: string;

  /**
   * Responder username, if responder type is user
   *
   * @schema respondersProperty#username
   */
  readonly username?: string;

}

/**
 * Converts an object of type 'RespondersProperty' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RespondersProperty(obj: RespondersProperty | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'type': obj.type,
    'name': obj.name,
    'username': obj.username,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 * A CloudFormation `Atlassian::Opsgenie::Integration`
 *
 * @cloudformationResource Atlassian::Opsgenie::Integration
 * @stability external
 * @link https://github.com/opsgenie/opsgenie-cloudformation-resources
 */
export class CfnIntegration extends cdk.CfnResource {
  /**
  * The CloudFormation resource type name for this resource class.
  */
  public static readonly CFN_RESOURCE_TYPE_NAME = "Atlassian::Opsgenie::Integration";

  /**
   * `Atlassian::Opsgenie::Integration.OpsgenieApiEndpoint`
   * @link https://github.com/opsgenie/opsgenie-cloudformation-resources
   */
  public readonly opsgenieApiEndpoint: string;
  /**
   * `Atlassian::Opsgenie::Integration.OpsgenieApiKey`
   * @link https://github.com/opsgenie/opsgenie-cloudformation-resources
   */
  public readonly opsgenieApiKey: string;
  /**
   * `Atlassian::Opsgenie::Integration.Enabled`
   * Integration status, default is true
   * @link https://github.com/opsgenie/opsgenie-cloudformation-resources
   */
  public readonly enabled: any;
  /**
   * `Atlassian::Opsgenie::Integration.Name`
   * Integration name
   * @link https://github.com/opsgenie/opsgenie-cloudformation-resources
   */
  public readonly name: string;
  /**
   * `Atlassian::Opsgenie::Integration.IntegrationType`
   * Integration types, only api integration types supported
   * @link https://github.com/opsgenie/opsgenie-cloudformation-resources
   */
  public readonly integrationType: string;
  /**
   * `Atlassian::Opsgenie::Integration.OwnerTeamId`
   * Id of the integration owner team.
   * @link https://github.com/opsgenie/opsgenie-cloudformation-resources
   */
  public readonly ownerTeamId: string | undefined;
  /**
   * `Atlassian::Opsgenie::Integration.OwnerTeamName`
   * Name of the integration owner team.
   * @link https://github.com/opsgenie/opsgenie-cloudformation-resources
   */
  public readonly ownerTeamName: string | undefined;
  /**
   * `Atlassian::Opsgenie::Integration.AllowReadAccess`
   * This parameter is for configuring the read access of integration
   * @link https://github.com/opsgenie/opsgenie-cloudformation-resources
   */
  public readonly allowReadAccess: any | undefined;
  /**
   * `Atlassian::Opsgenie::Integration.AllowWriteAccess`
   * This parameter is for configuring the write access of integration.
   * @link https://github.com/opsgenie/opsgenie-cloudformation-resources
   */
  public readonly allowWriteAccess: any | undefined;
  /**
   * `Atlassian::Opsgenie::Integration.AllowDeleteAccess`
   * This parameter is for configuring the delete access of integration.
   * @link https://github.com/opsgenie/opsgenie-cloudformation-resources
   */
  public readonly allowDeleteAccess: any | undefined;
  /**
   * `Atlassian::Opsgenie::Integration.AllowConfigurationAccess`
   * This parameter is for allowing or restricting the configuration access.
   * @link https://github.com/opsgenie/opsgenie-cloudformation-resources
   */
  public readonly allowConfigurationAccess: any | undefined;
  /**
   * `Atlassian::Opsgenie::Integration.Responders`
   * @link https://github.com/opsgenie/opsgenie-cloudformation-resources
   */
  public readonly responders: respondersProperty[] | undefined;
  /**
   * Attribute `Atlassian::Opsgenie::Integration.IntegrationId`
   * @link https://github.com/opsgenie/opsgenie-cloudformation-resources
   */
  public readonly attrIntegrationId: string;
  /**
   * Attribute `Atlassian::Opsgenie::Integration.IntegrationApiKey`
   * @link https://github.com/opsgenie/opsgenie-cloudformation-resources
   */
  public readonly attrIntegrationApiKey: string;

  /**
   * Create a new `Atlassian::Opsgenie::Integration`.
   *
   * @param scope - scope in which this resource is defined
   * @param id    - scoped id of the resource
   * @param props - resource properties
   */
  constructor(scope: cdk.Construct, id: string, props: CfnIntegrationProps) {
    super(scope, id, { type: CfnIntegration.CFN_RESOURCE_TYPE_NAME, properties: toJson_CfnIntegrationProps(props)! });

    this.opsgenieApiEndpoint = props.opsgenieApiEndpoint;
    this.opsgenieApiKey = props.opsgenieApiKey;
    this.enabled = props.enabled;
    this.name = props.name;
    this.integrationType = props.integrationType;
    this.ownerTeamId = props.ownerTeamId;
    this.ownerTeamName = props.ownerTeamName;
    this.allowReadAccess = props.allowReadAccess;
    this.allowWriteAccess = props.allowWriteAccess;
    this.allowDeleteAccess = props.allowDeleteAccess;
    this.allowConfigurationAccess = props.allowConfigurationAccess;
    this.responders = props.responders;
    this.attrIntegrationId = cdk.Token.asString(this.getAtt('IntegrationId'));
    this.attrIntegrationApiKey = cdk.Token.asString(this.getAtt('IntegrationApiKey'));
  }
}