// Generated by cdk-import
import * as cdk from 'aws-cdk-lib';
import * as constructs from 'constructs';

/**
 * Opsgenie Team resource schema
 *
 * @schema CfnTeamProps
 */
export interface CfnTeamProps {
  /**
   * Team name
   *
   * @schema CfnTeamProps#Name
   */
  readonly name: string;

  /**
   * Team description
   *
   * @schema CfnTeamProps#Description
   */
  readonly description?: string;

  /**
   * Array of members
   *
   * @schema CfnTeamProps#Members
   */
  readonly members?: Member[];

  /**
   * Api Key
   *
   * @schema CfnTeamProps#OpsgenieApiKey
   */
  readonly opsgenieApiKey?: string;

  /**
   * Api endpoint
   *
   * @schema CfnTeamProps#OpsgenieApiEndpoint
   */
  readonly opsgenieApiEndpoint?: string;

}

/**
 * Converts an object of type 'CfnTeamProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnTeamProps(obj: CfnTeamProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Name': obj.name,
    'Description': obj.description,
    'Members': obj.members?.map(y => toJson_Member(y)),
    'OpsgenieApiKey': obj.opsgenieApiKey,
    'OpsgenieApiEndpoint': obj.opsgenieApiEndpoint,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema Member
 */
export interface Member {
  /**
   * @schema Member#UserId
   */
  readonly userId?: string;

  /**
   * @schema Member#Role
   */
  readonly role?: string;

}

/**
 * Converts an object of type 'Member' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_Member(obj: Member | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'UserId': obj.userId,
    'Role': obj.role,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 * A CloudFormation `Atlassian::Opsgenie::Team`
 *
 * @cloudformationResource Atlassian::Opsgenie::Team
 * @stability external
 * @link https://github.com/opsgenie/opsgenie-cloudformation-resources
 */
export class CfnTeam extends cdk.CfnResource {
  /**
  * The CloudFormation resource type name for this resource class.
  */
  public static readonly CFN_RESOURCE_TYPE_NAME = "Atlassian::Opsgenie::Team";

  /**
   * Resource props.
   */
  public readonly props: CfnTeamProps;

  /**
   * Attribute `Atlassian::Opsgenie::Team.TeamId`
   * @link https://github.com/opsgenie/opsgenie-cloudformation-resources
   */
  public readonly attrTeamId: string;

  /**
   * Create a new `Atlassian::Opsgenie::Team`.
   *
   * @param scope - scope in which this resource is defined
   * @param id    - scoped id of the resource
   * @param props - resource properties
   */
  constructor(scope: constructs.Construct, id: string, props: CfnTeamProps) {
    super(scope, id, { type: CfnTeam.CFN_RESOURCE_TYPE_NAME, properties: toJson_CfnTeamProps(props)! });

    this.props = props;

    this.attrTeamId = cdk.Token.asString(this.getAtt('TeamId'));
  }
}