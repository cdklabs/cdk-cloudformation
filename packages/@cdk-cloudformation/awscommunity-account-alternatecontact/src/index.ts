// Generated by cdk-import
import * as cdk from 'aws-cdk-lib';
import * as constructs from 'constructs';

/**
 * An alternate contact attached to an Amazon Web Services account.
 *
 * @schema CfnAlternateContactProps
 */
export interface CfnAlternateContactProps {
  /**
   * The account ID of the AWS account that you want to add an alternate contact to.
   *
   * @schema CfnAlternateContactProps#AccountId
   */
  readonly accountId: string;

  /**
   * The type of alternate contact you want to create.
   *
   * @schema CfnAlternateContactProps#AlternateContactType
   */
  readonly alternateContactType: CfnAlternateContactPropsAlternateContactType;

  /**
   * The email address for the alternate contact.
   *
   * @schema CfnAlternateContactProps#EmailAddress
   */
  readonly emailAddress: string;

  /**
   * The name for the alternate contact.
   *
   * @schema CfnAlternateContactProps#Name
   */
  readonly name: string;

  /**
   * The phone number for the alternate contact.
   *
   * @schema CfnAlternateContactProps#PhoneNumber
   */
  readonly phoneNumber: string;

  /**
   * The title for the alternate contact.
   *
   * @schema CfnAlternateContactProps#Title
   */
  readonly title: string;

}

/**
 * Converts an object of type 'CfnAlternateContactProps' to JSON representation.
 */
/* eslint-disable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */
export function toJson_CfnAlternateContactProps(obj: CfnAlternateContactProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'AccountId': obj.accountId,
    'AlternateContactType': obj.alternateContactType,
    'EmailAddress': obj.emailAddress,
    'Name': obj.name,
    'PhoneNumber': obj.phoneNumber,
    'Title': obj.title,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */

/**
 * The type of alternate contact you want to create.
 *
 * @schema CfnAlternateContactPropsAlternateContactType
 */
export enum CfnAlternateContactPropsAlternateContactType {
  /** BILLING */
  BILLING = "BILLING",
  /** OPERATIONS */
  OPERATIONS = "OPERATIONS",
  /** SECURITY */
  SECURITY = "SECURITY",
}


/**
 * A CloudFormation `AwsCommunity::Account::AlternateContact`
 *
 * @cloudformationResource AwsCommunity::Account::AlternateContact
 * @stability external
 * @link https://github.com/aws-cloudformation/community-registry-extensions.git
 */
export class CfnAlternateContact extends cdk.CfnResource {
  /**
  * The CloudFormation resource type name for this resource class.
  */
  public static readonly CFN_RESOURCE_TYPE_NAME = "AwsCommunity::Account::AlternateContact";

  /**
   * Resource props.
   */
  public readonly props: CfnAlternateContactProps;


  /**
   * Create a new `AwsCommunity::Account::AlternateContact`.
   *
   * @param scope - scope in which this resource is defined
   * @param id    - scoped id of the resource
   * @param props - resource properties
   */
  constructor(scope: constructs.Construct, id: string, props: CfnAlternateContactProps) {
    super(scope, id, { type: CfnAlternateContact.CFN_RESOURCE_TYPE_NAME, properties: toJson_CfnAlternateContactProps(props)! });

    this.props = props;

  }
}