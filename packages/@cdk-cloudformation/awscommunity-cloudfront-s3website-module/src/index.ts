// Generated by cdk-import
import * as cdk from 'aws-cdk-lib';
import * as constructs from 'constructs';

/**
 * Schema for Module Fragment of type AwsCommunity::CloudFront::S3Website::MODULE
 *
 * @schema CfnS3WebsiteModuleProps
 */
export interface CfnS3WebsiteModuleProps {
  /**
   * @schema CfnS3WebsiteModuleProps#Parameters
   */
  readonly parameters?: CfnS3WebsiteModulePropsParameters;

  /**
   * @schema CfnS3WebsiteModuleProps#Resources
   */
  readonly resources?: CfnS3WebsiteModulePropsResources;

}

/**
 * Converts an object of type 'CfnS3WebsiteModuleProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnS3WebsiteModuleProps(obj: CfnS3WebsiteModuleProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Parameters': toJson_CfnS3WebsiteModulePropsParameters(obj.parameters),
    'Resources': toJson_CfnS3WebsiteModulePropsResources(obj.resources),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnS3WebsiteModulePropsParameters
 */
export interface CfnS3WebsiteModulePropsParameters {
  /**
   * The DNS name for the website
   *
   * @schema CfnS3WebsiteModulePropsParameters#Alias
   */
  readonly alias?: CfnS3WebsiteModulePropsParametersAlias;

  /**
   * The Route53 HostedZoneId to use for certificates and registering the website DNS Name
   *
   * @schema CfnS3WebsiteModulePropsParameters#HostedZoneId
   */
  readonly hostedZoneId?: CfnS3WebsiteModulePropsParametersHostedZoneId;

  /**
   * The ARN for the ACM Certificate to use
   *
   * @schema CfnS3WebsiteModulePropsParameters#AcmCertificateArn
   */
  readonly acmCertificateArn?: CfnS3WebsiteModulePropsParametersAcmCertificateArn;

}

/**
 * Converts an object of type 'CfnS3WebsiteModulePropsParameters' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnS3WebsiteModulePropsParameters(obj: CfnS3WebsiteModulePropsParameters | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Alias': toJson_CfnS3WebsiteModulePropsParametersAlias(obj.alias),
    'HostedZoneId': toJson_CfnS3WebsiteModulePropsParametersHostedZoneId(obj.hostedZoneId),
    'AcmCertificateArn': toJson_CfnS3WebsiteModulePropsParametersAcmCertificateArn(obj.acmCertificateArn),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnS3WebsiteModulePropsResources
 */
export interface CfnS3WebsiteModulePropsResources {
  /**
   * @schema CfnS3WebsiteModulePropsResources#Certificate
   */
  readonly certificate?: CfnS3WebsiteModulePropsResourcesCertificate;

  /**
   * @schema CfnS3WebsiteModulePropsResources#Bucket
   */
  readonly bucket?: CfnS3WebsiteModulePropsResourcesBucket;

  /**
   * @schema CfnS3WebsiteModulePropsResources#Oac
   */
  readonly oac?: CfnS3WebsiteModulePropsResourcesOac;

  /**
   * @schema CfnS3WebsiteModulePropsResources#BucketPolicy
   */
  readonly bucketPolicy?: CfnS3WebsiteModulePropsResourcesBucketPolicy;

  /**
   * @schema CfnS3WebsiteModulePropsResources#Distribution
   */
  readonly distribution?: CfnS3WebsiteModulePropsResourcesDistribution;

  /**
   * @schema CfnS3WebsiteModulePropsResources#Dns
   */
  readonly dns?: CfnS3WebsiteModulePropsResourcesDns;

}

/**
 * Converts an object of type 'CfnS3WebsiteModulePropsResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnS3WebsiteModulePropsResources(obj: CfnS3WebsiteModulePropsResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Certificate': toJson_CfnS3WebsiteModulePropsResourcesCertificate(obj.certificate),
    'Bucket': toJson_CfnS3WebsiteModulePropsResourcesBucket(obj.bucket),
    'Oac': toJson_CfnS3WebsiteModulePropsResourcesOac(obj.oac),
    'BucketPolicy': toJson_CfnS3WebsiteModulePropsResourcesBucketPolicy(obj.bucketPolicy),
    'Distribution': toJson_CfnS3WebsiteModulePropsResourcesDistribution(obj.distribution),
    'Dns': toJson_CfnS3WebsiteModulePropsResourcesDns(obj.dns),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The DNS name for the website
 *
 * @schema CfnS3WebsiteModulePropsParametersAlias
 */
export interface CfnS3WebsiteModulePropsParametersAlias {
  /**
   * @schema CfnS3WebsiteModulePropsParametersAlias#Type
   */
  readonly type: string;

  /**
   * @schema CfnS3WebsiteModulePropsParametersAlias#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnS3WebsiteModulePropsParametersAlias' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnS3WebsiteModulePropsParametersAlias(obj: CfnS3WebsiteModulePropsParametersAlias | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The Route53 HostedZoneId to use for certificates and registering the website DNS Name
 *
 * @schema CfnS3WebsiteModulePropsParametersHostedZoneId
 */
export interface CfnS3WebsiteModulePropsParametersHostedZoneId {
  /**
   * @schema CfnS3WebsiteModulePropsParametersHostedZoneId#Type
   */
  readonly type: string;

  /**
   * @schema CfnS3WebsiteModulePropsParametersHostedZoneId#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnS3WebsiteModulePropsParametersHostedZoneId' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnS3WebsiteModulePropsParametersHostedZoneId(obj: CfnS3WebsiteModulePropsParametersHostedZoneId | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The ARN for the ACM Certificate to use
 *
 * @schema CfnS3WebsiteModulePropsParametersAcmCertificateArn
 */
export interface CfnS3WebsiteModulePropsParametersAcmCertificateArn {
  /**
   * @schema CfnS3WebsiteModulePropsParametersAcmCertificateArn#Type
   */
  readonly type: string;

  /**
   * @schema CfnS3WebsiteModulePropsParametersAcmCertificateArn#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnS3WebsiteModulePropsParametersAcmCertificateArn' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnS3WebsiteModulePropsParametersAcmCertificateArn(obj: CfnS3WebsiteModulePropsParametersAcmCertificateArn | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnS3WebsiteModulePropsResourcesCertificate
 */
export interface CfnS3WebsiteModulePropsResourcesCertificate {
  /**
   * @schema CfnS3WebsiteModulePropsResourcesCertificate#Type
   */
  readonly type?: string;

  /**
   * @schema CfnS3WebsiteModulePropsResourcesCertificate#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnS3WebsiteModulePropsResourcesCertificate' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnS3WebsiteModulePropsResourcesCertificate(obj: CfnS3WebsiteModulePropsResourcesCertificate | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnS3WebsiteModulePropsResourcesBucket
 */
export interface CfnS3WebsiteModulePropsResourcesBucket {
  /**
   * @schema CfnS3WebsiteModulePropsResourcesBucket#Type
   */
  readonly type?: string;

  /**
   * @schema CfnS3WebsiteModulePropsResourcesBucket#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnS3WebsiteModulePropsResourcesBucket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnS3WebsiteModulePropsResourcesBucket(obj: CfnS3WebsiteModulePropsResourcesBucket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnS3WebsiteModulePropsResourcesOac
 */
export interface CfnS3WebsiteModulePropsResourcesOac {
  /**
   * @schema CfnS3WebsiteModulePropsResourcesOac#Type
   */
  readonly type?: string;

  /**
   * @schema CfnS3WebsiteModulePropsResourcesOac#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnS3WebsiteModulePropsResourcesOac' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnS3WebsiteModulePropsResourcesOac(obj: CfnS3WebsiteModulePropsResourcesOac | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnS3WebsiteModulePropsResourcesBucketPolicy
 */
export interface CfnS3WebsiteModulePropsResourcesBucketPolicy {
  /**
   * @schema CfnS3WebsiteModulePropsResourcesBucketPolicy#Type
   */
  readonly type?: string;

  /**
   * @schema CfnS3WebsiteModulePropsResourcesBucketPolicy#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnS3WebsiteModulePropsResourcesBucketPolicy' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnS3WebsiteModulePropsResourcesBucketPolicy(obj: CfnS3WebsiteModulePropsResourcesBucketPolicy | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnS3WebsiteModulePropsResourcesDistribution
 */
export interface CfnS3WebsiteModulePropsResourcesDistribution {
  /**
   * @schema CfnS3WebsiteModulePropsResourcesDistribution#Type
   */
  readonly type?: string;

  /**
   * @schema CfnS3WebsiteModulePropsResourcesDistribution#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnS3WebsiteModulePropsResourcesDistribution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnS3WebsiteModulePropsResourcesDistribution(obj: CfnS3WebsiteModulePropsResourcesDistribution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnS3WebsiteModulePropsResourcesDns
 */
export interface CfnS3WebsiteModulePropsResourcesDns {
  /**
   * @schema CfnS3WebsiteModulePropsResourcesDns#Type
   */
  readonly type?: string;

  /**
   * @schema CfnS3WebsiteModulePropsResourcesDns#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnS3WebsiteModulePropsResourcesDns' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnS3WebsiteModulePropsResourcesDns(obj: CfnS3WebsiteModulePropsResourcesDns | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 * A CloudFormation `AwsCommunity::CloudFront::S3Website::MODULE`
 *
 * @cloudformationResource AwsCommunity::CloudFront::S3Website::MODULE
 * @stability external
 * @link http://unknown-url
 */
export class CfnS3WebsiteModule extends cdk.CfnResource {
  /**
  * The CloudFormation resource type name for this resource class.
  */
  public static readonly CFN_RESOURCE_TYPE_NAME = "AwsCommunity::CloudFront::S3Website::MODULE";

  /**
   * Resource props.
   */
  public readonly props: CfnS3WebsiteModuleProps;


  /**
   * Create a new `AwsCommunity::CloudFront::S3Website::MODULE`.
   *
   * @param scope - scope in which this resource is defined
   * @param id    - scoped id of the resource
   * @param props - resource properties
   */
  constructor(scope: constructs.Construct, id: string, props: CfnS3WebsiteModuleProps) {
    super(scope, id, { type: CfnS3WebsiteModule.CFN_RESOURCE_TYPE_NAME, properties: toJson_CfnS3WebsiteModuleProps(props)! });

    this.props = props;

  }
}