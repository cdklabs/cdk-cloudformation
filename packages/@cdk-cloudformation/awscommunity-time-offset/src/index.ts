// Generated by cdk-import
import * as cdk from 'aws-cdk-lib';
import * as constructs from 'constructs';

/**
 * Creates a time based resource with an offset from the provided time or now.
 *
 * @schema CfnOffsetProps
 */
export interface CfnOffsetProps {
  /**
   * Optional parameter to represent the time or default is now.
   *
   * @schema CfnOffsetProps#Time
   */
  readonly time?: string;

  /**
   * Number of days to offset the base timestamp.
   *
   * @schema CfnOffsetProps#OffsetDays
   */
  readonly offsetDays?: number;

  /**
   * Number of hours to offset the base timestamp.
   *
   * @schema CfnOffsetProps#OffsetHours
   */
  readonly offsetHours?: number;

  /**
   * Number of minutes to offset the base timestamp.
   *
   * @schema CfnOffsetProps#OffsetMinutes
   */
  readonly offsetMinutes?: number;

  /**
   * Number of months to offset the base timestamp.
   *
   * @schema CfnOffsetProps#OffsetMonths
   */
  readonly offsetMonths?: number;

  /**
   * Number of seconds to offset the base timestamp.
   *
   * @schema CfnOffsetProps#OffsetSeconds
   */
  readonly offsetSeconds?: number;

  /**
   * Number of years to offset the base timestamp.
   *
   * @schema CfnOffsetProps#OffsetYears
   */
  readonly offsetYears?: number;

  /**
   * A value to represent when an update to the time should occur.
   *
   * @schema CfnOffsetProps#Triggers
   */
  readonly triggers?: string[];

}

/**
 * Converts an object of type 'CfnOffsetProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnOffsetProps(obj: CfnOffsetProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Time': obj.time,
    'OffsetDays': obj.offsetDays,
    'OffsetHours': obj.offsetHours,
    'OffsetMinutes': obj.offsetMinutes,
    'OffsetMonths': obj.offsetMonths,
    'OffsetSeconds': obj.offsetSeconds,
    'OffsetYears': obj.offsetYears,
    'Triggers': obj.triggers?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 * A CloudFormation `AwsCommunity::Time::Offset`
 *
 * @cloudformationResource AwsCommunity::Time::Offset
 * @stability external
 * @link https://github.com/aws-cloudformation/community-registry-extensions.git
 */
export class CfnOffset extends cdk.CfnResource {
  /**
  * The CloudFormation resource type name for this resource class.
  */
  public static readonly CFN_RESOURCE_TYPE_NAME = "AwsCommunity::Time::Offset";

  /**
   * Resource props.
   */
  public readonly props: CfnOffsetProps;

  /**
   * Attribute `AwsCommunity::Time::Offset.Id`
   * @link https://github.com/aws-cloudformation/community-registry-extensions.git
   */
  public readonly attrId: string;
  /**
   * Attribute `AwsCommunity::Time::Offset.Utc`
   * @link https://github.com/aws-cloudformation/community-registry-extensions.git
   */
  public readonly attrUtc: string;
  /**
   * Attribute `AwsCommunity::Time::Offset.Day`
   * @link https://github.com/aws-cloudformation/community-registry-extensions.git
   */
  public readonly attrDay: string;
  /**
   * Attribute `AwsCommunity::Time::Offset.Hour`
   * @link https://github.com/aws-cloudformation/community-registry-extensions.git
   */
  public readonly attrHour: string;
  /**
   * Attribute `AwsCommunity::Time::Offset.Minute`
   * @link https://github.com/aws-cloudformation/community-registry-extensions.git
   */
  public readonly attrMinute: string;
  /**
   * Attribute `AwsCommunity::Time::Offset.Month`
   * @link https://github.com/aws-cloudformation/community-registry-extensions.git
   */
  public readonly attrMonth: string;
  /**
   * Attribute `AwsCommunity::Time::Offset.Second`
   * @link https://github.com/aws-cloudformation/community-registry-extensions.git
   */
  public readonly attrSecond: string;
  /**
   * Attribute `AwsCommunity::Time::Offset.Unix`
   * @link https://github.com/aws-cloudformation/community-registry-extensions.git
   */
  public readonly attrUnix: string;
  /**
   * Attribute `AwsCommunity::Time::Offset.Year`
   * @link https://github.com/aws-cloudformation/community-registry-extensions.git
   */
  public readonly attrYear: string;

  /**
   * Create a new `AwsCommunity::Time::Offset`.
   *
   * @param scope - scope in which this resource is defined
   * @param id    - scoped id of the resource
   * @param props - resource properties
   */
  constructor(scope: constructs.Construct, id: string, props: CfnOffsetProps) {
    super(scope, id, { type: CfnOffset.CFN_RESOURCE_TYPE_NAME, properties: toJson_CfnOffsetProps(props)! });

    this.props = props;

    this.attrId = cdk.Token.asString(this.getAtt('Id'));
    this.attrUtc = cdk.Token.asString(this.getAtt('Utc'));
    this.attrDay = cdk.Token.asString(this.getAtt('Day'));
    this.attrHour = cdk.Token.asString(this.getAtt('Hour'));
    this.attrMinute = cdk.Token.asString(this.getAtt('Minute'));
    this.attrMonth = cdk.Token.asString(this.getAtt('Month'));
    this.attrSecond = cdk.Token.asString(this.getAtt('Second'));
    this.attrUnix = cdk.Token.asString(this.getAtt('Unix'));
    this.attrYear = cdk.Token.asString(this.getAtt('Year'));
  }
}