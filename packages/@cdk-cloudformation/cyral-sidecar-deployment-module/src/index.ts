// Generated by cdk-import
import * as cdk from 'aws-cdk-lib';
import * as constructs from 'constructs';

/**
 * Schema for Module Fragment of type Cyral::Sidecar::Deployment::MODULE
 *
 * @schema CfnDeploymentModuleProps
 */
export interface CfnDeploymentModuleProps {
  /**
   * @schema CfnDeploymentModuleProps#Parameters
   */
  readonly parameters?: CfnDeploymentModulePropsParameters;

  /**
   * @schema CfnDeploymentModuleProps#Resources
   */
  readonly resources?: CfnDeploymentModulePropsResources;

}

/**
 * Converts an object of type 'CfnDeploymentModuleProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModuleProps(obj: CfnDeploymentModuleProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Parameters': toJson_CfnDeploymentModulePropsParameters(obj.parameters),
    'Resources': toJson_CfnDeploymentModulePropsResources(obj.resources),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnDeploymentModulePropsParameters
 */
export interface CfnDeploymentModulePropsParameters {
  /**
   * (Optional) The public certificate used to verify signatures for SAML Assertions generated by the sidecar. Required if using SSO with Snowflake.
   *
   * @schema CfnDeploymentModulePropsParameters#SidecarPublicIdPCertificate
   */
  readonly sidecarPublicIdPCertificate?: CfnDeploymentModulePropsParametersSidecarPublicIdPCertificate;

  /**
   * (Optional) The private key used to sign SAML Assertions generated by the sidecar. Required if using SSO with Snowflake.
   *
   * @schema CfnDeploymentModulePropsParameters#SidecarPrivateIdPKey
   */
  readonly sidecarPrivateIdPKey?: CfnDeploymentModulePropsParametersSidecarPrivateIdPKey;

  /**
   * (Deprecated - unused in sidecars v4.10+) API key to connect to DataDog
   *
   * @schema CfnDeploymentModulePropsParameters#DDAPIKey
   */
  readonly ddapiKey?: CfnDeploymentModulePropsParametersDdapiKey;

  /**
   * (Optional) The interval (in seconds) in which the sidecar instance checks whether it has been marked or recycling.
   *
   * @schema CfnDeploymentModulePropsParameters#RecycleHealthCheckIntervalSec
   */
  readonly recycleHealthCheckIntervalSec?: CfnDeploymentModulePropsParametersRecycleHealthCheckIntervalSec;

  /**
   * List of ports that will have TLS terminated at load balancer level (snowflake or S3 browser support, for example). If assigned, 'LoadBalancerCertificateArn' must also be provided. This parameter must be a subset of 'SidecarPorts'.
   *
   * @schema CfnDeploymentModulePropsParameters#LoadBalancerTLSPorts
   */
  readonly loadBalancerTlsPorts?: CfnDeploymentModulePropsParametersLoadBalancerTlsPorts;

  /**
   * VPC
   *
   * @schema CfnDeploymentModulePropsParameters#VPC
   */
  readonly vpc?: CfnDeploymentModulePropsParametersVpc;

  /**
   * Associates a public IP to sidecar EC2 instances
   *
   * @schema CfnDeploymentModulePropsParameters#AssociatePublicIpAddress
   */
  readonly associatePublicIpAddress?: CfnDeploymentModulePropsParametersAssociatePublicIpAddress;

  /**
   * Determine whether to deploy as a single container or multiple containers
   *
   * @schema CfnDeploymentModulePropsParameters#UseSingleContainer
   */
  readonly useSingleContainer?: CfnDeploymentModulePropsParametersUseSingleContainer;

  /**
   * (Optional) Fully qualified domain name that will be automatically created/updated to reference the sidecar LB
   *
   * @schema CfnDeploymentModulePropsParameters#SidecarDNSName
   */
  readonly sidecarDnsName?: CfnDeploymentModulePropsParametersSidecarDnsName;

  /**
   * Fully qualified domain name that will be automatically created/updated to reference the sidecar LB
   *
   * @schema CfnDeploymentModulePropsParameters#ECSNLBDNSName
   */
  readonly ecsnlbdnsName?: CfnDeploymentModulePropsParametersEcsnlbdnsName;

  /**
   * (Optional) Route53 hosted zone ID for the corresponding SidecarDNSName provided
   *
   * @schema CfnDeploymentModulePropsParameters#SidecarDNSHostedZoneId
   */
  readonly sidecarDnsHostedZoneId?: CfnDeploymentModulePropsParametersSidecarDnsHostedZoneId;

  /**
   * Create the AWS Secrets Manager resource at SecretsLocation containing client id, client secret and container registry key
   *
   * @schema CfnDeploymentModulePropsParameters#DeploySecrets
   */
  readonly deploySecrets?: CfnDeploymentModulePropsParametersDeploySecrets;

  /**
   * Location in AWS Secrets Manager to store client id, secret and container registry key
   *
   * @schema CfnDeploymentModulePropsParameters#SecretsLocation
   */
  readonly secretsLocation?: CfnDeploymentModulePropsParametersSecretsLocation;

  /**
   * (Optional) ARN of the KMS key used to encrypt/decrypt secrets. If not set, secrets will use the default KMS key.
   *
   * @schema CfnDeploymentModulePropsParameters#SecretsKMSArn
   */
  readonly secretsKmsArn?: CfnDeploymentModulePropsParametersSecretsKmsArn;

  /**
   * (Optional) ARN of the KMS key used to encrypt/decrypt EBS volumes. If not set, EBS will use the default KMS key.
   *
   * @schema CfnDeploymentModulePropsParameters#EC2EBSKMSArn
   */
  readonly ec2EbskmsArn?: CfnDeploymentModulePropsParametersEc2EbskmsArn;

  /**
   * Sidecar client ID
   *
   * @schema CfnDeploymentModulePropsParameters#SidecarClientID
   */
  readonly sidecarClientId?: CfnDeploymentModulePropsParametersSidecarClientId;

  /**
   * Sidecar client secret
   *
   * @schema CfnDeploymentModulePropsParameters#SidecarClientSecret
   */
  readonly sidecarClientSecret?: CfnDeploymentModulePropsParametersSidecarClientSecret;

  /**
   * (Optional) ARN of secret in AWS Secrets Manager that contains a certificate to terminate TLS connections.
   *
   * @schema CfnDeploymentModulePropsParameters#SidecarTLSCertificateSecretArn
   */
  readonly sidecarTlsCertificateSecretArn?: CfnDeploymentModulePropsParametersSidecarTlsCertificateSecretArn;

  /**
   * (Optional) ARN of an AWS IAM Role to assume when reading the TLS certificate.
   *
   * @schema CfnDeploymentModulePropsParameters#SidecarTLSCertificateRoleArn
   */
  readonly sidecarTlsCertificateRoleArn?: CfnDeploymentModulePropsParametersSidecarTlsCertificateRoleArn;

  /**
   * (Optional) ARN of secret in AWS Secrets Manager that contains a CA certificate to sign sidecar-generated certs.
   *
   * @schema CfnDeploymentModulePropsParameters#SidecarCACertificateSecretArn
   */
  readonly sidecarCaCertificateSecretArn?: CfnDeploymentModulePropsParametersSidecarCaCertificateSecretArn;

  /**
   * (Optional) ARN of an AWS IAM Role to assume when reading the CA certificate.
   *
   * @schema CfnDeploymentModulePropsParameters#SidecarCACertificateRoleArn
   */
  readonly sidecarCaCertificateRoleArn?: CfnDeploymentModulePropsParametersSidecarCaCertificateRoleArn;

  /**
   * (Optional) Name of an AWS IAM Role to attach to the EC2 instance profile.
   *
   * @schema CfnDeploymentModulePropsParameters#SidecarCustomHostRole
   */
  readonly sidecarCustomHostRole?: CfnDeploymentModulePropsParametersSidecarCustomHostRole;

  /**
   * (Optional, but required for Control Planes < v4.10) The version of the sidecar. If unset and the Control Plane version is >= v4.10, the sidecar version will be dynamically retrieved from the Control Plane, otherwise an error will occur and this value must be provided.
   *
   * @schema CfnDeploymentModulePropsParameters#SidecarVersion
   */
  readonly sidecarVersion?: CfnDeploymentModulePropsParametersSidecarVersion;

  /**
   * (Optional) The IdP SSO URL for the IdP being used with Snowflake. Required if using SSO with Snowflake.
   *
   * @schema CfnDeploymentModulePropsParameters#IdPSSOLoginURL
   */
  readonly idPssoLoginUrl?: CfnDeploymentModulePropsParametersIdPssoLoginUrl;

  /**
   * (Optional) The certificate used to verify SAML assertions from the IdP being used with Snowflake. Enter this value as a one-line string with literal
   * characters specifying the line breaks. Required if using SSO with Snowflake.
   *
   * @schema CfnDeploymentModulePropsParameters#IdPCertificate
   */
  readonly idPCertificate?: CfnDeploymentModulePropsParametersIdPCertificate;

  /**
   * @schema CfnDeploymentModulePropsParameters#StackTargetGroupARNs
   */
  readonly stackTargetGroupArNs?: CfnDeploymentModulePropsParametersStackTargetGroupArNs;

  /**
   * (DEPRECATED - use Asg* parameters instead) Enter the number of sidecar hosts to create
   *
   * @schema CfnDeploymentModulePropsParameters#NumSidecarHosts
   */
  readonly numSidecarHosts?: CfnDeploymentModulePropsParametersNumSidecarHosts;

  /**
   * Name of an existing EC2 KeyPair to enable SSH access to the EC2 instances.
   *
   * @schema CfnDeploymentModulePropsParameters#SSHKeyName
   */
  readonly sshKeyName?: CfnDeploymentModulePropsParametersSshKeyName;

  /**
   * Allowed CIDR block for SSH access to the sidecar
   *
   * @schema CfnDeploymentModulePropsParameters#SSHInboundCIDR
   */
  readonly sshInboundCidr?: CfnDeploymentModulePropsParametersSshInboundCidr;

  /**
   * Allowed CIDR block for database access to the sidecar
   *
   * @schema CfnDeploymentModulePropsParameters#DBInboundCIDR
   */
  readonly dbInboundCidr?: CfnDeploymentModulePropsParametersDbInboundCidr;

  /**
   * Allowed CIDR block for health check and metrics requests to the sidecar
   *
   * @schema CfnDeploymentModulePropsParameters#MonitoringInboundCIDR
   */
  readonly monitoringInboundCidr?: CfnDeploymentModulePropsParametersMonitoringInboundCidr;

  /**
   * Allowed Starting Port for database access to the sidecar
   *
   * @schema CfnDeploymentModulePropsParameters#DBInboundFromPort
   */
  readonly dbInboundFromPort?: CfnDeploymentModulePropsParametersDbInboundFromPort;

  /**
   * Allowed Ending Port for database access to the sidecar
   *
   * @schema CfnDeploymentModulePropsParameters#DBInboundToPort
   */
  readonly dbInboundToPort?: CfnDeploymentModulePropsParametersDbInboundToPort;

  /**
   * Sidecar EC2 volume size (min 15GB)
   *
   * @schema CfnDeploymentModulePropsParameters#SidecarVolumeSize
   */
  readonly sidecarVolumeSize?: CfnDeploymentModulePropsParametersSidecarVolumeSize;

  /**
   * Amazon EC2 instance type for the sidecar instances
   *
   * @schema CfnDeploymentModulePropsParameters#SidecarInstanceType
   */
  readonly sidecarInstanceType?: CfnDeploymentModulePropsParametersSidecarInstanceType;

  /**
   * Subnets to add sidecar to
   *
   * @schema CfnDeploymentModulePropsParameters#Subnets
   */
  readonly subnets?: CfnDeploymentModulePropsParametersSubnets;

  /**
   * Sidecar identifier
   *
   * @schema CfnDeploymentModulePropsParameters#SidecarId
   */
  readonly sidecarId?: CfnDeploymentModulePropsParametersSidecarId;

  /**
   * Prefix for names of created resources in AWS
   *
   * @schema CfnDeploymentModulePropsParameters#NamePrefix
   */
  readonly namePrefix?: CfnDeploymentModulePropsParametersNamePrefix;

  /**
   * Address of the control plane - <tenant>.cyral.com
   *
   * @schema CfnDeploymentModulePropsParameters#ControlPlane
   */
  readonly controlPlane?: CfnDeploymentModulePropsParametersControlPlane;

  /**
   * Amazon Linux 2 AMI ID for sidecar EC2 instances. The default behavior is to use the latest version. In order to define a new image, replace 'recommended' by the desired image name (eg 'amzn2-ami-ecs-hvm-2.0.20181112-x86_64-ebs').
   *
   * @schema CfnDeploymentModulePropsParameters#AmiId
   */
  readonly amiId?: CfnDeploymentModulePropsParametersAmiId;

  /**
   * Cloudwatch logs retention in days
   *
   * @schema CfnDeploymentModulePropsParameters#CloudwatchLogsRetention
   */
  readonly cloudwatchLogsRetention?: CfnDeploymentModulePropsParametersCloudwatchLogsRetention;

  /**
   * Cloudwatch log group name
   *
   * @schema CfnDeploymentModulePropsParameters#CloudwatchLogGroupName
   */
  readonly cloudwatchLogGroupName?: CfnDeploymentModulePropsParametersCloudwatchLogGroupName;

  /**
   * Log Integration Name
   *
   * @schema CfnDeploymentModulePropsParameters#LogIntegration
   */
  readonly logIntegration?: CfnDeploymentModulePropsParametersLogIntegration;

  /**
   * Metrics Integration Name
   *
   * @schema CfnDeploymentModulePropsParameters#MetricsIntegration
   */
  readonly metricsIntegration?: CfnDeploymentModulePropsParametersMetricsIntegration;

  /**
   * Hashicorp Vault Integration Id
   *
   * @schema CfnDeploymentModulePropsParameters#HCVaultIntegrationId
   */
  readonly hcVaultIntegrationId?: CfnDeploymentModulePropsParametersHcVaultIntegrationId;

  /**
   * List of wires that are enabled for the sidecar
   *
   * @schema CfnDeploymentModulePropsParameters#RepositoriesSupported
   */
  readonly repositoriesSupported?: CfnDeploymentModulePropsParametersRepositoriesSupported;

  /**
   * (Optional) List of IAM policies ARNs that will be attached to the sidecar IAM role (Comma Delimited List)
   *
   * @schema CfnDeploymentModulePropsParameters#UserPolicies
   */
  readonly userPolicies?: CfnDeploymentModulePropsParametersUserPolicies;

  /**
   * ARN of the permissions boundary to apply to all the IAM roles. Set to an empty string if no permission boundaries should be used.
   *
   * @schema CfnDeploymentModulePropsParameters#PermissionsBoundary
   */
  readonly permissionsBoundary?: CfnDeploymentModulePropsParametersPermissionsBoundary;

  /**
   * Address of the container registry where Cyral images are stored
   *
   * @schema CfnDeploymentModulePropsParameters#ContainerRegistry
   */
  readonly containerRegistry?: CfnDeploymentModulePropsParametersContainerRegistry;

  /**
   * Username provided by Cyral for authenticating on Cyral's container registry
   *
   * @schema CfnDeploymentModulePropsParameters#ContainerRegistryUsername
   */
  readonly containerRegistryUsername?: CfnDeploymentModulePropsParametersContainerRegistryUsername;

  /**
   * Key provided by Cyral for authenticating on Cyral's container registry
   *
   * @schema CfnDeploymentModulePropsParameters#ContainerRegistryKey
   */
  readonly containerRegistryKey?: CfnDeploymentModulePropsParametersContainerRegistryKey;

  /**
   * Determines how long (in seconds) the ASG will wait before checking the health status of the EC2 instance.
   *
   * @schema CfnDeploymentModulePropsParameters#HealthCheckGracePeriod
   */
  readonly healthCheckGracePeriod?: CfnDeploymentModulePropsParametersHealthCheckGracePeriod;

  /**
   * The minimum number of hosts to create in the auto autoscaling group
   *
   * @schema CfnDeploymentModulePropsParameters#AsgMin
   */
  readonly asgMin?: CfnDeploymentModulePropsParametersAsgMin;

  /**
   * The desired number of hosts to create in the auto scaling group
   *
   * @schema CfnDeploymentModulePropsParameters#AsgDesired
   */
  readonly asgDesired?: CfnDeploymentModulePropsParametersAsgDesired;

  /**
   * The maximum number of hosts to create in the auto scaling group
   *
   * @schema CfnDeploymentModulePropsParameters#AsgMax
   */
  readonly asgMax?: CfnDeploymentModulePropsParametersAsgMax;

  /**
   * (Optional) Custom tag to be added in the sidecar resources. Ex:"key=value".
   *
   * @schema CfnDeploymentModulePropsParameters#CustomTag
   */
  readonly customTag?: CfnDeploymentModulePropsParametersCustomTag;

  /**
   * (Optional) Ancillary consumer supplied user-data script. Provide Bash script commands to be executed before the sidecar installation. Ex:"echo 'TEST'".
   *
   * @schema CfnDeploymentModulePropsParameters#CustomUserDataPre
   */
  readonly customUserDataPre?: CfnDeploymentModulePropsParametersCustomUserDataPre;

  /**
   * (Optional) Ancillary consumer supplied user-data script. Provide Bash script commands to be executed before the sidecar starts. Ex:"echo 'TEST'"
   *
   * @schema CfnDeploymentModulePropsParameters#CustomUserDataPreSidecarStart
   */
  readonly customUserDataPreSidecarStart?: CfnDeploymentModulePropsParametersCustomUserDataPreSidecarStart;

  /**
   * (Optional) Ancillary consumer supplied user-data script. Provide Bash script commands to be executed after the sidecar starts. Ex:"echo 'TEST'"
   *
   * @schema CfnDeploymentModulePropsParameters#CustomUserDataPost
   */
  readonly customUserDataPost?: CfnDeploymentModulePropsParametersCustomUserDataPost;

  /**
   * Instance Metadata Service token requirement
   *
   * @schema CfnDeploymentModulePropsParameters#MetadataHttpTokensOption
   */
  readonly metadataHttpTokensOption?: CfnDeploymentModulePropsParametersMetadataHttpTokensOption;

  /**
   * Skip TLS verification for HTTPS communication with the control plane and during sidecar initialization
   *
   * @schema CfnDeploymentModulePropsParameters#TLSSkipVerify
   */
  readonly tlsSkipVerify?: CfnDeploymentModulePropsParametersTlsSkipVerify;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParameters' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParameters(obj: CfnDeploymentModulePropsParameters | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'SidecarPublicIdPCertificate': toJson_CfnDeploymentModulePropsParametersSidecarPublicIdPCertificate(obj.sidecarPublicIdPCertificate),
    'SidecarPrivateIdPKey': toJson_CfnDeploymentModulePropsParametersSidecarPrivateIdPKey(obj.sidecarPrivateIdPKey),
    'DDAPIKey': toJson_CfnDeploymentModulePropsParametersDdapiKey(obj.ddapiKey),
    'RecycleHealthCheckIntervalSec': toJson_CfnDeploymentModulePropsParametersRecycleHealthCheckIntervalSec(obj.recycleHealthCheckIntervalSec),
    'LoadBalancerTLSPorts': toJson_CfnDeploymentModulePropsParametersLoadBalancerTlsPorts(obj.loadBalancerTlsPorts),
    'VPC': toJson_CfnDeploymentModulePropsParametersVpc(obj.vpc),
    'AssociatePublicIpAddress': toJson_CfnDeploymentModulePropsParametersAssociatePublicIpAddress(obj.associatePublicIpAddress),
    'UseSingleContainer': toJson_CfnDeploymentModulePropsParametersUseSingleContainer(obj.useSingleContainer),
    'SidecarDNSName': toJson_CfnDeploymentModulePropsParametersSidecarDnsName(obj.sidecarDnsName),
    'ECSNLBDNSName': toJson_CfnDeploymentModulePropsParametersEcsnlbdnsName(obj.ecsnlbdnsName),
    'SidecarDNSHostedZoneId': toJson_CfnDeploymentModulePropsParametersSidecarDnsHostedZoneId(obj.sidecarDnsHostedZoneId),
    'DeploySecrets': toJson_CfnDeploymentModulePropsParametersDeploySecrets(obj.deploySecrets),
    'SecretsLocation': toJson_CfnDeploymentModulePropsParametersSecretsLocation(obj.secretsLocation),
    'SecretsKMSArn': toJson_CfnDeploymentModulePropsParametersSecretsKmsArn(obj.secretsKmsArn),
    'EC2EBSKMSArn': toJson_CfnDeploymentModulePropsParametersEc2EbskmsArn(obj.ec2EbskmsArn),
    'SidecarClientID': toJson_CfnDeploymentModulePropsParametersSidecarClientId(obj.sidecarClientId),
    'SidecarClientSecret': toJson_CfnDeploymentModulePropsParametersSidecarClientSecret(obj.sidecarClientSecret),
    'SidecarTLSCertificateSecretArn': toJson_CfnDeploymentModulePropsParametersSidecarTlsCertificateSecretArn(obj.sidecarTlsCertificateSecretArn),
    'SidecarTLSCertificateRoleArn': toJson_CfnDeploymentModulePropsParametersSidecarTlsCertificateRoleArn(obj.sidecarTlsCertificateRoleArn),
    'SidecarCACertificateSecretArn': toJson_CfnDeploymentModulePropsParametersSidecarCaCertificateSecretArn(obj.sidecarCaCertificateSecretArn),
    'SidecarCACertificateRoleArn': toJson_CfnDeploymentModulePropsParametersSidecarCaCertificateRoleArn(obj.sidecarCaCertificateRoleArn),
    'SidecarCustomHostRole': toJson_CfnDeploymentModulePropsParametersSidecarCustomHostRole(obj.sidecarCustomHostRole),
    'SidecarVersion': toJson_CfnDeploymentModulePropsParametersSidecarVersion(obj.sidecarVersion),
    'IdPSSOLoginURL': toJson_CfnDeploymentModulePropsParametersIdPssoLoginUrl(obj.idPssoLoginUrl),
    'IdPCertificate': toJson_CfnDeploymentModulePropsParametersIdPCertificate(obj.idPCertificate),
    'StackTargetGroupARNs': toJson_CfnDeploymentModulePropsParametersStackTargetGroupArNs(obj.stackTargetGroupArNs),
    'NumSidecarHosts': toJson_CfnDeploymentModulePropsParametersNumSidecarHosts(obj.numSidecarHosts),
    'SSHKeyName': toJson_CfnDeploymentModulePropsParametersSshKeyName(obj.sshKeyName),
    'SSHInboundCIDR': toJson_CfnDeploymentModulePropsParametersSshInboundCidr(obj.sshInboundCidr),
    'DBInboundCIDR': toJson_CfnDeploymentModulePropsParametersDbInboundCidr(obj.dbInboundCidr),
    'MonitoringInboundCIDR': toJson_CfnDeploymentModulePropsParametersMonitoringInboundCidr(obj.monitoringInboundCidr),
    'DBInboundFromPort': toJson_CfnDeploymentModulePropsParametersDbInboundFromPort(obj.dbInboundFromPort),
    'DBInboundToPort': toJson_CfnDeploymentModulePropsParametersDbInboundToPort(obj.dbInboundToPort),
    'SidecarVolumeSize': toJson_CfnDeploymentModulePropsParametersSidecarVolumeSize(obj.sidecarVolumeSize),
    'SidecarInstanceType': toJson_CfnDeploymentModulePropsParametersSidecarInstanceType(obj.sidecarInstanceType),
    'Subnets': toJson_CfnDeploymentModulePropsParametersSubnets(obj.subnets),
    'SidecarId': toJson_CfnDeploymentModulePropsParametersSidecarId(obj.sidecarId),
    'NamePrefix': toJson_CfnDeploymentModulePropsParametersNamePrefix(obj.namePrefix),
    'ControlPlane': toJson_CfnDeploymentModulePropsParametersControlPlane(obj.controlPlane),
    'AmiId': toJson_CfnDeploymentModulePropsParametersAmiId(obj.amiId),
    'CloudwatchLogsRetention': toJson_CfnDeploymentModulePropsParametersCloudwatchLogsRetention(obj.cloudwatchLogsRetention),
    'CloudwatchLogGroupName': toJson_CfnDeploymentModulePropsParametersCloudwatchLogGroupName(obj.cloudwatchLogGroupName),
    'LogIntegration': toJson_CfnDeploymentModulePropsParametersLogIntegration(obj.logIntegration),
    'MetricsIntegration': toJson_CfnDeploymentModulePropsParametersMetricsIntegration(obj.metricsIntegration),
    'HCVaultIntegrationId': toJson_CfnDeploymentModulePropsParametersHcVaultIntegrationId(obj.hcVaultIntegrationId),
    'RepositoriesSupported': toJson_CfnDeploymentModulePropsParametersRepositoriesSupported(obj.repositoriesSupported),
    'UserPolicies': toJson_CfnDeploymentModulePropsParametersUserPolicies(obj.userPolicies),
    'PermissionsBoundary': toJson_CfnDeploymentModulePropsParametersPermissionsBoundary(obj.permissionsBoundary),
    'ContainerRegistry': toJson_CfnDeploymentModulePropsParametersContainerRegistry(obj.containerRegistry),
    'ContainerRegistryUsername': toJson_CfnDeploymentModulePropsParametersContainerRegistryUsername(obj.containerRegistryUsername),
    'ContainerRegistryKey': toJson_CfnDeploymentModulePropsParametersContainerRegistryKey(obj.containerRegistryKey),
    'HealthCheckGracePeriod': toJson_CfnDeploymentModulePropsParametersHealthCheckGracePeriod(obj.healthCheckGracePeriod),
    'AsgMin': toJson_CfnDeploymentModulePropsParametersAsgMin(obj.asgMin),
    'AsgDesired': toJson_CfnDeploymentModulePropsParametersAsgDesired(obj.asgDesired),
    'AsgMax': toJson_CfnDeploymentModulePropsParametersAsgMax(obj.asgMax),
    'CustomTag': toJson_CfnDeploymentModulePropsParametersCustomTag(obj.customTag),
    'CustomUserDataPre': toJson_CfnDeploymentModulePropsParametersCustomUserDataPre(obj.customUserDataPre),
    'CustomUserDataPreSidecarStart': toJson_CfnDeploymentModulePropsParametersCustomUserDataPreSidecarStart(obj.customUserDataPreSidecarStart),
    'CustomUserDataPost': toJson_CfnDeploymentModulePropsParametersCustomUserDataPost(obj.customUserDataPost),
    'MetadataHttpTokensOption': toJson_CfnDeploymentModulePropsParametersMetadataHttpTokensOption(obj.metadataHttpTokensOption),
    'TLSSkipVerify': toJson_CfnDeploymentModulePropsParametersTlsSkipVerify(obj.tlsSkipVerify),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnDeploymentModulePropsResources
 */
export interface CfnDeploymentModulePropsResources {
  /**
   * @schema CfnDeploymentModulePropsResources#CloudwatchLogGroup
   */
  readonly cloudwatchLogGroup?: CfnDeploymentModulePropsResourcesCloudwatchLogGroup;

  /**
   * @schema CfnDeploymentModulePropsResources#AutoScalingGroupSidecar
   */
  readonly autoScalingGroupSidecar?: CfnDeploymentModulePropsResourcesAutoScalingGroupSidecar;

  /**
   * @schema CfnDeploymentModulePropsResources#SidecarHostProfile
   */
  readonly sidecarHostProfile?: CfnDeploymentModulePropsResourcesSidecarHostProfile;

  /**
   * @schema CfnDeploymentModulePropsResources#SidecarHostRole
   */
  readonly sidecarHostRole?: CfnDeploymentModulePropsResourcesSidecarHostRole;

  /**
   * @schema CfnDeploymentModulePropsResources#SidecarHostPolicy
   */
  readonly sidecarHostPolicy?: CfnDeploymentModulePropsResourcesSidecarHostPolicy;

  /**
   * @schema CfnDeploymentModulePropsResources#SidecarKMSPolicy
   */
  readonly sidecarKmsPolicy?: CfnDeploymentModulePropsResourcesSidecarKmsPolicy;

  /**
   * @schema CfnDeploymentModulePropsResources#SidecarLaunchTemplate
   */
  readonly sidecarLaunchTemplate?: CfnDeploymentModulePropsResourcesSidecarLaunchTemplate;

  /**
   * @schema CfnDeploymentModulePropsResources#SidecarSecurityGroup
   */
  readonly sidecarSecurityGroup?: CfnDeploymentModulePropsResourcesSidecarSecurityGroup;

  /**
   * @schema CfnDeploymentModulePropsResources#LambdaIngressListRole
   */
  readonly lambdaIngressListRole?: CfnDeploymentModulePropsResourcesLambdaIngressListRole;

  /**
   * @schema CfnDeploymentModulePropsResources#SMSidecarSecret
   */
  readonly smSidecarSecret?: CfnDeploymentModulePropsResourcesSmSidecarSecret;

  /**
   * @schema CfnDeploymentModulePropsResources#SidecarCName
   */
  readonly sidecarCName?: CfnDeploymentModulePropsResourcesSidecarCName;

  /**
   * @schema CfnDeploymentModulePropsResources#SidecarCreatedCertificateSecret
   */
  readonly sidecarCreatedCertificateSecret?: CfnDeploymentModulePropsResourcesSidecarCreatedCertificateSecret;

  /**
   * @schema CfnDeploymentModulePropsResources#SidecarCACertificateSecret
   */
  readonly sidecarCaCertificateSecret?: CfnDeploymentModulePropsResourcesSidecarCaCertificateSecret;

  /**
   * @schema CfnDeploymentModulePropsResources#SelfSignedCertificateRole
   */
  readonly selfSignedCertificateRole?: CfnDeploymentModulePropsResourcesSelfSignedCertificateRole;

  /**
   * @schema CfnDeploymentModulePropsResources#SelfSignedCertificateLambda
   */
  readonly selfSignedCertificateLambda?: CfnDeploymentModulePropsResourcesSelfSignedCertificateLambda;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsResources(obj: CfnDeploymentModulePropsResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'CloudwatchLogGroup': toJson_CfnDeploymentModulePropsResourcesCloudwatchLogGroup(obj.cloudwatchLogGroup),
    'AutoScalingGroupSidecar': toJson_CfnDeploymentModulePropsResourcesAutoScalingGroupSidecar(obj.autoScalingGroupSidecar),
    'SidecarHostProfile': toJson_CfnDeploymentModulePropsResourcesSidecarHostProfile(obj.sidecarHostProfile),
    'SidecarHostRole': toJson_CfnDeploymentModulePropsResourcesSidecarHostRole(obj.sidecarHostRole),
    'SidecarHostPolicy': toJson_CfnDeploymentModulePropsResourcesSidecarHostPolicy(obj.sidecarHostPolicy),
    'SidecarKMSPolicy': toJson_CfnDeploymentModulePropsResourcesSidecarKmsPolicy(obj.sidecarKmsPolicy),
    'SidecarLaunchTemplate': toJson_CfnDeploymentModulePropsResourcesSidecarLaunchTemplate(obj.sidecarLaunchTemplate),
    'SidecarSecurityGroup': toJson_CfnDeploymentModulePropsResourcesSidecarSecurityGroup(obj.sidecarSecurityGroup),
    'LambdaIngressListRole': toJson_CfnDeploymentModulePropsResourcesLambdaIngressListRole(obj.lambdaIngressListRole),
    'SMSidecarSecret': toJson_CfnDeploymentModulePropsResourcesSmSidecarSecret(obj.smSidecarSecret),
    'SidecarCName': toJson_CfnDeploymentModulePropsResourcesSidecarCName(obj.sidecarCName),
    'SidecarCreatedCertificateSecret': toJson_CfnDeploymentModulePropsResourcesSidecarCreatedCertificateSecret(obj.sidecarCreatedCertificateSecret),
    'SidecarCACertificateSecret': toJson_CfnDeploymentModulePropsResourcesSidecarCaCertificateSecret(obj.sidecarCaCertificateSecret),
    'SelfSignedCertificateRole': toJson_CfnDeploymentModulePropsResourcesSelfSignedCertificateRole(obj.selfSignedCertificateRole),
    'SelfSignedCertificateLambda': toJson_CfnDeploymentModulePropsResourcesSelfSignedCertificateLambda(obj.selfSignedCertificateLambda),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * (Optional) The public certificate used to verify signatures for SAML Assertions generated by the sidecar. Required if using SSO with Snowflake.
 *
 * @schema CfnDeploymentModulePropsParametersSidecarPublicIdPCertificate
 */
export interface CfnDeploymentModulePropsParametersSidecarPublicIdPCertificate {
  /**
   * @schema CfnDeploymentModulePropsParametersSidecarPublicIdPCertificate#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersSidecarPublicIdPCertificate#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersSidecarPublicIdPCertificate' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersSidecarPublicIdPCertificate(obj: CfnDeploymentModulePropsParametersSidecarPublicIdPCertificate | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * (Optional) The private key used to sign SAML Assertions generated by the sidecar. Required if using SSO with Snowflake.
 *
 * @schema CfnDeploymentModulePropsParametersSidecarPrivateIdPKey
 */
export interface CfnDeploymentModulePropsParametersSidecarPrivateIdPKey {
  /**
   * @schema CfnDeploymentModulePropsParametersSidecarPrivateIdPKey#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersSidecarPrivateIdPKey#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersSidecarPrivateIdPKey' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersSidecarPrivateIdPKey(obj: CfnDeploymentModulePropsParametersSidecarPrivateIdPKey | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * (Deprecated - unused in sidecars v4.10+) API key to connect to DataDog
 *
 * @schema CfnDeploymentModulePropsParametersDdapiKey
 */
export interface CfnDeploymentModulePropsParametersDdapiKey {
  /**
   * @schema CfnDeploymentModulePropsParametersDdapiKey#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersDdapiKey#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersDdapiKey' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersDdapiKey(obj: CfnDeploymentModulePropsParametersDdapiKey | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * (Optional) The interval (in seconds) in which the sidecar instance checks whether it has been marked or recycling.
 *
 * @schema CfnDeploymentModulePropsParametersRecycleHealthCheckIntervalSec
 */
export interface CfnDeploymentModulePropsParametersRecycleHealthCheckIntervalSec {
  /**
   * @schema CfnDeploymentModulePropsParametersRecycleHealthCheckIntervalSec#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersRecycleHealthCheckIntervalSec#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersRecycleHealthCheckIntervalSec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersRecycleHealthCheckIntervalSec(obj: CfnDeploymentModulePropsParametersRecycleHealthCheckIntervalSec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * List of ports that will have TLS terminated at load balancer level (snowflake or S3 browser support, for example). If assigned, 'LoadBalancerCertificateArn' must also be provided. This parameter must be a subset of 'SidecarPorts'.
 *
 * @schema CfnDeploymentModulePropsParametersLoadBalancerTlsPorts
 */
export interface CfnDeploymentModulePropsParametersLoadBalancerTlsPorts {
  /**
   * @schema CfnDeploymentModulePropsParametersLoadBalancerTlsPorts#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersLoadBalancerTlsPorts#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersLoadBalancerTlsPorts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersLoadBalancerTlsPorts(obj: CfnDeploymentModulePropsParametersLoadBalancerTlsPorts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * VPC
 *
 * @schema CfnDeploymentModulePropsParametersVpc
 */
export interface CfnDeploymentModulePropsParametersVpc {
  /**
   * @schema CfnDeploymentModulePropsParametersVpc#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersVpc#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersVpc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersVpc(obj: CfnDeploymentModulePropsParametersVpc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Associates a public IP to sidecar EC2 instances
 *
 * @schema CfnDeploymentModulePropsParametersAssociatePublicIpAddress
 */
export interface CfnDeploymentModulePropsParametersAssociatePublicIpAddress {
  /**
   * @schema CfnDeploymentModulePropsParametersAssociatePublicIpAddress#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersAssociatePublicIpAddress#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersAssociatePublicIpAddress' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersAssociatePublicIpAddress(obj: CfnDeploymentModulePropsParametersAssociatePublicIpAddress | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Determine whether to deploy as a single container or multiple containers
 *
 * @schema CfnDeploymentModulePropsParametersUseSingleContainer
 */
export interface CfnDeploymentModulePropsParametersUseSingleContainer {
  /**
   * @schema CfnDeploymentModulePropsParametersUseSingleContainer#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersUseSingleContainer#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersUseSingleContainer' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersUseSingleContainer(obj: CfnDeploymentModulePropsParametersUseSingleContainer | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * (Optional) Fully qualified domain name that will be automatically created/updated to reference the sidecar LB
 *
 * @schema CfnDeploymentModulePropsParametersSidecarDnsName
 */
export interface CfnDeploymentModulePropsParametersSidecarDnsName {
  /**
   * @schema CfnDeploymentModulePropsParametersSidecarDnsName#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersSidecarDnsName#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersSidecarDnsName' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersSidecarDnsName(obj: CfnDeploymentModulePropsParametersSidecarDnsName | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Fully qualified domain name that will be automatically created/updated to reference the sidecar LB
 *
 * @schema CfnDeploymentModulePropsParametersEcsnlbdnsName
 */
export interface CfnDeploymentModulePropsParametersEcsnlbdnsName {
  /**
   * @schema CfnDeploymentModulePropsParametersEcsnlbdnsName#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersEcsnlbdnsName#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersEcsnlbdnsName' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersEcsnlbdnsName(obj: CfnDeploymentModulePropsParametersEcsnlbdnsName | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * (Optional) Route53 hosted zone ID for the corresponding SidecarDNSName provided
 *
 * @schema CfnDeploymentModulePropsParametersSidecarDnsHostedZoneId
 */
export interface CfnDeploymentModulePropsParametersSidecarDnsHostedZoneId {
  /**
   * @schema CfnDeploymentModulePropsParametersSidecarDnsHostedZoneId#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersSidecarDnsHostedZoneId#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersSidecarDnsHostedZoneId' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersSidecarDnsHostedZoneId(obj: CfnDeploymentModulePropsParametersSidecarDnsHostedZoneId | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Create the AWS Secrets Manager resource at SecretsLocation containing client id, client secret and container registry key
 *
 * @schema CfnDeploymentModulePropsParametersDeploySecrets
 */
export interface CfnDeploymentModulePropsParametersDeploySecrets {
  /**
   * @schema CfnDeploymentModulePropsParametersDeploySecrets#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersDeploySecrets#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersDeploySecrets' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersDeploySecrets(obj: CfnDeploymentModulePropsParametersDeploySecrets | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Location in AWS Secrets Manager to store client id, secret and container registry key
 *
 * @schema CfnDeploymentModulePropsParametersSecretsLocation
 */
export interface CfnDeploymentModulePropsParametersSecretsLocation {
  /**
   * @schema CfnDeploymentModulePropsParametersSecretsLocation#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersSecretsLocation#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersSecretsLocation' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersSecretsLocation(obj: CfnDeploymentModulePropsParametersSecretsLocation | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * (Optional) ARN of the KMS key used to encrypt/decrypt secrets. If not set, secrets will use the default KMS key.
 *
 * @schema CfnDeploymentModulePropsParametersSecretsKmsArn
 */
export interface CfnDeploymentModulePropsParametersSecretsKmsArn {
  /**
   * @schema CfnDeploymentModulePropsParametersSecretsKmsArn#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersSecretsKmsArn#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersSecretsKmsArn' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersSecretsKmsArn(obj: CfnDeploymentModulePropsParametersSecretsKmsArn | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * (Optional) ARN of the KMS key used to encrypt/decrypt EBS volumes. If not set, EBS will use the default KMS key.
 *
 * @schema CfnDeploymentModulePropsParametersEc2EbskmsArn
 */
export interface CfnDeploymentModulePropsParametersEc2EbskmsArn {
  /**
   * @schema CfnDeploymentModulePropsParametersEc2EbskmsArn#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersEc2EbskmsArn#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersEc2EbskmsArn' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersEc2EbskmsArn(obj: CfnDeploymentModulePropsParametersEc2EbskmsArn | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Sidecar client ID
 *
 * @schema CfnDeploymentModulePropsParametersSidecarClientId
 */
export interface CfnDeploymentModulePropsParametersSidecarClientId {
  /**
   * @schema CfnDeploymentModulePropsParametersSidecarClientId#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersSidecarClientId#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersSidecarClientId' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersSidecarClientId(obj: CfnDeploymentModulePropsParametersSidecarClientId | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Sidecar client secret
 *
 * @schema CfnDeploymentModulePropsParametersSidecarClientSecret
 */
export interface CfnDeploymentModulePropsParametersSidecarClientSecret {
  /**
   * @schema CfnDeploymentModulePropsParametersSidecarClientSecret#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersSidecarClientSecret#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersSidecarClientSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersSidecarClientSecret(obj: CfnDeploymentModulePropsParametersSidecarClientSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * (Optional) ARN of secret in AWS Secrets Manager that contains a certificate to terminate TLS connections.
 *
 * @schema CfnDeploymentModulePropsParametersSidecarTlsCertificateSecretArn
 */
export interface CfnDeploymentModulePropsParametersSidecarTlsCertificateSecretArn {
  /**
   * @schema CfnDeploymentModulePropsParametersSidecarTlsCertificateSecretArn#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersSidecarTlsCertificateSecretArn#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersSidecarTlsCertificateSecretArn' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersSidecarTlsCertificateSecretArn(obj: CfnDeploymentModulePropsParametersSidecarTlsCertificateSecretArn | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * (Optional) ARN of an AWS IAM Role to assume when reading the TLS certificate.
 *
 * @schema CfnDeploymentModulePropsParametersSidecarTlsCertificateRoleArn
 */
export interface CfnDeploymentModulePropsParametersSidecarTlsCertificateRoleArn {
  /**
   * @schema CfnDeploymentModulePropsParametersSidecarTlsCertificateRoleArn#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersSidecarTlsCertificateRoleArn#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersSidecarTlsCertificateRoleArn' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersSidecarTlsCertificateRoleArn(obj: CfnDeploymentModulePropsParametersSidecarTlsCertificateRoleArn | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * (Optional) ARN of secret in AWS Secrets Manager that contains a CA certificate to sign sidecar-generated certs.
 *
 * @schema CfnDeploymentModulePropsParametersSidecarCaCertificateSecretArn
 */
export interface CfnDeploymentModulePropsParametersSidecarCaCertificateSecretArn {
  /**
   * @schema CfnDeploymentModulePropsParametersSidecarCaCertificateSecretArn#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersSidecarCaCertificateSecretArn#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersSidecarCaCertificateSecretArn' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersSidecarCaCertificateSecretArn(obj: CfnDeploymentModulePropsParametersSidecarCaCertificateSecretArn | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * (Optional) ARN of an AWS IAM Role to assume when reading the CA certificate.
 *
 * @schema CfnDeploymentModulePropsParametersSidecarCaCertificateRoleArn
 */
export interface CfnDeploymentModulePropsParametersSidecarCaCertificateRoleArn {
  /**
   * @schema CfnDeploymentModulePropsParametersSidecarCaCertificateRoleArn#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersSidecarCaCertificateRoleArn#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersSidecarCaCertificateRoleArn' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersSidecarCaCertificateRoleArn(obj: CfnDeploymentModulePropsParametersSidecarCaCertificateRoleArn | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * (Optional) Name of an AWS IAM Role to attach to the EC2 instance profile.
 *
 * @schema CfnDeploymentModulePropsParametersSidecarCustomHostRole
 */
export interface CfnDeploymentModulePropsParametersSidecarCustomHostRole {
  /**
   * @schema CfnDeploymentModulePropsParametersSidecarCustomHostRole#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersSidecarCustomHostRole#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersSidecarCustomHostRole' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersSidecarCustomHostRole(obj: CfnDeploymentModulePropsParametersSidecarCustomHostRole | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * (Optional, but required for Control Planes < v4.10) The version of the sidecar. If unset and the Control Plane version is >= v4.10, the sidecar version will be dynamically retrieved from the Control Plane, otherwise an error will occur and this value must be provided.
 *
 * @schema CfnDeploymentModulePropsParametersSidecarVersion
 */
export interface CfnDeploymentModulePropsParametersSidecarVersion {
  /**
   * @schema CfnDeploymentModulePropsParametersSidecarVersion#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersSidecarVersion#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersSidecarVersion' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersSidecarVersion(obj: CfnDeploymentModulePropsParametersSidecarVersion | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * (Optional) The IdP SSO URL for the IdP being used with Snowflake. Required if using SSO with Snowflake.
 *
 * @schema CfnDeploymentModulePropsParametersIdPssoLoginUrl
 */
export interface CfnDeploymentModulePropsParametersIdPssoLoginUrl {
  /**
   * @schema CfnDeploymentModulePropsParametersIdPssoLoginUrl#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersIdPssoLoginUrl#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersIdPssoLoginUrl' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersIdPssoLoginUrl(obj: CfnDeploymentModulePropsParametersIdPssoLoginUrl | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * (Optional) The certificate used to verify SAML assertions from the IdP being used with Snowflake. Enter this value as a one-line string with literal
 * characters specifying the line breaks. Required if using SSO with Snowflake.
 *
 * @schema CfnDeploymentModulePropsParametersIdPCertificate
 */
export interface CfnDeploymentModulePropsParametersIdPCertificate {
  /**
   * @schema CfnDeploymentModulePropsParametersIdPCertificate#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersIdPCertificate#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersIdPCertificate' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersIdPCertificate(obj: CfnDeploymentModulePropsParametersIdPCertificate | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnDeploymentModulePropsParametersStackTargetGroupArNs
 */
export interface CfnDeploymentModulePropsParametersStackTargetGroupArNs {
  /**
   * @schema CfnDeploymentModulePropsParametersStackTargetGroupArNs#Type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersStackTargetGroupArNs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersStackTargetGroupArNs(obj: CfnDeploymentModulePropsParametersStackTargetGroupArNs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * (DEPRECATED - use Asg* parameters instead) Enter the number of sidecar hosts to create
 *
 * @schema CfnDeploymentModulePropsParametersNumSidecarHosts
 */
export interface CfnDeploymentModulePropsParametersNumSidecarHosts {
  /**
   * @schema CfnDeploymentModulePropsParametersNumSidecarHosts#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersNumSidecarHosts#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersNumSidecarHosts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersNumSidecarHosts(obj: CfnDeploymentModulePropsParametersNumSidecarHosts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Name of an existing EC2 KeyPair to enable SSH access to the EC2 instances.
 *
 * @schema CfnDeploymentModulePropsParametersSshKeyName
 */
export interface CfnDeploymentModulePropsParametersSshKeyName {
  /**
   * @schema CfnDeploymentModulePropsParametersSshKeyName#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersSshKeyName#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersSshKeyName' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersSshKeyName(obj: CfnDeploymentModulePropsParametersSshKeyName | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Allowed CIDR block for SSH access to the sidecar
 *
 * @schema CfnDeploymentModulePropsParametersSshInboundCidr
 */
export interface CfnDeploymentModulePropsParametersSshInboundCidr {
  /**
   * @schema CfnDeploymentModulePropsParametersSshInboundCidr#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersSshInboundCidr#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersSshInboundCidr' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersSshInboundCidr(obj: CfnDeploymentModulePropsParametersSshInboundCidr | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Allowed CIDR block for database access to the sidecar
 *
 * @schema CfnDeploymentModulePropsParametersDbInboundCidr
 */
export interface CfnDeploymentModulePropsParametersDbInboundCidr {
  /**
   * @schema CfnDeploymentModulePropsParametersDbInboundCidr#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersDbInboundCidr#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersDbInboundCidr' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersDbInboundCidr(obj: CfnDeploymentModulePropsParametersDbInboundCidr | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Allowed CIDR block for health check and metrics requests to the sidecar
 *
 * @schema CfnDeploymentModulePropsParametersMonitoringInboundCidr
 */
export interface CfnDeploymentModulePropsParametersMonitoringInboundCidr {
  /**
   * @schema CfnDeploymentModulePropsParametersMonitoringInboundCidr#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersMonitoringInboundCidr#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersMonitoringInboundCidr' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersMonitoringInboundCidr(obj: CfnDeploymentModulePropsParametersMonitoringInboundCidr | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Allowed Starting Port for database access to the sidecar
 *
 * @schema CfnDeploymentModulePropsParametersDbInboundFromPort
 */
export interface CfnDeploymentModulePropsParametersDbInboundFromPort {
  /**
   * @schema CfnDeploymentModulePropsParametersDbInboundFromPort#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersDbInboundFromPort#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersDbInboundFromPort' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersDbInboundFromPort(obj: CfnDeploymentModulePropsParametersDbInboundFromPort | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Allowed Ending Port for database access to the sidecar
 *
 * @schema CfnDeploymentModulePropsParametersDbInboundToPort
 */
export interface CfnDeploymentModulePropsParametersDbInboundToPort {
  /**
   * @schema CfnDeploymentModulePropsParametersDbInboundToPort#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersDbInboundToPort#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersDbInboundToPort' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersDbInboundToPort(obj: CfnDeploymentModulePropsParametersDbInboundToPort | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Sidecar EC2 volume size (min 15GB)
 *
 * @schema CfnDeploymentModulePropsParametersSidecarVolumeSize
 */
export interface CfnDeploymentModulePropsParametersSidecarVolumeSize {
  /**
   * @schema CfnDeploymentModulePropsParametersSidecarVolumeSize#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersSidecarVolumeSize#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersSidecarVolumeSize' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersSidecarVolumeSize(obj: CfnDeploymentModulePropsParametersSidecarVolumeSize | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Amazon EC2 instance type for the sidecar instances
 *
 * @schema CfnDeploymentModulePropsParametersSidecarInstanceType
 */
export interface CfnDeploymentModulePropsParametersSidecarInstanceType {
  /**
   * @schema CfnDeploymentModulePropsParametersSidecarInstanceType#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersSidecarInstanceType#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersSidecarInstanceType' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersSidecarInstanceType(obj: CfnDeploymentModulePropsParametersSidecarInstanceType | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Subnets to add sidecar to
 *
 * @schema CfnDeploymentModulePropsParametersSubnets
 */
export interface CfnDeploymentModulePropsParametersSubnets {
  /**
   * @schema CfnDeploymentModulePropsParametersSubnets#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersSubnets#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersSubnets' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersSubnets(obj: CfnDeploymentModulePropsParametersSubnets | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Sidecar identifier
 *
 * @schema CfnDeploymentModulePropsParametersSidecarId
 */
export interface CfnDeploymentModulePropsParametersSidecarId {
  /**
   * @schema CfnDeploymentModulePropsParametersSidecarId#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersSidecarId#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersSidecarId' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersSidecarId(obj: CfnDeploymentModulePropsParametersSidecarId | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Prefix for names of created resources in AWS
 *
 * @schema CfnDeploymentModulePropsParametersNamePrefix
 */
export interface CfnDeploymentModulePropsParametersNamePrefix {
  /**
   * @schema CfnDeploymentModulePropsParametersNamePrefix#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersNamePrefix#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersNamePrefix' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersNamePrefix(obj: CfnDeploymentModulePropsParametersNamePrefix | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Address of the control plane - <tenant>.cyral.com
 *
 * @schema CfnDeploymentModulePropsParametersControlPlane
 */
export interface CfnDeploymentModulePropsParametersControlPlane {
  /**
   * @schema CfnDeploymentModulePropsParametersControlPlane#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersControlPlane#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersControlPlane' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersControlPlane(obj: CfnDeploymentModulePropsParametersControlPlane | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Amazon Linux 2 AMI ID for sidecar EC2 instances. The default behavior is to use the latest version. In order to define a new image, replace 'recommended' by the desired image name (eg 'amzn2-ami-ecs-hvm-2.0.20181112-x86_64-ebs').
 *
 * @schema CfnDeploymentModulePropsParametersAmiId
 */
export interface CfnDeploymentModulePropsParametersAmiId {
  /**
   * @schema CfnDeploymentModulePropsParametersAmiId#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersAmiId#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersAmiId' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersAmiId(obj: CfnDeploymentModulePropsParametersAmiId | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Cloudwatch logs retention in days
 *
 * @schema CfnDeploymentModulePropsParametersCloudwatchLogsRetention
 */
export interface CfnDeploymentModulePropsParametersCloudwatchLogsRetention {
  /**
   * @schema CfnDeploymentModulePropsParametersCloudwatchLogsRetention#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersCloudwatchLogsRetention#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersCloudwatchLogsRetention' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersCloudwatchLogsRetention(obj: CfnDeploymentModulePropsParametersCloudwatchLogsRetention | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Cloudwatch log group name
 *
 * @schema CfnDeploymentModulePropsParametersCloudwatchLogGroupName
 */
export interface CfnDeploymentModulePropsParametersCloudwatchLogGroupName {
  /**
   * @schema CfnDeploymentModulePropsParametersCloudwatchLogGroupName#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersCloudwatchLogGroupName#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersCloudwatchLogGroupName' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersCloudwatchLogGroupName(obj: CfnDeploymentModulePropsParametersCloudwatchLogGroupName | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Log Integration Name
 *
 * @schema CfnDeploymentModulePropsParametersLogIntegration
 */
export interface CfnDeploymentModulePropsParametersLogIntegration {
  /**
   * @schema CfnDeploymentModulePropsParametersLogIntegration#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersLogIntegration#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersLogIntegration' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersLogIntegration(obj: CfnDeploymentModulePropsParametersLogIntegration | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Metrics Integration Name
 *
 * @schema CfnDeploymentModulePropsParametersMetricsIntegration
 */
export interface CfnDeploymentModulePropsParametersMetricsIntegration {
  /**
   * @schema CfnDeploymentModulePropsParametersMetricsIntegration#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersMetricsIntegration#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersMetricsIntegration' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersMetricsIntegration(obj: CfnDeploymentModulePropsParametersMetricsIntegration | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Hashicorp Vault Integration Id
 *
 * @schema CfnDeploymentModulePropsParametersHcVaultIntegrationId
 */
export interface CfnDeploymentModulePropsParametersHcVaultIntegrationId {
  /**
   * @schema CfnDeploymentModulePropsParametersHcVaultIntegrationId#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersHcVaultIntegrationId#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersHcVaultIntegrationId' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersHcVaultIntegrationId(obj: CfnDeploymentModulePropsParametersHcVaultIntegrationId | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * List of wires that are enabled for the sidecar
 *
 * @schema CfnDeploymentModulePropsParametersRepositoriesSupported
 */
export interface CfnDeploymentModulePropsParametersRepositoriesSupported {
  /**
   * @schema CfnDeploymentModulePropsParametersRepositoriesSupported#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersRepositoriesSupported#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersRepositoriesSupported' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersRepositoriesSupported(obj: CfnDeploymentModulePropsParametersRepositoriesSupported | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * (Optional) List of IAM policies ARNs that will be attached to the sidecar IAM role (Comma Delimited List)
 *
 * @schema CfnDeploymentModulePropsParametersUserPolicies
 */
export interface CfnDeploymentModulePropsParametersUserPolicies {
  /**
   * @schema CfnDeploymentModulePropsParametersUserPolicies#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersUserPolicies#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersUserPolicies' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersUserPolicies(obj: CfnDeploymentModulePropsParametersUserPolicies | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * ARN of the permissions boundary to apply to all the IAM roles. Set to an empty string if no permission boundaries should be used.
 *
 * @schema CfnDeploymentModulePropsParametersPermissionsBoundary
 */
export interface CfnDeploymentModulePropsParametersPermissionsBoundary {
  /**
   * @schema CfnDeploymentModulePropsParametersPermissionsBoundary#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersPermissionsBoundary#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersPermissionsBoundary' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersPermissionsBoundary(obj: CfnDeploymentModulePropsParametersPermissionsBoundary | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Address of the container registry where Cyral images are stored
 *
 * @schema CfnDeploymentModulePropsParametersContainerRegistry
 */
export interface CfnDeploymentModulePropsParametersContainerRegistry {
  /**
   * @schema CfnDeploymentModulePropsParametersContainerRegistry#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersContainerRegistry#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersContainerRegistry' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersContainerRegistry(obj: CfnDeploymentModulePropsParametersContainerRegistry | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Username provided by Cyral for authenticating on Cyral's container registry
 *
 * @schema CfnDeploymentModulePropsParametersContainerRegistryUsername
 */
export interface CfnDeploymentModulePropsParametersContainerRegistryUsername {
  /**
   * @schema CfnDeploymentModulePropsParametersContainerRegistryUsername#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersContainerRegistryUsername#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersContainerRegistryUsername' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersContainerRegistryUsername(obj: CfnDeploymentModulePropsParametersContainerRegistryUsername | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Key provided by Cyral for authenticating on Cyral's container registry
 *
 * @schema CfnDeploymentModulePropsParametersContainerRegistryKey
 */
export interface CfnDeploymentModulePropsParametersContainerRegistryKey {
  /**
   * @schema CfnDeploymentModulePropsParametersContainerRegistryKey#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersContainerRegistryKey#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersContainerRegistryKey' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersContainerRegistryKey(obj: CfnDeploymentModulePropsParametersContainerRegistryKey | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Determines how long (in seconds) the ASG will wait before checking the health status of the EC2 instance.
 *
 * @schema CfnDeploymentModulePropsParametersHealthCheckGracePeriod
 */
export interface CfnDeploymentModulePropsParametersHealthCheckGracePeriod {
  /**
   * @schema CfnDeploymentModulePropsParametersHealthCheckGracePeriod#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersHealthCheckGracePeriod#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersHealthCheckGracePeriod' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersHealthCheckGracePeriod(obj: CfnDeploymentModulePropsParametersHealthCheckGracePeriod | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The minimum number of hosts to create in the auto autoscaling group
 *
 * @schema CfnDeploymentModulePropsParametersAsgMin
 */
export interface CfnDeploymentModulePropsParametersAsgMin {
  /**
   * @schema CfnDeploymentModulePropsParametersAsgMin#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersAsgMin#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersAsgMin' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersAsgMin(obj: CfnDeploymentModulePropsParametersAsgMin | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The desired number of hosts to create in the auto scaling group
 *
 * @schema CfnDeploymentModulePropsParametersAsgDesired
 */
export interface CfnDeploymentModulePropsParametersAsgDesired {
  /**
   * @schema CfnDeploymentModulePropsParametersAsgDesired#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersAsgDesired#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersAsgDesired' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersAsgDesired(obj: CfnDeploymentModulePropsParametersAsgDesired | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The maximum number of hosts to create in the auto scaling group
 *
 * @schema CfnDeploymentModulePropsParametersAsgMax
 */
export interface CfnDeploymentModulePropsParametersAsgMax {
  /**
   * @schema CfnDeploymentModulePropsParametersAsgMax#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersAsgMax#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersAsgMax' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersAsgMax(obj: CfnDeploymentModulePropsParametersAsgMax | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * (Optional) Custom tag to be added in the sidecar resources. Ex:"key=value".
 *
 * @schema CfnDeploymentModulePropsParametersCustomTag
 */
export interface CfnDeploymentModulePropsParametersCustomTag {
  /**
   * @schema CfnDeploymentModulePropsParametersCustomTag#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersCustomTag#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersCustomTag' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersCustomTag(obj: CfnDeploymentModulePropsParametersCustomTag | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * (Optional) Ancillary consumer supplied user-data script. Provide Bash script commands to be executed before the sidecar installation. Ex:"echo 'TEST'".
 *
 * @schema CfnDeploymentModulePropsParametersCustomUserDataPre
 */
export interface CfnDeploymentModulePropsParametersCustomUserDataPre {
  /**
   * @schema CfnDeploymentModulePropsParametersCustomUserDataPre#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersCustomUserDataPre#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersCustomUserDataPre' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersCustomUserDataPre(obj: CfnDeploymentModulePropsParametersCustomUserDataPre | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * (Optional) Ancillary consumer supplied user-data script. Provide Bash script commands to be executed before the sidecar starts. Ex:"echo 'TEST'"
 *
 * @schema CfnDeploymentModulePropsParametersCustomUserDataPreSidecarStart
 */
export interface CfnDeploymentModulePropsParametersCustomUserDataPreSidecarStart {
  /**
   * @schema CfnDeploymentModulePropsParametersCustomUserDataPreSidecarStart#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersCustomUserDataPreSidecarStart#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersCustomUserDataPreSidecarStart' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersCustomUserDataPreSidecarStart(obj: CfnDeploymentModulePropsParametersCustomUserDataPreSidecarStart | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * (Optional) Ancillary consumer supplied user-data script. Provide Bash script commands to be executed after the sidecar starts. Ex:"echo 'TEST'"
 *
 * @schema CfnDeploymentModulePropsParametersCustomUserDataPost
 */
export interface CfnDeploymentModulePropsParametersCustomUserDataPost {
  /**
   * @schema CfnDeploymentModulePropsParametersCustomUserDataPost#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersCustomUserDataPost#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersCustomUserDataPost' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersCustomUserDataPost(obj: CfnDeploymentModulePropsParametersCustomUserDataPost | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Instance Metadata Service token requirement
 *
 * @schema CfnDeploymentModulePropsParametersMetadataHttpTokensOption
 */
export interface CfnDeploymentModulePropsParametersMetadataHttpTokensOption {
  /**
   * @schema CfnDeploymentModulePropsParametersMetadataHttpTokensOption#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersMetadataHttpTokensOption#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersMetadataHttpTokensOption' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersMetadataHttpTokensOption(obj: CfnDeploymentModulePropsParametersMetadataHttpTokensOption | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Skip TLS verification for HTTPS communication with the control plane and during sidecar initialization
 *
 * @schema CfnDeploymentModulePropsParametersTlsSkipVerify
 */
export interface CfnDeploymentModulePropsParametersTlsSkipVerify {
  /**
   * @schema CfnDeploymentModulePropsParametersTlsSkipVerify#Type
   */
  readonly type: string;

  /**
   * @schema CfnDeploymentModulePropsParametersTlsSkipVerify#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsParametersTlsSkipVerify' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsParametersTlsSkipVerify(obj: CfnDeploymentModulePropsParametersTlsSkipVerify | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnDeploymentModulePropsResourcesCloudwatchLogGroup
 */
export interface CfnDeploymentModulePropsResourcesCloudwatchLogGroup {
  /**
   * @schema CfnDeploymentModulePropsResourcesCloudwatchLogGroup#Type
   */
  readonly type?: string;

  /**
   * @schema CfnDeploymentModulePropsResourcesCloudwatchLogGroup#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsResourcesCloudwatchLogGroup' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsResourcesCloudwatchLogGroup(obj: CfnDeploymentModulePropsResourcesCloudwatchLogGroup | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnDeploymentModulePropsResourcesAutoScalingGroupSidecar
 */
export interface CfnDeploymentModulePropsResourcesAutoScalingGroupSidecar {
  /**
   * @schema CfnDeploymentModulePropsResourcesAutoScalingGroupSidecar#Type
   */
  readonly type?: string;

  /**
   * @schema CfnDeploymentModulePropsResourcesAutoScalingGroupSidecar#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsResourcesAutoScalingGroupSidecar' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsResourcesAutoScalingGroupSidecar(obj: CfnDeploymentModulePropsResourcesAutoScalingGroupSidecar | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnDeploymentModulePropsResourcesSidecarHostProfile
 */
export interface CfnDeploymentModulePropsResourcesSidecarHostProfile {
  /**
   * @schema CfnDeploymentModulePropsResourcesSidecarHostProfile#Type
   */
  readonly type?: string;

  /**
   * @schema CfnDeploymentModulePropsResourcesSidecarHostProfile#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsResourcesSidecarHostProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsResourcesSidecarHostProfile(obj: CfnDeploymentModulePropsResourcesSidecarHostProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnDeploymentModulePropsResourcesSidecarHostRole
 */
export interface CfnDeploymentModulePropsResourcesSidecarHostRole {
  /**
   * @schema CfnDeploymentModulePropsResourcesSidecarHostRole#Type
   */
  readonly type?: string;

  /**
   * @schema CfnDeploymentModulePropsResourcesSidecarHostRole#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsResourcesSidecarHostRole' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsResourcesSidecarHostRole(obj: CfnDeploymentModulePropsResourcesSidecarHostRole | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnDeploymentModulePropsResourcesSidecarHostPolicy
 */
export interface CfnDeploymentModulePropsResourcesSidecarHostPolicy {
  /**
   * @schema CfnDeploymentModulePropsResourcesSidecarHostPolicy#Type
   */
  readonly type?: string;

  /**
   * @schema CfnDeploymentModulePropsResourcesSidecarHostPolicy#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsResourcesSidecarHostPolicy' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsResourcesSidecarHostPolicy(obj: CfnDeploymentModulePropsResourcesSidecarHostPolicy | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnDeploymentModulePropsResourcesSidecarKmsPolicy
 */
export interface CfnDeploymentModulePropsResourcesSidecarKmsPolicy {
  /**
   * @schema CfnDeploymentModulePropsResourcesSidecarKmsPolicy#Type
   */
  readonly type?: string;

  /**
   * @schema CfnDeploymentModulePropsResourcesSidecarKmsPolicy#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsResourcesSidecarKmsPolicy' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsResourcesSidecarKmsPolicy(obj: CfnDeploymentModulePropsResourcesSidecarKmsPolicy | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnDeploymentModulePropsResourcesSidecarLaunchTemplate
 */
export interface CfnDeploymentModulePropsResourcesSidecarLaunchTemplate {
  /**
   * @schema CfnDeploymentModulePropsResourcesSidecarLaunchTemplate#Type
   */
  readonly type?: string;

  /**
   * @schema CfnDeploymentModulePropsResourcesSidecarLaunchTemplate#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsResourcesSidecarLaunchTemplate' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsResourcesSidecarLaunchTemplate(obj: CfnDeploymentModulePropsResourcesSidecarLaunchTemplate | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnDeploymentModulePropsResourcesSidecarSecurityGroup
 */
export interface CfnDeploymentModulePropsResourcesSidecarSecurityGroup {
  /**
   * @schema CfnDeploymentModulePropsResourcesSidecarSecurityGroup#Type
   */
  readonly type?: string;

  /**
   * @schema CfnDeploymentModulePropsResourcesSidecarSecurityGroup#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsResourcesSidecarSecurityGroup' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsResourcesSidecarSecurityGroup(obj: CfnDeploymentModulePropsResourcesSidecarSecurityGroup | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnDeploymentModulePropsResourcesLambdaIngressListRole
 */
export interface CfnDeploymentModulePropsResourcesLambdaIngressListRole {
  /**
   * @schema CfnDeploymentModulePropsResourcesLambdaIngressListRole#Type
   */
  readonly type?: string;

  /**
   * @schema CfnDeploymentModulePropsResourcesLambdaIngressListRole#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsResourcesLambdaIngressListRole' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsResourcesLambdaIngressListRole(obj: CfnDeploymentModulePropsResourcesLambdaIngressListRole | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnDeploymentModulePropsResourcesSmSidecarSecret
 */
export interface CfnDeploymentModulePropsResourcesSmSidecarSecret {
  /**
   * @schema CfnDeploymentModulePropsResourcesSmSidecarSecret#Type
   */
  readonly type?: string;

  /**
   * @schema CfnDeploymentModulePropsResourcesSmSidecarSecret#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsResourcesSmSidecarSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsResourcesSmSidecarSecret(obj: CfnDeploymentModulePropsResourcesSmSidecarSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnDeploymentModulePropsResourcesSidecarCName
 */
export interface CfnDeploymentModulePropsResourcesSidecarCName {
  /**
   * @schema CfnDeploymentModulePropsResourcesSidecarCName#Type
   */
  readonly type?: string;

  /**
   * @schema CfnDeploymentModulePropsResourcesSidecarCName#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsResourcesSidecarCName' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsResourcesSidecarCName(obj: CfnDeploymentModulePropsResourcesSidecarCName | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnDeploymentModulePropsResourcesSidecarCreatedCertificateSecret
 */
export interface CfnDeploymentModulePropsResourcesSidecarCreatedCertificateSecret {
  /**
   * @schema CfnDeploymentModulePropsResourcesSidecarCreatedCertificateSecret#Type
   */
  readonly type?: string;

  /**
   * @schema CfnDeploymentModulePropsResourcesSidecarCreatedCertificateSecret#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsResourcesSidecarCreatedCertificateSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsResourcesSidecarCreatedCertificateSecret(obj: CfnDeploymentModulePropsResourcesSidecarCreatedCertificateSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnDeploymentModulePropsResourcesSidecarCaCertificateSecret
 */
export interface CfnDeploymentModulePropsResourcesSidecarCaCertificateSecret {
  /**
   * @schema CfnDeploymentModulePropsResourcesSidecarCaCertificateSecret#Type
   */
  readonly type?: string;

  /**
   * @schema CfnDeploymentModulePropsResourcesSidecarCaCertificateSecret#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsResourcesSidecarCaCertificateSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsResourcesSidecarCaCertificateSecret(obj: CfnDeploymentModulePropsResourcesSidecarCaCertificateSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnDeploymentModulePropsResourcesSelfSignedCertificateRole
 */
export interface CfnDeploymentModulePropsResourcesSelfSignedCertificateRole {
  /**
   * @schema CfnDeploymentModulePropsResourcesSelfSignedCertificateRole#Type
   */
  readonly type?: string;

  /**
   * @schema CfnDeploymentModulePropsResourcesSelfSignedCertificateRole#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsResourcesSelfSignedCertificateRole' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsResourcesSelfSignedCertificateRole(obj: CfnDeploymentModulePropsResourcesSelfSignedCertificateRole | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnDeploymentModulePropsResourcesSelfSignedCertificateLambda
 */
export interface CfnDeploymentModulePropsResourcesSelfSignedCertificateLambda {
  /**
   * @schema CfnDeploymentModulePropsResourcesSelfSignedCertificateLambda#Type
   */
  readonly type?: string;

  /**
   * @schema CfnDeploymentModulePropsResourcesSelfSignedCertificateLambda#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnDeploymentModulePropsResourcesSelfSignedCertificateLambda' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDeploymentModulePropsResourcesSelfSignedCertificateLambda(obj: CfnDeploymentModulePropsResourcesSelfSignedCertificateLambda | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 * A CloudFormation `Cyral::Sidecar::Deployment::MODULE`
 *
 * @cloudformationResource Cyral::Sidecar::Deployment::MODULE
 * @stability external
 * @link http://unknown-url
 */
export class CfnDeploymentModule extends cdk.CfnResource {
  /**
  * The CloudFormation resource type name for this resource class.
  */
  public static readonly CFN_RESOURCE_TYPE_NAME = "Cyral::Sidecar::Deployment::MODULE";

  /**
   * Resource props.
   */
  public readonly props: CfnDeploymentModuleProps;


  /**
   * Create a new `Cyral::Sidecar::Deployment::MODULE`.
   *
   * @param scope - scope in which this resource is defined
   * @param id    - scoped id of the resource
   * @param props - resource properties
   */
  constructor(scope: constructs.Construct, id: string, props: CfnDeploymentModuleProps) {
    super(scope, id, { type: CfnDeploymentModule.CFN_RESOURCE_TYPE_NAME, properties: toJson_CfnDeploymentModuleProps(props)! });

    this.props = props;

  }
}