// Generated by cdk-import
import * as cdk from 'aws-cdk-lib';
import * as constructs from 'constructs';

/**
 * Datadog AWS Account Integration 1.0.0
 *
 * @schema CfnAwsAccountProps
 */
export interface CfnAwsAccountProps {
  /**
   * Your AWS Account ID without dashes.
   *
   * @schema CfnAwsAccountProps#AccountID
   */
  readonly accountId?: string;

  /**
   * The AWS partition to use. This should be set to 'aws' for commercial accounts, 'aws-us-gov' for GovCloud accounts, and 'aws-cn' for China accounts.
   *
   * @schema CfnAwsAccountProps#AWSPartition
   */
  readonly awsPartition: CfnAwsAccountPropsAwsPartition;

  /**
   * The configuration for the AWS role delegation.
   *
   * @schema CfnAwsAccountProps#AuthConfig
   */
  readonly authConfig: CfnAwsAccountPropsAuthConfig;

  /**
   * The configuration for which regions to collect data from.
   *
   * @schema CfnAwsAccountProps#AWSRegions
   */
  readonly awsRegions?: CfnAwsAccountPropsAwsRegions;

  /**
   * The configuration for ingesting AWS Metrics into Datadog.
   *
   * @schema CfnAwsAccountProps#MetricsConfig
   */
  readonly metricsConfig?: CfnAwsAccountPropsMetricsConfig;

  /**
   * Array of tags (in the form key:value) to add to all hosts and metrics reporting through this integration.
   *
   * @schema CfnAwsAccountProps#AccountTags
   */
  readonly accountTags?: string[];

  /**
   * The configuration for ingesting AWS Resources into Datadog.
   *
   * @schema CfnAwsAccountProps#ResourcesConfig
   */
  readonly resourcesConfig?: CfnAwsAccountPropsResourcesConfig;

  /**
   * The configuration for ingesting AWS Logs into Datadog.
   *
   * @schema CfnAwsAccountProps#LogsConfig
   */
  readonly logsConfig?: CfnAwsAccountPropsLogsConfig;

  /**
   * The configuration for ingesting AWS Traces into Datadog.
   *
   * @schema CfnAwsAccountProps#TracesConfig
   */
  readonly tracesConfig?: CfnAwsAccountPropsTracesConfig;

  /**
   * The name of the AWS SecretsManager secret created in your account to hold this integration's `external_id`. Defaults to `DatadogIntegrationExternalID`. Cannot be referenced from created resource.
   *
   * @default DatadogIntegrationExternalID`. Cannot be referenced from created resource.
   * @schema CfnAwsAccountProps#ExternalIDSecretName
   */
  readonly externalIdSecretName?: string;
}

/**
 * Converts an object of type 'CfnAwsAccountProps' to JSON representation.
 */
/* eslint-disable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */
export function toJson_CfnAwsAccountProps(obj: CfnAwsAccountProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'AccountID': obj.accountId,
    'AWSPartition': obj.awsPartition,
    'AuthConfig': toJson_CfnAwsAccountPropsAuthConfig(obj.authConfig),
    'AWSRegions': toJson_CfnAwsAccountPropsAwsRegions(obj.awsRegions),
    'MetricsConfig': toJson_CfnAwsAccountPropsMetricsConfig(obj.metricsConfig),
    'AccountTags': obj.accountTags?.map(y => y),
    'ResourcesConfig': toJson_CfnAwsAccountPropsResourcesConfig(obj.resourcesConfig),
    'LogsConfig': toJson_CfnAwsAccountPropsLogsConfig(obj.logsConfig),
    'TracesConfig': toJson_CfnAwsAccountPropsTracesConfig(obj.tracesConfig),
    'ExternalIDSecretName': obj.externalIdSecretName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */

/**
 * The AWS partition to use. This should be set to 'aws' for commercial accounts, 'aws-us-gov' for GovCloud accounts, and 'aws-cn' for China accounts.
 *
 * @schema CfnAwsAccountPropsAwsPartition
 */
export enum CfnAwsAccountPropsAwsPartition {
  /** aws */
  AWS = "aws",
  /** aws-us-gov */
  AWS_HYPHEN_US_HYPHEN_GOV = "aws-us-gov",
  /** aws-cn */
  AWS_HYPHEN_CN = "aws-cn",
}

/**
 * The configuration for the AWS role delegation.
 *
 * @schema CfnAwsAccountPropsAuthConfig
 */
export interface CfnAwsAccountPropsAuthConfig {
  /**
   * Your Datadog role delegation name.
   *
   * @schema CfnAwsAccountPropsAuthConfig#RoleName
   */
  readonly roleName: string;
}

/**
 * Converts an object of type 'CfnAwsAccountPropsAuthConfig' to JSON representation.
 */
/* eslint-disable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */
export function toJson_CfnAwsAccountPropsAuthConfig(obj: CfnAwsAccountPropsAuthConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'RoleName': obj.roleName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */

/**
 * The configuration for which regions to collect data from.
 *
 * @schema CfnAwsAccountPropsAwsRegions
 */
export interface CfnAwsAccountPropsAwsRegions {
  /**
   * Array of AWS regions to include from metrics collection.
   *
   * @schema CfnAwsAccountPropsAwsRegions#IncludeOnly
   */
  readonly includeOnly?: string[];

  /**
   * Collect data for all AWS regions.
   *
   * @schema CfnAwsAccountPropsAwsRegions#IncludeAll
   */
  readonly includeAll?: boolean;
}

/**
 * Converts an object of type 'CfnAwsAccountPropsAwsRegions' to JSON representation.
 */
/* eslint-disable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */
export function toJson_CfnAwsAccountPropsAwsRegions(obj: CfnAwsAccountPropsAwsRegions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'IncludeOnly': obj.includeOnly?.map(y => y),
    'IncludeAll': obj.includeAll,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */

/**
 * The configuration for ingesting AWS Metrics into Datadog.
 *
 * @schema CfnAwsAccountPropsMetricsConfig
 */
export interface CfnAwsAccountPropsMetricsConfig {
  /**
   * Enable the infrastructure monitoring Datadog product for this AWS Account. This will enable collecting all AWS metrics in your account.
   *
   * @schema CfnAwsAccountPropsMetricsConfig#Enabled
   */
  readonly enabled?: boolean;

  /**
   * Enable EC2 automute for AWS metrics
   *
   * @schema CfnAwsAccountPropsMetricsConfig#AutomuteEnabled
   */
  readonly automuteEnabled?: boolean;

  /**
   * Enable CloudWatch alarms collection
   *
   * @schema CfnAwsAccountPropsMetricsConfig#CollectCloudwatchAlarms
   */
  readonly collectCloudwatchAlarms?: boolean;

  /**
   * Enable custom metrics collection
   *
   * @schema CfnAwsAccountPropsMetricsConfig#CollectCustomMetrics
   */
  readonly collectCustomMetrics?: boolean;

  /**
   * The array of EC2 tags (in the form key:value) defines a filter that Datadog uses when collecting metrics from EC2.
   *
   * @schema CfnAwsAccountPropsMetricsConfig#TagFilters
   */
  readonly tagFilters?: CfnAwsAccountPropsMetricsConfigTagFilters[];

  /**
   * @schema CfnAwsAccountPropsMetricsConfig#NamespaceFilters
   */
  readonly namespaceFilters?: CfnAwsAccountPropsMetricsConfigNamespaceFilters;
}

/**
 * Converts an object of type 'CfnAwsAccountPropsMetricsConfig' to JSON representation.
 */
/* eslint-disable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */
export function toJson_CfnAwsAccountPropsMetricsConfig(obj: CfnAwsAccountPropsMetricsConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Enabled': obj.enabled,
    'AutomuteEnabled': obj.automuteEnabled,
    'CollectCloudwatchAlarms': obj.collectCloudwatchAlarms,
    'CollectCustomMetrics': obj.collectCustomMetrics,
    'TagFilters': obj.tagFilters?.map(y => toJson_CfnAwsAccountPropsMetricsConfigTagFilters(y)),
    'NamespaceFilters': toJson_CfnAwsAccountPropsMetricsConfigNamespaceFilters(obj.namespaceFilters),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */

/**
 * The configuration for ingesting AWS Resources into Datadog.
 *
 * @schema CfnAwsAccountPropsResourcesConfig
 */
export interface CfnAwsAccountPropsResourcesConfig {
  /**
   * Enable the compliance and security posture management Datadog product. This will enable collecting information on your AWS resources and providing security validation.
   *
   * @schema CfnAwsAccountPropsResourcesConfig#CSPMResourceCollection
   */
  readonly cspmResourceCollection?: boolean;

  /**
   * Enable collecting information on your AWS resources for use in Datadog products such as Network Process Monitoring.
   *
   * @schema CfnAwsAccountPropsResourcesConfig#ExtendedResourceCollection
   */
  readonly extendedResourceCollection?: boolean;
}

/**
 * Converts an object of type 'CfnAwsAccountPropsResourcesConfig' to JSON representation.
 */
/* eslint-disable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */
export function toJson_CfnAwsAccountPropsResourcesConfig(obj: CfnAwsAccountPropsResourcesConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'CSPMResourceCollection': obj.cspmResourceCollection,
    'ExtendedResourceCollection': obj.extendedResourceCollection,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */

/**
 * The configuration for ingesting AWS Logs into Datadog.
 *
 * @schema CfnAwsAccountPropsLogsConfig
 */
export interface CfnAwsAccountPropsLogsConfig {
  /**
   * The configuration for Lambda Log Forwarders.
   *
   * @schema CfnAwsAccountPropsLogsConfig#LambdaForwarder
   */
  readonly lambdaForwarder?: CfnAwsAccountPropsLogsConfigLambdaForwarder;
}

/**
 * Converts an object of type 'CfnAwsAccountPropsLogsConfig' to JSON representation.
 */
/* eslint-disable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */
export function toJson_CfnAwsAccountPropsLogsConfig(obj: CfnAwsAccountPropsLogsConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'LambdaForwarder': toJson_CfnAwsAccountPropsLogsConfigLambdaForwarder(obj.lambdaForwarder),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */

/**
 * The configuration for ingesting AWS Traces into Datadog.
 *
 * @schema CfnAwsAccountPropsTracesConfig
 */
export interface CfnAwsAccountPropsTracesConfig {
  /**
   * The services to collect X-Ray traces from.
   *
   * @schema CfnAwsAccountPropsTracesConfig#XRayServices
   */
  readonly xRayServices?: CfnAwsAccountPropsTracesConfigXRayServices;
}

/**
 * Converts an object of type 'CfnAwsAccountPropsTracesConfig' to JSON representation.
 */
/* eslint-disable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */
export function toJson_CfnAwsAccountPropsTracesConfig(obj: CfnAwsAccountPropsTracesConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'XRayServices': toJson_CfnAwsAccountPropsTracesConfigXRayServices(obj.xRayServices),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */

/**
 * @schema CfnAwsAccountPropsMetricsConfigTagFilters
 */
export interface CfnAwsAccountPropsMetricsConfigTagFilters {
  /**
   * @schema CfnAwsAccountPropsMetricsConfigTagFilters#Namespace
   */
  readonly namespace?: string;

  /**
   * @schema CfnAwsAccountPropsMetricsConfigTagFilters#Tags
   */
  readonly tags?: string[];
}

/**
 * Converts an object of type 'CfnAwsAccountPropsMetricsConfigTagFilters' to JSON representation.
 */
/* eslint-disable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */
export function toJson_CfnAwsAccountPropsMetricsConfigTagFilters(obj: CfnAwsAccountPropsMetricsConfigTagFilters | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Namespace': obj.namespace,
    'Tags': obj.tags?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */

/**
 * @schema CfnAwsAccountPropsMetricsConfigNamespaceFilters
 */
export interface CfnAwsAccountPropsMetricsConfigNamespaceFilters {
  /**
   * Array of AWS namespaces to include from metrics collection. Only one of IncludeOnlyNamespaces or ExcludeNamespaces can be set.
   *
   * @schema CfnAwsAccountPropsMetricsConfigNamespaceFilters#IncludeOnly
   */
  readonly includeOnly?: string[];

  /**
   * Array of AWS namespaces to exclude from metrics collection. Only one of IncludeOnlyNamespaces or ExcludeNamespaces can be set.
   *
   * @schema CfnAwsAccountPropsMetricsConfigNamespaceFilters#ExcludeOnly
   */
  readonly excludeOnly?: string[];
}

/**
 * Converts an object of type 'CfnAwsAccountPropsMetricsConfigNamespaceFilters' to JSON representation.
 */
/* eslint-disable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */
export function toJson_CfnAwsAccountPropsMetricsConfigNamespaceFilters(obj: CfnAwsAccountPropsMetricsConfigNamespaceFilters | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'IncludeOnly': obj.includeOnly?.map(y => y),
    'ExcludeOnly': obj.excludeOnly?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */

/**
 * The configuration for Lambda Log Forwarders.
 *
 * @schema CfnAwsAccountPropsLogsConfigLambdaForwarder
 */
export interface CfnAwsAccountPropsLogsConfigLambdaForwarder {
  /**
   * List of Datadog Lambda Log Forwarder ARNs
   *
   * @schema CfnAwsAccountPropsLogsConfigLambdaForwarder#Lambdas
   */
  readonly lambdas?: string[];

  /**
   * List of AWS services that will send logs to the Datadog Lambda Log Forwarder.
   *
   * @schema CfnAwsAccountPropsLogsConfigLambdaForwarder#Sources
   */
  readonly sources?: string[];
}

/**
 * Converts an object of type 'CfnAwsAccountPropsLogsConfigLambdaForwarder' to JSON representation.
 */
/* eslint-disable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */
export function toJson_CfnAwsAccountPropsLogsConfigLambdaForwarder(obj: CfnAwsAccountPropsLogsConfigLambdaForwarder | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Lambdas': obj.lambdas?.map(y => y),
    'Sources': obj.sources?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */

/**
 * The services to collect X-Ray traces from.
 *
 * @schema CfnAwsAccountPropsTracesConfigXRayServices
 */
export interface CfnAwsAccountPropsTracesConfigXRayServices {
  /**
   * Array of services to collect traces for.
   *
   * @schema CfnAwsAccountPropsTracesConfigXRayServices#IncludeOnly
   */
  readonly includeOnly?: string[];

  /**
   * Collect traces for all services.
   *
   * @schema CfnAwsAccountPropsTracesConfigXRayServices#IncludeAll
   */
  readonly includeAll?: boolean;
}

/**
 * Converts an object of type 'CfnAwsAccountPropsTracesConfigXRayServices' to JSON representation.
 */
/* eslint-disable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */
export function toJson_CfnAwsAccountPropsTracesConfigXRayServices(obj: CfnAwsAccountPropsTracesConfigXRayServices | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'IncludeOnly': obj.includeOnly?.map(y => y),
    'IncludeAll': obj.includeAll,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */


/**
 * A CloudFormation `Datadog::Integrations::AWSAccount`
 *
 * @cloudformationResource Datadog::Integrations::AWSAccount
 * @stability external
 * @link http://unknown-url
 */
export class CfnAwsAccount extends cdk.CfnResource {
  /**
  * The CloudFormation resource type name for this resource class.
  */
  public static readonly CFN_RESOURCE_TYPE_NAME = "Datadog::Integrations::AWSAccount";

  /**
   * Resource props.
   */
  public readonly props: CfnAwsAccountProps;

  /**
   * Attribute `Datadog::Integrations::AWSAccount.Id`
   * @link http://unknown-url
   */
  public readonly attrId: string;

  /**
   * Create a new `Datadog::Integrations::AWSAccount`.
   *
   * @param scope - scope in which this resource is defined
   * @param id    - scoped id of the resource
   * @param props - resource properties
   */
  constructor(scope: constructs.Construct, id: string, props: CfnAwsAccountProps) {
    super(scope, id, { type: CfnAwsAccount.CFN_RESOURCE_TYPE_NAME, properties: toJson_CfnAwsAccountProps(props)! });

    this.props = props;

    this.attrId = cdk.Token.asString(this.getAtt('Id'));
  }
}