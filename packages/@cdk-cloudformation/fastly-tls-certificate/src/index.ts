// Generated by cdk-import
import * as cdk from 'aws-cdk-lib';
import * as constructs from 'constructs';

/**
 * Manage a custom Tls Certificate upload
 *
 * @schema CfnCertificateProps
 */
export interface CfnCertificateProps {
  /**
   * @schema CfnCertificateProps#Type
   */
  readonly type?: string;

  /**
   * @schema CfnCertificateProps#Attributes
   */
  readonly attributes?: CfnCertificatePropsAttributes;

  /**
   * @schema CfnCertificateProps#Relationships
   */
  readonly relationships?: Relationships;
}

/**
 * Converts an object of type 'CfnCertificateProps' to JSON representation.
 */
/* eslint-disable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */
export function toJson_CfnCertificateProps(obj: CfnCertificateProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Attributes': toJson_CfnCertificatePropsAttributes(obj.attributes),
    'Relationships': toJson_Relationships(obj.relationships),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */

/**
 * @schema CfnCertificatePropsAttributes
 */
export interface CfnCertificatePropsAttributes {
  /**
   * @schema CfnCertificatePropsAttributes#Name
   */
  readonly name?: string;

  /**
   * @schema CfnCertificatePropsAttributes#CertBlob
   */
  readonly certBlob: string;

  /**
   * @schema CfnCertificatePropsAttributes#CreatedAt
   */
  readonly createdAt?: Date;

  /**
   * @schema CfnCertificatePropsAttributes#Issuer
   */
  readonly issuer?: string;

  /**
   * @schema CfnCertificatePropsAttributes#NotAfter
   */
  readonly notAfter?: string;

  /**
   * @schema CfnCertificatePropsAttributes#NotBefore
   */
  readonly notBefore?: string;

  /**
   * @schema CfnCertificatePropsAttributes#SignatureAlgorithm
   */
  readonly signatureAlgorithm?: string;

  /**
   * @schema CfnCertificatePropsAttributes#SerialNumber
   */
  readonly serialNumber?: string;

  /**
   * @schema CfnCertificatePropsAttributes#UpdatedAt
   */
  readonly updatedAt?: Date;

  /**
   * @schema CfnCertificatePropsAttributes#Replace
   */
  readonly replace?: string;

  /**
   * @schema CfnCertificatePropsAttributes#IssuedTo
   */
  readonly issuedTo?: string;
}

/**
 * Converts an object of type 'CfnCertificatePropsAttributes' to JSON representation.
 */
/* eslint-disable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */
export function toJson_CfnCertificatePropsAttributes(obj: CfnCertificatePropsAttributes | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Name': obj.name,
    'CertBlob': obj.certBlob,
    'CreatedAt': obj.createdAt?.toISOString(),
    'Issuer': obj.issuer,
    'NotAfter': obj.notAfter,
    'NotBefore': obj.notBefore,
    'SignatureAlgorithm': obj.signatureAlgorithm,
    'SerialNumber': obj.serialNumber,
    'UpdatedAt': obj.updatedAt?.toISOString(),
    'Replace': obj.replace,
    'IssuedTo': obj.issuedTo,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */

/**
 * @schema Relationships
 */
export interface Relationships {
  /**
   * @schema Relationships#TlsDomains
   */
  readonly tlsDomains?: RelationshipsTlsDomains;
}

/**
 * Converts an object of type 'Relationships' to JSON representation.
 */
/* eslint-disable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */
export function toJson_Relationships(obj: Relationships | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'TlsDomains': toJson_RelationshipsTlsDomains(obj.tlsDomains),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */

/**
 * @schema RelationshipsTlsDomains
 */
export interface RelationshipsTlsDomains {
  /**
   * @schema RelationshipsTlsDomains#Data
   */
  readonly data?: Data[];
}

/**
 * Converts an object of type 'RelationshipsTlsDomains' to JSON representation.
 */
/* eslint-disable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */
export function toJson_RelationshipsTlsDomains(obj: RelationshipsTlsDomains | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Data': obj.data?.map(y => toJson_Data(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */

/**
 * @schema Data
 */
export interface Data {
  /**
   * @schema Data#Id
   */
  readonly id?: string;
}

/**
 * Converts an object of type 'Data' to JSON representation.
 */
/* eslint-disable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */
export function toJson_Data(obj: Data | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Id': obj.id,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */


/**
 * A CloudFormation `Fastly::Tls::Certificate`
 *
 * @cloudformationResource Fastly::Tls::Certificate
 * @stability external
 * @link https://github.com/aws-ia/cloudformation-fastly-resource-providers
 */
export class CfnCertificate extends cdk.CfnResource {
  /**
  * The CloudFormation resource type name for this resource class.
  */
  public static readonly CFN_RESOURCE_TYPE_NAME = "Fastly::Tls::Certificate";

  /**
   * Resource props.
   */
  public readonly props: CfnCertificateProps;

  /**
   * Attribute `Fastly::Tls::Certificate.Id`
   * @link https://github.com/aws-ia/cloudformation-fastly-resource-providers
   */
  public readonly attrId: string;

  /**
   * Create a new `Fastly::Tls::Certificate`.
   *
   * @param scope - scope in which this resource is defined
   * @param id    - scoped id of the resource
   * @param props - resource properties
   */
  constructor(scope: constructs.Construct, id: string, props: CfnCertificateProps) {
    super(scope, id, { type: CfnCertificate.CFN_RESOURCE_TYPE_NAME, properties: toJson_CfnCertificateProps(props)! });

    this.props = props;

    this.attrId = cdk.Token.asString(this.getAtt('Id'));
  }
}