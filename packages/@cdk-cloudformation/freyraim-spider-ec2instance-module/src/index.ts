// Generated by cdk-import
import * as cdk from 'aws-cdk-lib';
import * as constructs from 'constructs';

/**
 * Schema for Module Fragment of type FreyrAIM::Spider::EC2Instance::MODULE
 *
 * @schema CfnEc2InstanceModuleProps
 */
export interface CfnEc2InstanceModuleProps {
  /**
   * @schema CfnEc2InstanceModuleProps#Parameters
   */
  readonly parameters?: CfnEc2InstanceModulePropsParameters;

  /**
   * @schema CfnEc2InstanceModuleProps#Resources
   */
  readonly resources?: CfnEc2InstanceModulePropsResources;

}

/**
 * Converts an object of type 'CfnEc2InstanceModuleProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnEc2InstanceModuleProps(obj: CfnEc2InstanceModuleProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Parameters': toJson_CfnEc2InstanceModulePropsParameters(obj.parameters),
    'Resources': toJson_CfnEc2InstanceModulePropsResources(obj.resources),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnEc2InstanceModulePropsParameters
 */
export interface CfnEc2InstanceModulePropsParameters {
  /**
   * The environment name
   *
   * @schema CfnEc2InstanceModulePropsParameters#EnvName
   */
  readonly envName?: CfnEc2InstanceModulePropsParametersEnvName;

}

/**
 * Converts an object of type 'CfnEc2InstanceModulePropsParameters' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnEc2InstanceModulePropsParameters(obj: CfnEc2InstanceModulePropsParameters | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'EnvName': toJson_CfnEc2InstanceModulePropsParametersEnvName(obj.envName),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnEc2InstanceModulePropsResources
 */
export interface CfnEc2InstanceModulePropsResources {
  /**
   * @schema CfnEc2InstanceModulePropsResources#SpiderEC2Instance
   */
  readonly spiderEc2Instance?: CfnEc2InstanceModulePropsResourcesSpiderEc2Instance;

}

/**
 * Converts an object of type 'CfnEc2InstanceModulePropsResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnEc2InstanceModulePropsResources(obj: CfnEc2InstanceModulePropsResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'SpiderEC2Instance': toJson_CfnEc2InstanceModulePropsResourcesSpiderEc2Instance(obj.spiderEc2Instance),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The environment name
 *
 * @schema CfnEc2InstanceModulePropsParametersEnvName
 */
export interface CfnEc2InstanceModulePropsParametersEnvName {
  /**
   * @schema CfnEc2InstanceModulePropsParametersEnvName#Type
   */
  readonly type: string;

  /**
   * @schema CfnEc2InstanceModulePropsParametersEnvName#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnEc2InstanceModulePropsParametersEnvName' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnEc2InstanceModulePropsParametersEnvName(obj: CfnEc2InstanceModulePropsParametersEnvName | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnEc2InstanceModulePropsResourcesSpiderEc2Instance
 */
export interface CfnEc2InstanceModulePropsResourcesSpiderEc2Instance {
  /**
   * @schema CfnEc2InstanceModulePropsResourcesSpiderEc2Instance#Type
   */
  readonly type?: string;

  /**
   * @schema CfnEc2InstanceModulePropsResourcesSpiderEc2Instance#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnEc2InstanceModulePropsResourcesSpiderEc2Instance' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnEc2InstanceModulePropsResourcesSpiderEc2Instance(obj: CfnEc2InstanceModulePropsResourcesSpiderEc2Instance | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 * A CloudFormation `FreyrAIM::Spider::EC2Instance::MODULE`
 *
 * @cloudformationResource FreyrAIM::Spider::EC2Instance::MODULE
 * @stability external
 * @link http://unknown-url
 */
export class CfnEc2InstanceModule extends cdk.CfnResource {
  /**
  * The CloudFormation resource type name for this resource class.
  */
  public static readonly CFN_RESOURCE_TYPE_NAME = "FreyrAIM::Spider::EC2Instance::MODULE";

  /**
   * Resource props.
   */
  public readonly props: CfnEc2InstanceModuleProps;


  /**
   * Create a new `FreyrAIM::Spider::EC2Instance::MODULE`.
   *
   * @param scope - scope in which this resource is defined
   * @param id    - scoped id of the resource
   * @param props - resource properties
   */
  constructor(scope: constructs.Construct, id: string, props: CfnEc2InstanceModuleProps) {
    super(scope, id, { type: CfnEc2InstanceModule.CFN_RESOURCE_TYPE_NAME, properties: toJson_CfnEc2InstanceModuleProps(props)! });

    this.props = props;

  }
}