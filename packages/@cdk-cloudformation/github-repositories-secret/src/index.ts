// Generated by cdk-import
import * as cdk from 'aws-cdk-lib';
import * as constructs from 'constructs';

/**
 * Manage the repository secret
 *
 * @schema CfnSecretProps
 */
export interface CfnSecretProps {
  /**
   * @schema CfnSecretProps#Owner
   */
  readonly owner: string;

  /**
   * @schema CfnSecretProps#Repository
   */
  readonly repository: string;

  /**
   * @schema CfnSecretProps#SecretValue
   */
  readonly secretValue?: string;

  /**
   * @schema CfnSecretProps#SecretName
   */
  readonly secretName: string;

  /**
   * @schema CfnSecretProps#Name
   */
  readonly name?: string;

  /**
   * @schema CfnSecretProps#CreatedAt
   */
  readonly createdAt?: Date;

  /**
   * @schema CfnSecretProps#UpdatedAt
   */
  readonly updatedAt?: Date;
}

/**
 * Converts an object of type 'CfnSecretProps' to JSON representation.
 */
/* eslint-disable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */
export function toJson_CfnSecretProps(obj: CfnSecretProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Owner': obj.owner,
    'Repository': obj.repository,
    'SecretValue': obj.secretValue,
    'SecretName': obj.secretName,
    'Name': obj.name,
    'CreatedAt': obj.createdAt?.toISOString(),
    'UpdatedAt': obj.updatedAt?.toISOString(),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */


/**
 * A CloudFormation `GitHub::Repositories::Secret`
 *
 * @cloudformationResource GitHub::Repositories::Secret
 * @stability external
 * @link https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git
 */
export class CfnSecret extends cdk.CfnResource {
  /**
  * The CloudFormation resource type name for this resource class.
  */
  public static readonly CFN_RESOURCE_TYPE_NAME = "GitHub::Repositories::Secret";

  /**
   * Resource props.
   */
  public readonly props: CfnSecretProps;


  /**
   * Create a new `GitHub::Repositories::Secret`.
   *
   * @param scope - scope in which this resource is defined
   * @param id    - scoped id of the resource
   * @param props - resource properties
   */
  constructor(scope: constructs.Construct, id: string, props: CfnSecretProps) {
    super(scope, id, { type: CfnSecret.CFN_RESOURCE_TYPE_NAME, properties: toJson_CfnSecretProps(props)! });

    this.props = props;

  }
}