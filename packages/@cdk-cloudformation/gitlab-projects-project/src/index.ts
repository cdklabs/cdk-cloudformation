// Generated by cdk-import
import * as cdk from 'aws-cdk-lib';
import * as constructs from 'constructs';

/**
 * Creates a project in GitLab
 *
 * @schema CfnProjectProps
 */
export interface CfnProjectProps {
  /**
   * The name of the project to create
   *
   * @schema CfnProjectProps#Name
   */
  readonly name: string;

  /**
   * The path of the project
   *
   * @schema CfnProjectProps#Path
   */
  readonly path?: string;

  /**
   * Whether the project should be public (default false)
   *
   * @schema CfnProjectProps#Public
   */
  readonly public?: boolean;
}

/**
 * Converts an object of type 'CfnProjectProps' to JSON representation.
 */
/* eslint-disable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */
export function toJson_CfnProjectProps(obj: CfnProjectProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Name': obj.name,
    'Path': obj.path,
    'Public': obj.public,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */


/**
 * A CloudFormation `GitLab::Projects::Project`
 *
 * @cloudformationResource GitLab::Projects::Project
 * @stability external
 * @link https://github.com/aws-ia/cloudformation-gitlab-resource-providers.git
 */
export class CfnProject extends cdk.CfnResource {
  /**
  * The CloudFormation resource type name for this resource class.
  */
  public static readonly CFN_RESOURCE_TYPE_NAME = "GitLab::Projects::Project";

  /**
   * Resource props.
   */
  public readonly props: CfnProjectProps;

  /**
   * Attribute `GitLab::Projects::Project.Id`
   * @link https://github.com/aws-ia/cloudformation-gitlab-resource-providers.git
   */
  public readonly attrId: number;

  /**
   * Create a new `GitLab::Projects::Project`.
   *
   * @param scope - scope in which this resource is defined
   * @param id    - scoped id of the resource
   * @param props - resource properties
   */
  constructor(scope: constructs.Construct, id: string, props: CfnProjectProps) {
    super(scope, id, { type: CfnProject.CFN_RESOURCE_TYPE_NAME, properties: toJson_CfnProjectProps(props)! });

    this.props = props;

    this.attrId = cdk.Token.asNumber(this.getAtt('Id'));
  }
}