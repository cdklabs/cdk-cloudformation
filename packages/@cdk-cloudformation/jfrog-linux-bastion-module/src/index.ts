// Generated by cdk-import
import * as cdk from 'aws-cdk-lib';
import * as constructs from 'constructs';

/**
 * Schema for Module Fragment of type JFrog::Linux::Bastion::MODULE
 *
 * @schema CfnBastionModuleProps
 */
export interface CfnBastionModuleProps {
  /**
   * @schema CfnBastionModuleProps#Parameters
   */
  readonly parameters?: CfnBastionModulePropsParameters;

  /**
   * @schema CfnBastionModuleProps#Resources
   */
  readonly resources?: CfnBastionModulePropsResources;

}

/**
 * Converts an object of type 'CfnBastionModuleProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModuleProps(obj: CfnBastionModuleProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Parameters': toJson_CfnBastionModulePropsParameters(obj.parameters),
    'Resources': toJson_CfnBastionModulePropsResources(obj.resources),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnBastionModulePropsParameters
 */
export interface CfnBastionModulePropsParameters {
  /**
   * Logical Id of the MODULE
   *
   * @schema CfnBastionModulePropsParameters#LogicalId
   */
  readonly logicalId?: CfnBastionModulePropsParametersLogicalId;

  /**
   * The Linux distribution for the AMI to be used for the bastion instances.
   *
   * @schema CfnBastionModulePropsParameters#BastionAMIOS
   */
  readonly bastionAmios?: CfnBastionModulePropsParametersBastionAmios;

  /**
   * The value used for the name tag of the bastion host
   *
   * @schema CfnBastionModulePropsParameters#BastionHostName
   */
  readonly bastionHostName?: CfnBastionModulePropsParametersBastionHostName;

  /**
   * Banner text to display upon login.
   *
   * @schema CfnBastionModulePropsParameters#BastionBanner
   */
  readonly bastionBanner?: CfnBastionModulePropsParametersBastionBanner;

  /**
   * VPC tenancy to launch the bastion in. Options: 'dedicated' or 'default'
   *
   * @schema CfnBastionModulePropsParameters#BastionTenancy
   */
  readonly bastionTenancy?: CfnBastionModulePropsParametersBastionTenancy;

  /**
   * Amazon EC2 instance type for the bastion instances.
   *
   * @schema CfnBastionModulePropsParameters#BastionInstanceType
   */
  readonly bastionInstanceType?: CfnBastionModulePropsParametersBastionInstanceType;

  /**
   * To include a banner to be displayed when connecting via SSH to the bastion, choose true.
   *
   * @schema CfnBastionModulePropsParameters#EnableBanner
   */
  readonly enableBanner?: CfnBastionModulePropsParametersEnableBanner;

  /**
   * To enable TCP forwarding, choose true.
   *
   * @schema CfnBastionModulePropsParameters#EnableTCPForwarding
   */
  readonly enableTcpForwarding?: CfnBastionModulePropsParametersEnableTcpForwarding;

  /**
   * To enable X11 forwarding, choose true.
   *
   * @schema CfnBastionModulePropsParameters#EnableX11Forwarding
   */
  readonly enableX11Forwarding?: CfnBastionModulePropsParametersEnableX11Forwarding;

  /**
   * Name of an existing public/private key pair. If you do not have one in this AWS Region, please create it before continuing.
   *
   * @schema CfnBastionModulePropsParameters#KeyPairName
   */
  readonly keyPairName?: CfnBastionModulePropsParametersKeyPairName;

  /**
   * The number of bastion hosts to create. The maximum number is four.
   *
   * @schema CfnBastionModulePropsParameters#NumBastionHosts
   */
  readonly numBastionHosts?: CfnBastionModulePropsParametersNumBastionHosts;

  /**
   * ID of the public subnet in Availability Zone 1 of your existing VPC (e.g., subnet-z0376dab).
   *
   * @schema CfnBastionModulePropsParameters#PublicSubnet1Id
   */
  readonly publicSubnet1Id?: CfnBastionModulePropsParametersPublicSubnet1Id;

  /**
   * ID of the public subnet in Availability Zone 1 of your existing VPC (e.g., subnet-z0376dab).
   *
   * @schema CfnBastionModulePropsParameters#PublicSubnet2Id
   */
  readonly publicSubnet2Id?: CfnBastionModulePropsParametersPublicSubnet2Id;

  /**
   * S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).
   *
   * @schema CfnBastionModulePropsParameters#QSS3BucketName
   */
  readonly qss3BucketName?: CfnBastionModulePropsParametersQss3BucketName;

  /**
   * The AWS Region where the Quick Start S3 bucket (QSS3BucketName) is hosted. When using your own bucket, you must specify this value.
   *
   * @schema CfnBastionModulePropsParameters#QSS3BucketRegion
   */
  readonly qss3BucketRegion?: CfnBastionModulePropsParametersQss3BucketRegion;

  /**
   * S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), dots (.) and forward slash (/) and it should end with a forward slash (/).
   *
   * @schema CfnBastionModulePropsParameters#QSS3KeyPrefix
   */
  readonly qss3KeyPrefix?: CfnBastionModulePropsParametersQss3KeyPrefix;

  /**
   * Allowed CIDR block for external SSH access to the bastions.
   *
   * @schema CfnBastionModulePropsParameters#RemoteAccessCIDR
   */
  readonly remoteAccessCidr?: CfnBastionModulePropsParametersRemoteAccessCidr;

  /**
   * ID of the VPC (e.g., vpc-0343606e).
   *
   * @schema CfnBastionModulePropsParameters#VPCID
   */
  readonly vpcid?: CfnBastionModulePropsParametersVpcid;

  /**
   * An alternative initialization script to run during setup.
   *
   * @schema CfnBastionModulePropsParameters#AlternativeInitializationScript
   */
  readonly alternativeInitializationScript?: CfnBastionModulePropsParametersAlternativeInitializationScript;

  /**
   * The Region-specific image to use for the instance.
   *
   * @schema CfnBastionModulePropsParameters#OSImageOverride
   */
  readonly osImageOverride?: CfnBastionModulePropsParametersOsImageOverride;

  /**
   * A comma-separated list of environment variables for use in bootstrapping. Variables must be in the format KEY=VALUE. VALUE cannot contain commas.
   *
   * @schema CfnBastionModulePropsParameters#EnvironmentVariables
   */
  readonly environmentVariables?: CfnBastionModulePropsParametersEnvironmentVariables;

  /**
   * The size in GB for the root EBS volume.
   *
   * @schema CfnBastionModulePropsParameters#RootVolumeSize
   */
  readonly rootVolumeSize?: CfnBastionModulePropsParametersRootVolumeSize;

}

/**
 * Converts an object of type 'CfnBastionModulePropsParameters' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsParameters(obj: CfnBastionModulePropsParameters | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'LogicalId': toJson_CfnBastionModulePropsParametersLogicalId(obj.logicalId),
    'BastionAMIOS': toJson_CfnBastionModulePropsParametersBastionAmios(obj.bastionAmios),
    'BastionHostName': toJson_CfnBastionModulePropsParametersBastionHostName(obj.bastionHostName),
    'BastionBanner': toJson_CfnBastionModulePropsParametersBastionBanner(obj.bastionBanner),
    'BastionTenancy': toJson_CfnBastionModulePropsParametersBastionTenancy(obj.bastionTenancy),
    'BastionInstanceType': toJson_CfnBastionModulePropsParametersBastionInstanceType(obj.bastionInstanceType),
    'EnableBanner': toJson_CfnBastionModulePropsParametersEnableBanner(obj.enableBanner),
    'EnableTCPForwarding': toJson_CfnBastionModulePropsParametersEnableTcpForwarding(obj.enableTcpForwarding),
    'EnableX11Forwarding': toJson_CfnBastionModulePropsParametersEnableX11Forwarding(obj.enableX11Forwarding),
    'KeyPairName': toJson_CfnBastionModulePropsParametersKeyPairName(obj.keyPairName),
    'NumBastionHosts': toJson_CfnBastionModulePropsParametersNumBastionHosts(obj.numBastionHosts),
    'PublicSubnet1Id': toJson_CfnBastionModulePropsParametersPublicSubnet1Id(obj.publicSubnet1Id),
    'PublicSubnet2Id': toJson_CfnBastionModulePropsParametersPublicSubnet2Id(obj.publicSubnet2Id),
    'QSS3BucketName': toJson_CfnBastionModulePropsParametersQss3BucketName(obj.qss3BucketName),
    'QSS3BucketRegion': toJson_CfnBastionModulePropsParametersQss3BucketRegion(obj.qss3BucketRegion),
    'QSS3KeyPrefix': toJson_CfnBastionModulePropsParametersQss3KeyPrefix(obj.qss3KeyPrefix),
    'RemoteAccessCIDR': toJson_CfnBastionModulePropsParametersRemoteAccessCidr(obj.remoteAccessCidr),
    'VPCID': toJson_CfnBastionModulePropsParametersVpcid(obj.vpcid),
    'AlternativeInitializationScript': toJson_CfnBastionModulePropsParametersAlternativeInitializationScript(obj.alternativeInitializationScript),
    'OSImageOverride': toJson_CfnBastionModulePropsParametersOsImageOverride(obj.osImageOverride),
    'EnvironmentVariables': toJson_CfnBastionModulePropsParametersEnvironmentVariables(obj.environmentVariables),
    'RootVolumeSize': toJson_CfnBastionModulePropsParametersRootVolumeSize(obj.rootVolumeSize),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnBastionModulePropsResources
 */
export interface CfnBastionModulePropsResources {
  /**
   * @schema CfnBastionModulePropsResources#BastionMainLogGroup
   */
  readonly bastionMainLogGroup?: CfnBastionModulePropsResourcesBastionMainLogGroup;

  /**
   * @schema CfnBastionModulePropsResources#SSHMetricFilter
   */
  readonly sshMetricFilter?: CfnBastionModulePropsResourcesSshMetricFilter;

  /**
   * @schema CfnBastionModulePropsResources#BastionHostRole
   */
  readonly bastionHostRole?: CfnBastionModulePropsResourcesBastionHostRole;

  /**
   * @schema CfnBastionModulePropsResources#BastionHostPolicy
   */
  readonly bastionHostPolicy?: CfnBastionModulePropsResourcesBastionHostPolicy;

  /**
   * @schema CfnBastionModulePropsResources#BastionHostProfile
   */
  readonly bastionHostProfile?: CfnBastionModulePropsResourcesBastionHostProfile;

  /**
   * @schema CfnBastionModulePropsResources#EIP1
   */
  readonly eip1?: CfnBastionModulePropsResourcesEip1;

  /**
   * @schema CfnBastionModulePropsResources#EIP2
   */
  readonly eip2?: CfnBastionModulePropsResourcesEip2;

  /**
   * @schema CfnBastionModulePropsResources#EIP3
   */
  readonly eip3?: CfnBastionModulePropsResourcesEip3;

  /**
   * @schema CfnBastionModulePropsResources#EIP4
   */
  readonly eip4?: CfnBastionModulePropsResourcesEip4;

  /**
   * @schema CfnBastionModulePropsResources#BastionAutoScalingGroup
   */
  readonly bastionAutoScalingGroup?: CfnBastionModulePropsResourcesBastionAutoScalingGroup;

  /**
   * @schema CfnBastionModulePropsResources#BastionLaunchConfiguration
   */
  readonly bastionLaunchConfiguration?: CfnBastionModulePropsResourcesBastionLaunchConfiguration;

  /**
   * @schema CfnBastionModulePropsResources#BastionSecurityGroup
   */
  readonly bastionSecurityGroup?: CfnBastionModulePropsResourcesBastionSecurityGroup;

}

/**
 * Converts an object of type 'CfnBastionModulePropsResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsResources(obj: CfnBastionModulePropsResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'BastionMainLogGroup': toJson_CfnBastionModulePropsResourcesBastionMainLogGroup(obj.bastionMainLogGroup),
    'SSHMetricFilter': toJson_CfnBastionModulePropsResourcesSshMetricFilter(obj.sshMetricFilter),
    'BastionHostRole': toJson_CfnBastionModulePropsResourcesBastionHostRole(obj.bastionHostRole),
    'BastionHostPolicy': toJson_CfnBastionModulePropsResourcesBastionHostPolicy(obj.bastionHostPolicy),
    'BastionHostProfile': toJson_CfnBastionModulePropsResourcesBastionHostProfile(obj.bastionHostProfile),
    'EIP1': toJson_CfnBastionModulePropsResourcesEip1(obj.eip1),
    'EIP2': toJson_CfnBastionModulePropsResourcesEip2(obj.eip2),
    'EIP3': toJson_CfnBastionModulePropsResourcesEip3(obj.eip3),
    'EIP4': toJson_CfnBastionModulePropsResourcesEip4(obj.eip4),
    'BastionAutoScalingGroup': toJson_CfnBastionModulePropsResourcesBastionAutoScalingGroup(obj.bastionAutoScalingGroup),
    'BastionLaunchConfiguration': toJson_CfnBastionModulePropsResourcesBastionLaunchConfiguration(obj.bastionLaunchConfiguration),
    'BastionSecurityGroup': toJson_CfnBastionModulePropsResourcesBastionSecurityGroup(obj.bastionSecurityGroup),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Logical Id of the MODULE
 *
 * @schema CfnBastionModulePropsParametersLogicalId
 */
export interface CfnBastionModulePropsParametersLogicalId {
  /**
   * @schema CfnBastionModulePropsParametersLogicalId#Type
   */
  readonly type: string;

  /**
   * @schema CfnBastionModulePropsParametersLogicalId#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnBastionModulePropsParametersLogicalId' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsParametersLogicalId(obj: CfnBastionModulePropsParametersLogicalId | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The Linux distribution for the AMI to be used for the bastion instances.
 *
 * @schema CfnBastionModulePropsParametersBastionAmios
 */
export interface CfnBastionModulePropsParametersBastionAmios {
  /**
   * @schema CfnBastionModulePropsParametersBastionAmios#Type
   */
  readonly type: string;

  /**
   * @schema CfnBastionModulePropsParametersBastionAmios#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnBastionModulePropsParametersBastionAmios' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsParametersBastionAmios(obj: CfnBastionModulePropsParametersBastionAmios | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The value used for the name tag of the bastion host
 *
 * @schema CfnBastionModulePropsParametersBastionHostName
 */
export interface CfnBastionModulePropsParametersBastionHostName {
  /**
   * @schema CfnBastionModulePropsParametersBastionHostName#Type
   */
  readonly type: string;

  /**
   * @schema CfnBastionModulePropsParametersBastionHostName#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnBastionModulePropsParametersBastionHostName' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsParametersBastionHostName(obj: CfnBastionModulePropsParametersBastionHostName | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Banner text to display upon login.
 *
 * @schema CfnBastionModulePropsParametersBastionBanner
 */
export interface CfnBastionModulePropsParametersBastionBanner {
  /**
   * @schema CfnBastionModulePropsParametersBastionBanner#Type
   */
  readonly type: string;

  /**
   * @schema CfnBastionModulePropsParametersBastionBanner#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnBastionModulePropsParametersBastionBanner' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsParametersBastionBanner(obj: CfnBastionModulePropsParametersBastionBanner | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * VPC tenancy to launch the bastion in. Options: 'dedicated' or 'default'
 *
 * @schema CfnBastionModulePropsParametersBastionTenancy
 */
export interface CfnBastionModulePropsParametersBastionTenancy {
  /**
   * @schema CfnBastionModulePropsParametersBastionTenancy#Type
   */
  readonly type: string;

  /**
   * @schema CfnBastionModulePropsParametersBastionTenancy#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnBastionModulePropsParametersBastionTenancy' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsParametersBastionTenancy(obj: CfnBastionModulePropsParametersBastionTenancy | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Amazon EC2 instance type for the bastion instances.
 *
 * @schema CfnBastionModulePropsParametersBastionInstanceType
 */
export interface CfnBastionModulePropsParametersBastionInstanceType {
  /**
   * @schema CfnBastionModulePropsParametersBastionInstanceType#Type
   */
  readonly type: string;

  /**
   * @schema CfnBastionModulePropsParametersBastionInstanceType#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnBastionModulePropsParametersBastionInstanceType' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsParametersBastionInstanceType(obj: CfnBastionModulePropsParametersBastionInstanceType | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * To include a banner to be displayed when connecting via SSH to the bastion, choose true.
 *
 * @schema CfnBastionModulePropsParametersEnableBanner
 */
export interface CfnBastionModulePropsParametersEnableBanner {
  /**
   * @schema CfnBastionModulePropsParametersEnableBanner#Type
   */
  readonly type: string;

  /**
   * @schema CfnBastionModulePropsParametersEnableBanner#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnBastionModulePropsParametersEnableBanner' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsParametersEnableBanner(obj: CfnBastionModulePropsParametersEnableBanner | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * To enable TCP forwarding, choose true.
 *
 * @schema CfnBastionModulePropsParametersEnableTcpForwarding
 */
export interface CfnBastionModulePropsParametersEnableTcpForwarding {
  /**
   * @schema CfnBastionModulePropsParametersEnableTcpForwarding#Type
   */
  readonly type: string;

  /**
   * @schema CfnBastionModulePropsParametersEnableTcpForwarding#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnBastionModulePropsParametersEnableTcpForwarding' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsParametersEnableTcpForwarding(obj: CfnBastionModulePropsParametersEnableTcpForwarding | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * To enable X11 forwarding, choose true.
 *
 * @schema CfnBastionModulePropsParametersEnableX11Forwarding
 */
export interface CfnBastionModulePropsParametersEnableX11Forwarding {
  /**
   * @schema CfnBastionModulePropsParametersEnableX11Forwarding#Type
   */
  readonly type: string;

  /**
   * @schema CfnBastionModulePropsParametersEnableX11Forwarding#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnBastionModulePropsParametersEnableX11Forwarding' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsParametersEnableX11Forwarding(obj: CfnBastionModulePropsParametersEnableX11Forwarding | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Name of an existing public/private key pair. If you do not have one in this AWS Region, please create it before continuing.
 *
 * @schema CfnBastionModulePropsParametersKeyPairName
 */
export interface CfnBastionModulePropsParametersKeyPairName {
  /**
   * @schema CfnBastionModulePropsParametersKeyPairName#Type
   */
  readonly type: string;

  /**
   * @schema CfnBastionModulePropsParametersKeyPairName#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnBastionModulePropsParametersKeyPairName' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsParametersKeyPairName(obj: CfnBastionModulePropsParametersKeyPairName | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The number of bastion hosts to create. The maximum number is four.
 *
 * @schema CfnBastionModulePropsParametersNumBastionHosts
 */
export interface CfnBastionModulePropsParametersNumBastionHosts {
  /**
   * @schema CfnBastionModulePropsParametersNumBastionHosts#Type
   */
  readonly type: string;

  /**
   * @schema CfnBastionModulePropsParametersNumBastionHosts#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnBastionModulePropsParametersNumBastionHosts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsParametersNumBastionHosts(obj: CfnBastionModulePropsParametersNumBastionHosts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * ID of the public subnet in Availability Zone 1 of your existing VPC (e.g., subnet-z0376dab).
 *
 * @schema CfnBastionModulePropsParametersPublicSubnet1Id
 */
export interface CfnBastionModulePropsParametersPublicSubnet1Id {
  /**
   * @schema CfnBastionModulePropsParametersPublicSubnet1Id#Type
   */
  readonly type: string;

  /**
   * @schema CfnBastionModulePropsParametersPublicSubnet1Id#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnBastionModulePropsParametersPublicSubnet1Id' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsParametersPublicSubnet1Id(obj: CfnBastionModulePropsParametersPublicSubnet1Id | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * ID of the public subnet in Availability Zone 1 of your existing VPC (e.g., subnet-z0376dab).
 *
 * @schema CfnBastionModulePropsParametersPublicSubnet2Id
 */
export interface CfnBastionModulePropsParametersPublicSubnet2Id {
  /**
   * @schema CfnBastionModulePropsParametersPublicSubnet2Id#Type
   */
  readonly type: string;

  /**
   * @schema CfnBastionModulePropsParametersPublicSubnet2Id#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnBastionModulePropsParametersPublicSubnet2Id' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsParametersPublicSubnet2Id(obj: CfnBastionModulePropsParametersPublicSubnet2Id | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).
 *
 * @schema CfnBastionModulePropsParametersQss3BucketName
 */
export interface CfnBastionModulePropsParametersQss3BucketName {
  /**
   * @schema CfnBastionModulePropsParametersQss3BucketName#Type
   */
  readonly type: string;

  /**
   * @schema CfnBastionModulePropsParametersQss3BucketName#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnBastionModulePropsParametersQss3BucketName' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsParametersQss3BucketName(obj: CfnBastionModulePropsParametersQss3BucketName | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The AWS Region where the Quick Start S3 bucket (QSS3BucketName) is hosted. When using your own bucket, you must specify this value.
 *
 * @schema CfnBastionModulePropsParametersQss3BucketRegion
 */
export interface CfnBastionModulePropsParametersQss3BucketRegion {
  /**
   * @schema CfnBastionModulePropsParametersQss3BucketRegion#Type
   */
  readonly type: string;

  /**
   * @schema CfnBastionModulePropsParametersQss3BucketRegion#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnBastionModulePropsParametersQss3BucketRegion' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsParametersQss3BucketRegion(obj: CfnBastionModulePropsParametersQss3BucketRegion | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), dots (.) and forward slash (/) and it should end with a forward slash (/).
 *
 * @schema CfnBastionModulePropsParametersQss3KeyPrefix
 */
export interface CfnBastionModulePropsParametersQss3KeyPrefix {
  /**
   * @schema CfnBastionModulePropsParametersQss3KeyPrefix#Type
   */
  readonly type: string;

  /**
   * @schema CfnBastionModulePropsParametersQss3KeyPrefix#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnBastionModulePropsParametersQss3KeyPrefix' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsParametersQss3KeyPrefix(obj: CfnBastionModulePropsParametersQss3KeyPrefix | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Allowed CIDR block for external SSH access to the bastions.
 *
 * @schema CfnBastionModulePropsParametersRemoteAccessCidr
 */
export interface CfnBastionModulePropsParametersRemoteAccessCidr {
  /**
   * @schema CfnBastionModulePropsParametersRemoteAccessCidr#Type
   */
  readonly type: string;

  /**
   * @schema CfnBastionModulePropsParametersRemoteAccessCidr#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnBastionModulePropsParametersRemoteAccessCidr' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsParametersRemoteAccessCidr(obj: CfnBastionModulePropsParametersRemoteAccessCidr | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * ID of the VPC (e.g., vpc-0343606e).
 *
 * @schema CfnBastionModulePropsParametersVpcid
 */
export interface CfnBastionModulePropsParametersVpcid {
  /**
   * @schema CfnBastionModulePropsParametersVpcid#Type
   */
  readonly type: string;

  /**
   * @schema CfnBastionModulePropsParametersVpcid#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnBastionModulePropsParametersVpcid' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsParametersVpcid(obj: CfnBastionModulePropsParametersVpcid | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * An alternative initialization script to run during setup.
 *
 * @schema CfnBastionModulePropsParametersAlternativeInitializationScript
 */
export interface CfnBastionModulePropsParametersAlternativeInitializationScript {
  /**
   * @schema CfnBastionModulePropsParametersAlternativeInitializationScript#Type
   */
  readonly type: string;

  /**
   * @schema CfnBastionModulePropsParametersAlternativeInitializationScript#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnBastionModulePropsParametersAlternativeInitializationScript' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsParametersAlternativeInitializationScript(obj: CfnBastionModulePropsParametersAlternativeInitializationScript | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The Region-specific image to use for the instance.
 *
 * @schema CfnBastionModulePropsParametersOsImageOverride
 */
export interface CfnBastionModulePropsParametersOsImageOverride {
  /**
   * @schema CfnBastionModulePropsParametersOsImageOverride#Type
   */
  readonly type: string;

  /**
   * @schema CfnBastionModulePropsParametersOsImageOverride#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnBastionModulePropsParametersOsImageOverride' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsParametersOsImageOverride(obj: CfnBastionModulePropsParametersOsImageOverride | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A comma-separated list of environment variables for use in bootstrapping. Variables must be in the format KEY=VALUE. VALUE cannot contain commas.
 *
 * @schema CfnBastionModulePropsParametersEnvironmentVariables
 */
export interface CfnBastionModulePropsParametersEnvironmentVariables {
  /**
   * @schema CfnBastionModulePropsParametersEnvironmentVariables#Type
   */
  readonly type: string;

  /**
   * @schema CfnBastionModulePropsParametersEnvironmentVariables#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnBastionModulePropsParametersEnvironmentVariables' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsParametersEnvironmentVariables(obj: CfnBastionModulePropsParametersEnvironmentVariables | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The size in GB for the root EBS volume.
 *
 * @schema CfnBastionModulePropsParametersRootVolumeSize
 */
export interface CfnBastionModulePropsParametersRootVolumeSize {
  /**
   * @schema CfnBastionModulePropsParametersRootVolumeSize#Type
   */
  readonly type: string;

  /**
   * @schema CfnBastionModulePropsParametersRootVolumeSize#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnBastionModulePropsParametersRootVolumeSize' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsParametersRootVolumeSize(obj: CfnBastionModulePropsParametersRootVolumeSize | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnBastionModulePropsResourcesBastionMainLogGroup
 */
export interface CfnBastionModulePropsResourcesBastionMainLogGroup {
  /**
   * @schema CfnBastionModulePropsResourcesBastionMainLogGroup#Type
   */
  readonly type?: string;

  /**
   * @schema CfnBastionModulePropsResourcesBastionMainLogGroup#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnBastionModulePropsResourcesBastionMainLogGroup' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsResourcesBastionMainLogGroup(obj: CfnBastionModulePropsResourcesBastionMainLogGroup | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnBastionModulePropsResourcesSshMetricFilter
 */
export interface CfnBastionModulePropsResourcesSshMetricFilter {
  /**
   * @schema CfnBastionModulePropsResourcesSshMetricFilter#Type
   */
  readonly type?: string;

  /**
   * @schema CfnBastionModulePropsResourcesSshMetricFilter#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnBastionModulePropsResourcesSshMetricFilter' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsResourcesSshMetricFilter(obj: CfnBastionModulePropsResourcesSshMetricFilter | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnBastionModulePropsResourcesBastionHostRole
 */
export interface CfnBastionModulePropsResourcesBastionHostRole {
  /**
   * @schema CfnBastionModulePropsResourcesBastionHostRole#Type
   */
  readonly type?: string;

  /**
   * @schema CfnBastionModulePropsResourcesBastionHostRole#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnBastionModulePropsResourcesBastionHostRole' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsResourcesBastionHostRole(obj: CfnBastionModulePropsResourcesBastionHostRole | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnBastionModulePropsResourcesBastionHostPolicy
 */
export interface CfnBastionModulePropsResourcesBastionHostPolicy {
  /**
   * @schema CfnBastionModulePropsResourcesBastionHostPolicy#Type
   */
  readonly type?: string;

  /**
   * @schema CfnBastionModulePropsResourcesBastionHostPolicy#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnBastionModulePropsResourcesBastionHostPolicy' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsResourcesBastionHostPolicy(obj: CfnBastionModulePropsResourcesBastionHostPolicy | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnBastionModulePropsResourcesBastionHostProfile
 */
export interface CfnBastionModulePropsResourcesBastionHostProfile {
  /**
   * @schema CfnBastionModulePropsResourcesBastionHostProfile#Type
   */
  readonly type?: string;

  /**
   * @schema CfnBastionModulePropsResourcesBastionHostProfile#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnBastionModulePropsResourcesBastionHostProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsResourcesBastionHostProfile(obj: CfnBastionModulePropsResourcesBastionHostProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnBastionModulePropsResourcesEip1
 */
export interface CfnBastionModulePropsResourcesEip1 {
  /**
   * @schema CfnBastionModulePropsResourcesEip1#Type
   */
  readonly type?: string;

  /**
   * @schema CfnBastionModulePropsResourcesEip1#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnBastionModulePropsResourcesEip1' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsResourcesEip1(obj: CfnBastionModulePropsResourcesEip1 | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnBastionModulePropsResourcesEip2
 */
export interface CfnBastionModulePropsResourcesEip2 {
  /**
   * @schema CfnBastionModulePropsResourcesEip2#Type
   */
  readonly type?: string;

  /**
   * @schema CfnBastionModulePropsResourcesEip2#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnBastionModulePropsResourcesEip2' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsResourcesEip2(obj: CfnBastionModulePropsResourcesEip2 | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnBastionModulePropsResourcesEip3
 */
export interface CfnBastionModulePropsResourcesEip3 {
  /**
   * @schema CfnBastionModulePropsResourcesEip3#Type
   */
  readonly type?: string;

  /**
   * @schema CfnBastionModulePropsResourcesEip3#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnBastionModulePropsResourcesEip3' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsResourcesEip3(obj: CfnBastionModulePropsResourcesEip3 | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnBastionModulePropsResourcesEip4
 */
export interface CfnBastionModulePropsResourcesEip4 {
  /**
   * @schema CfnBastionModulePropsResourcesEip4#Type
   */
  readonly type?: string;

  /**
   * @schema CfnBastionModulePropsResourcesEip4#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnBastionModulePropsResourcesEip4' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsResourcesEip4(obj: CfnBastionModulePropsResourcesEip4 | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnBastionModulePropsResourcesBastionAutoScalingGroup
 */
export interface CfnBastionModulePropsResourcesBastionAutoScalingGroup {
  /**
   * @schema CfnBastionModulePropsResourcesBastionAutoScalingGroup#Type
   */
  readonly type?: string;

  /**
   * @schema CfnBastionModulePropsResourcesBastionAutoScalingGroup#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnBastionModulePropsResourcesBastionAutoScalingGroup' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsResourcesBastionAutoScalingGroup(obj: CfnBastionModulePropsResourcesBastionAutoScalingGroup | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnBastionModulePropsResourcesBastionLaunchConfiguration
 */
export interface CfnBastionModulePropsResourcesBastionLaunchConfiguration {
  /**
   * @schema CfnBastionModulePropsResourcesBastionLaunchConfiguration#Type
   */
  readonly type?: string;

  /**
   * @schema CfnBastionModulePropsResourcesBastionLaunchConfiguration#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnBastionModulePropsResourcesBastionLaunchConfiguration' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsResourcesBastionLaunchConfiguration(obj: CfnBastionModulePropsResourcesBastionLaunchConfiguration | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnBastionModulePropsResourcesBastionSecurityGroup
 */
export interface CfnBastionModulePropsResourcesBastionSecurityGroup {
  /**
   * @schema CfnBastionModulePropsResourcesBastionSecurityGroup#Type
   */
  readonly type?: string;

  /**
   * @schema CfnBastionModulePropsResourcesBastionSecurityGroup#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnBastionModulePropsResourcesBastionSecurityGroup' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnBastionModulePropsResourcesBastionSecurityGroup(obj: CfnBastionModulePropsResourcesBastionSecurityGroup | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 * A CloudFormation `JFrog::Linux::Bastion::MODULE`
 *
 * @cloudformationResource JFrog::Linux::Bastion::MODULE
 * @stability external
 * @link http://unknown-url
 */
export class CfnBastionModule extends cdk.CfnResource {
  /**
  * The CloudFormation resource type name for this resource class.
  */
  public static readonly CFN_RESOURCE_TYPE_NAME = "JFrog::Linux::Bastion::MODULE";

  /**
   * Resource props.
   */
  public readonly props: CfnBastionModuleProps;


  /**
   * Create a new `JFrog::Linux::Bastion::MODULE`.
   *
   * @param scope - scope in which this resource is defined
   * @param id    - scoped id of the resource
   * @param props - resource properties
   */
  constructor(scope: constructs.Construct, id: string, props: CfnBastionModuleProps) {
    super(scope, id, { type: CfnBastionModule.CFN_RESOURCE_TYPE_NAME, properties: toJson_CfnBastionModuleProps(props)! });

    this.props = props;

  }
}