// Generated by cdk-import
import * as cdk from 'aws-cdk-lib';
import * as constructs from 'constructs';

/**
 * Schema for Module Fragment of type KARTE::EventBridge::DocumentDB::MODULE
 *
 * @schema CfnDocumentDbModuleProps
 */
export interface CfnDocumentDbModuleProps {
  /**
   * @schema CfnDocumentDbModuleProps#Parameters
   */
  readonly parameters?: CfnDocumentDbModulePropsParameters;

  /**
   * @schema CfnDocumentDbModuleProps#Resources
   */
  readonly resources?: CfnDocumentDbModulePropsResources;

}

/**
 * Converts an object of type 'CfnDocumentDbModuleProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDocumentDbModuleProps(obj: CfnDocumentDbModuleProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Parameters': toJson_CfnDocumentDbModulePropsParameters(obj.parameters),
    'Resources': toJson_CfnDocumentDbModulePropsResources(obj.resources),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnDocumentDbModulePropsParameters
 */
export interface CfnDocumentDbModulePropsParameters {
  /**
   * Name of the Amazon EventBridge KARTE Event Source to associate with an Event Bus. For example, aws.partner/karte.io/{AWSAccountID}/{KARTEProjectId}/{AppName}
   *
   * @schema CfnDocumentDbModulePropsParameters#EventSourceName
   */
  readonly eventSourceName?: CfnDocumentDbModulePropsParametersEventSourceName;

  /**
   * Cluster Name
   *
   * @schema CfnDocumentDbModulePropsParameters#ClusterName
   */
  readonly clusterName?: CfnDocumentDbModulePropsParametersClusterName;

  /**
   * Master Username
   *
   * @schema CfnDocumentDbModulePropsParameters#MasterUsername
   */
  readonly masterUsername?: CfnDocumentDbModulePropsParametersMasterUsername;

  /**
   * Master Password
   *
   * @schema CfnDocumentDbModulePropsParameters#MasterUserPassword
   */
  readonly masterUserPassword?: CfnDocumentDbModulePropsParametersMasterUserPassword;

  /**
   * Amazon MemoryDB Security Group Ids
   *
   * @schema CfnDocumentDbModulePropsParameters#SecurityGroupIds
   */
  readonly securityGroupIds?: CfnDocumentDbModulePropsParametersSecurityGroupIds;

  /**
   * Amazon MemoryDB Subnet Ids
   *
   * @schema CfnDocumentDbModulePropsParameters#SubnetIds
   */
  readonly subnetIds?: CfnDocumentDbModulePropsParametersSubnetIds;

  /**
   * Amazon MemoryDB DB Subnet Group Name
   *
   * @schema CfnDocumentDbModulePropsParameters#SubnetGroupName
   */
  readonly subnetGroupName?: CfnDocumentDbModulePropsParametersSubnetGroupName;

  /**
   * The compute and memory capacity of the DB instance.
   *
   * @schema CfnDocumentDbModulePropsParameters#DBInstanceClass
   */
  readonly dbInstanceClass?: CfnDocumentDbModulePropsParametersDbInstanceClass;

  /**
   * Database name of DocumentDB
   *
   * @schema CfnDocumentDbModulePropsParameters#DBName
   */
  readonly dbName?: CfnDocumentDbModulePropsParametersDbName;

  /**
   * Collection name of DocumentDB
   *
   * @schema CfnDocumentDbModulePropsParameters#CollectionName
   */
  readonly collectionName?: CfnDocumentDbModulePropsParametersCollectionName;

}

/**
 * Converts an object of type 'CfnDocumentDbModulePropsParameters' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDocumentDbModulePropsParameters(obj: CfnDocumentDbModulePropsParameters | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'EventSourceName': toJson_CfnDocumentDbModulePropsParametersEventSourceName(obj.eventSourceName),
    'ClusterName': toJson_CfnDocumentDbModulePropsParametersClusterName(obj.clusterName),
    'MasterUsername': toJson_CfnDocumentDbModulePropsParametersMasterUsername(obj.masterUsername),
    'MasterUserPassword': toJson_CfnDocumentDbModulePropsParametersMasterUserPassword(obj.masterUserPassword),
    'SecurityGroupIds': toJson_CfnDocumentDbModulePropsParametersSecurityGroupIds(obj.securityGroupIds),
    'SubnetIds': toJson_CfnDocumentDbModulePropsParametersSubnetIds(obj.subnetIds),
    'SubnetGroupName': toJson_CfnDocumentDbModulePropsParametersSubnetGroupName(obj.subnetGroupName),
    'DBInstanceClass': toJson_CfnDocumentDbModulePropsParametersDbInstanceClass(obj.dbInstanceClass),
    'DBName': toJson_CfnDocumentDbModulePropsParametersDbName(obj.dbName),
    'CollectionName': toJson_CfnDocumentDbModulePropsParametersCollectionName(obj.collectionName),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnDocumentDbModulePropsResources
 */
export interface CfnDocumentDbModulePropsResources {
  /**
   * @schema CfnDocumentDbModulePropsResources#SNSTopic
   */
  readonly snsTopic?: CfnDocumentDbModulePropsResourcesSnsTopic;

  /**
   * @schema CfnDocumentDbModulePropsResources#WriteToDBLambdaFunction
   */
  readonly writeToDbLambdaFunction?: CfnDocumentDbModulePropsResourcesWriteToDbLambdaFunction;

  /**
   * @schema CfnDocumentDbModulePropsResources#LambdaExecutionRole
   */
  readonly lambdaExecutionRole?: CfnDocumentDbModulePropsResourcesLambdaExecutionRole;

  /**
   * @schema CfnDocumentDbModulePropsResources#EventBridgeEventBus
   */
  readonly eventBridgeEventBus?: CfnDocumentDbModulePropsResourcesEventBridgeEventBus;

  /**
   * @schema CfnDocumentDbModulePropsResources#EventBridgeRule
   */
  readonly eventBridgeRule?: CfnDocumentDbModulePropsResourcesEventBridgeRule;

  /**
   * @schema CfnDocumentDbModulePropsResources#EventTopicPolicy
   */
  readonly eventTopicPolicy?: CfnDocumentDbModulePropsResourcesEventTopicPolicy;

  /**
   * @schema CfnDocumentDbModulePropsResources#DocumentDBCluster
   */
  readonly documentDbCluster?: CfnDocumentDbModulePropsResourcesDocumentDbCluster;

  /**
   * @schema CfnDocumentDbModulePropsResources#DocumentDBInstance
   */
  readonly documentDbInstance?: CfnDocumentDbModulePropsResourcesDocumentDbInstance;

}

/**
 * Converts an object of type 'CfnDocumentDbModulePropsResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDocumentDbModulePropsResources(obj: CfnDocumentDbModulePropsResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'SNSTopic': toJson_CfnDocumentDbModulePropsResourcesSnsTopic(obj.snsTopic),
    'WriteToDBLambdaFunction': toJson_CfnDocumentDbModulePropsResourcesWriteToDbLambdaFunction(obj.writeToDbLambdaFunction),
    'LambdaExecutionRole': toJson_CfnDocumentDbModulePropsResourcesLambdaExecutionRole(obj.lambdaExecutionRole),
    'EventBridgeEventBus': toJson_CfnDocumentDbModulePropsResourcesEventBridgeEventBus(obj.eventBridgeEventBus),
    'EventBridgeRule': toJson_CfnDocumentDbModulePropsResourcesEventBridgeRule(obj.eventBridgeRule),
    'EventTopicPolicy': toJson_CfnDocumentDbModulePropsResourcesEventTopicPolicy(obj.eventTopicPolicy),
    'DocumentDBCluster': toJson_CfnDocumentDbModulePropsResourcesDocumentDbCluster(obj.documentDbCluster),
    'DocumentDBInstance': toJson_CfnDocumentDbModulePropsResourcesDocumentDbInstance(obj.documentDbInstance),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Name of the Amazon EventBridge KARTE Event Source to associate with an Event Bus. For example, aws.partner/karte.io/{AWSAccountID}/{KARTEProjectId}/{AppName}
 *
 * @schema CfnDocumentDbModulePropsParametersEventSourceName
 */
export interface CfnDocumentDbModulePropsParametersEventSourceName {
  /**
   * @schema CfnDocumentDbModulePropsParametersEventSourceName#Type
   */
  readonly type: string;

  /**
   * @schema CfnDocumentDbModulePropsParametersEventSourceName#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDocumentDbModulePropsParametersEventSourceName' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDocumentDbModulePropsParametersEventSourceName(obj: CfnDocumentDbModulePropsParametersEventSourceName | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Cluster Name
 *
 * @schema CfnDocumentDbModulePropsParametersClusterName
 */
export interface CfnDocumentDbModulePropsParametersClusterName {
  /**
   * @schema CfnDocumentDbModulePropsParametersClusterName#Type
   */
  readonly type: string;

  /**
   * @schema CfnDocumentDbModulePropsParametersClusterName#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDocumentDbModulePropsParametersClusterName' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDocumentDbModulePropsParametersClusterName(obj: CfnDocumentDbModulePropsParametersClusterName | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Master Username
 *
 * @schema CfnDocumentDbModulePropsParametersMasterUsername
 */
export interface CfnDocumentDbModulePropsParametersMasterUsername {
  /**
   * @schema CfnDocumentDbModulePropsParametersMasterUsername#Type
   */
  readonly type: string;

  /**
   * @schema CfnDocumentDbModulePropsParametersMasterUsername#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDocumentDbModulePropsParametersMasterUsername' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDocumentDbModulePropsParametersMasterUsername(obj: CfnDocumentDbModulePropsParametersMasterUsername | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Master Password
 *
 * @schema CfnDocumentDbModulePropsParametersMasterUserPassword
 */
export interface CfnDocumentDbModulePropsParametersMasterUserPassword {
  /**
   * @schema CfnDocumentDbModulePropsParametersMasterUserPassword#Type
   */
  readonly type: string;

  /**
   * @schema CfnDocumentDbModulePropsParametersMasterUserPassword#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDocumentDbModulePropsParametersMasterUserPassword' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDocumentDbModulePropsParametersMasterUserPassword(obj: CfnDocumentDbModulePropsParametersMasterUserPassword | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Amazon MemoryDB Security Group Ids
 *
 * @schema CfnDocumentDbModulePropsParametersSecurityGroupIds
 */
export interface CfnDocumentDbModulePropsParametersSecurityGroupIds {
  /**
   * @schema CfnDocumentDbModulePropsParametersSecurityGroupIds#Type
   */
  readonly type: string;

  /**
   * @schema CfnDocumentDbModulePropsParametersSecurityGroupIds#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDocumentDbModulePropsParametersSecurityGroupIds' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDocumentDbModulePropsParametersSecurityGroupIds(obj: CfnDocumentDbModulePropsParametersSecurityGroupIds | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Amazon MemoryDB Subnet Ids
 *
 * @schema CfnDocumentDbModulePropsParametersSubnetIds
 */
export interface CfnDocumentDbModulePropsParametersSubnetIds {
  /**
   * @schema CfnDocumentDbModulePropsParametersSubnetIds#Type
   */
  readonly type: string;

  /**
   * @schema CfnDocumentDbModulePropsParametersSubnetIds#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDocumentDbModulePropsParametersSubnetIds' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDocumentDbModulePropsParametersSubnetIds(obj: CfnDocumentDbModulePropsParametersSubnetIds | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Amazon MemoryDB DB Subnet Group Name
 *
 * @schema CfnDocumentDbModulePropsParametersSubnetGroupName
 */
export interface CfnDocumentDbModulePropsParametersSubnetGroupName {
  /**
   * @schema CfnDocumentDbModulePropsParametersSubnetGroupName#Type
   */
  readonly type: string;

  /**
   * @schema CfnDocumentDbModulePropsParametersSubnetGroupName#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDocumentDbModulePropsParametersSubnetGroupName' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDocumentDbModulePropsParametersSubnetGroupName(obj: CfnDocumentDbModulePropsParametersSubnetGroupName | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The compute and memory capacity of the DB instance.
 *
 * @schema CfnDocumentDbModulePropsParametersDbInstanceClass
 */
export interface CfnDocumentDbModulePropsParametersDbInstanceClass {
  /**
   * @schema CfnDocumentDbModulePropsParametersDbInstanceClass#Type
   */
  readonly type: string;

  /**
   * @schema CfnDocumentDbModulePropsParametersDbInstanceClass#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDocumentDbModulePropsParametersDbInstanceClass' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDocumentDbModulePropsParametersDbInstanceClass(obj: CfnDocumentDbModulePropsParametersDbInstanceClass | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Database name of DocumentDB
 *
 * @schema CfnDocumentDbModulePropsParametersDbName
 */
export interface CfnDocumentDbModulePropsParametersDbName {
  /**
   * @schema CfnDocumentDbModulePropsParametersDbName#Type
   */
  readonly type: string;

  /**
   * @schema CfnDocumentDbModulePropsParametersDbName#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDocumentDbModulePropsParametersDbName' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDocumentDbModulePropsParametersDbName(obj: CfnDocumentDbModulePropsParametersDbName | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Collection name of DocumentDB
 *
 * @schema CfnDocumentDbModulePropsParametersCollectionName
 */
export interface CfnDocumentDbModulePropsParametersCollectionName {
  /**
   * @schema CfnDocumentDbModulePropsParametersCollectionName#Type
   */
  readonly type: string;

  /**
   * @schema CfnDocumentDbModulePropsParametersCollectionName#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnDocumentDbModulePropsParametersCollectionName' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDocumentDbModulePropsParametersCollectionName(obj: CfnDocumentDbModulePropsParametersCollectionName | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnDocumentDbModulePropsResourcesSnsTopic
 */
export interface CfnDocumentDbModulePropsResourcesSnsTopic {
  /**
   * @schema CfnDocumentDbModulePropsResourcesSnsTopic#Type
   */
  readonly type?: string;

  /**
   * @schema CfnDocumentDbModulePropsResourcesSnsTopic#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnDocumentDbModulePropsResourcesSnsTopic' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDocumentDbModulePropsResourcesSnsTopic(obj: CfnDocumentDbModulePropsResourcesSnsTopic | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnDocumentDbModulePropsResourcesWriteToDbLambdaFunction
 */
export interface CfnDocumentDbModulePropsResourcesWriteToDbLambdaFunction {
  /**
   * @schema CfnDocumentDbModulePropsResourcesWriteToDbLambdaFunction#Type
   */
  readonly type?: string;

  /**
   * @schema CfnDocumentDbModulePropsResourcesWriteToDbLambdaFunction#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnDocumentDbModulePropsResourcesWriteToDbLambdaFunction' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDocumentDbModulePropsResourcesWriteToDbLambdaFunction(obj: CfnDocumentDbModulePropsResourcesWriteToDbLambdaFunction | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnDocumentDbModulePropsResourcesLambdaExecutionRole
 */
export interface CfnDocumentDbModulePropsResourcesLambdaExecutionRole {
  /**
   * @schema CfnDocumentDbModulePropsResourcesLambdaExecutionRole#Type
   */
  readonly type?: string;

  /**
   * @schema CfnDocumentDbModulePropsResourcesLambdaExecutionRole#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnDocumentDbModulePropsResourcesLambdaExecutionRole' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDocumentDbModulePropsResourcesLambdaExecutionRole(obj: CfnDocumentDbModulePropsResourcesLambdaExecutionRole | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnDocumentDbModulePropsResourcesEventBridgeEventBus
 */
export interface CfnDocumentDbModulePropsResourcesEventBridgeEventBus {
  /**
   * @schema CfnDocumentDbModulePropsResourcesEventBridgeEventBus#Type
   */
  readonly type?: string;

  /**
   * @schema CfnDocumentDbModulePropsResourcesEventBridgeEventBus#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnDocumentDbModulePropsResourcesEventBridgeEventBus' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDocumentDbModulePropsResourcesEventBridgeEventBus(obj: CfnDocumentDbModulePropsResourcesEventBridgeEventBus | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnDocumentDbModulePropsResourcesEventBridgeRule
 */
export interface CfnDocumentDbModulePropsResourcesEventBridgeRule {
  /**
   * @schema CfnDocumentDbModulePropsResourcesEventBridgeRule#Type
   */
  readonly type?: string;

  /**
   * @schema CfnDocumentDbModulePropsResourcesEventBridgeRule#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnDocumentDbModulePropsResourcesEventBridgeRule' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDocumentDbModulePropsResourcesEventBridgeRule(obj: CfnDocumentDbModulePropsResourcesEventBridgeRule | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnDocumentDbModulePropsResourcesEventTopicPolicy
 */
export interface CfnDocumentDbModulePropsResourcesEventTopicPolicy {
  /**
   * @schema CfnDocumentDbModulePropsResourcesEventTopicPolicy#Type
   */
  readonly type?: string;

  /**
   * @schema CfnDocumentDbModulePropsResourcesEventTopicPolicy#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnDocumentDbModulePropsResourcesEventTopicPolicy' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDocumentDbModulePropsResourcesEventTopicPolicy(obj: CfnDocumentDbModulePropsResourcesEventTopicPolicy | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnDocumentDbModulePropsResourcesDocumentDbCluster
 */
export interface CfnDocumentDbModulePropsResourcesDocumentDbCluster {
  /**
   * @schema CfnDocumentDbModulePropsResourcesDocumentDbCluster#Type
   */
  readonly type?: string;

  /**
   * @schema CfnDocumentDbModulePropsResourcesDocumentDbCluster#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnDocumentDbModulePropsResourcesDocumentDbCluster' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDocumentDbModulePropsResourcesDocumentDbCluster(obj: CfnDocumentDbModulePropsResourcesDocumentDbCluster | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnDocumentDbModulePropsResourcesDocumentDbInstance
 */
export interface CfnDocumentDbModulePropsResourcesDocumentDbInstance {
  /**
   * @schema CfnDocumentDbModulePropsResourcesDocumentDbInstance#Type
   */
  readonly type?: string;

  /**
   * @schema CfnDocumentDbModulePropsResourcesDocumentDbInstance#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnDocumentDbModulePropsResourcesDocumentDbInstance' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDocumentDbModulePropsResourcesDocumentDbInstance(obj: CfnDocumentDbModulePropsResourcesDocumentDbInstance | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 * A CloudFormation `KARTE::EventBridge::DocumentDB::MODULE`
 *
 * @cloudformationResource KARTE::EventBridge::DocumentDB::MODULE
 * @stability external
 * @link http://unknown-url
 */
export class CfnDocumentDbModule extends cdk.CfnResource {
  /**
  * The CloudFormation resource type name for this resource class.
  */
  public static readonly CFN_RESOURCE_TYPE_NAME = "KARTE::EventBridge::DocumentDB::MODULE";

  /**
   * Resource props.
   */
  public readonly props: CfnDocumentDbModuleProps;


  /**
   * Create a new `KARTE::EventBridge::DocumentDB::MODULE`.
   *
   * @param scope - scope in which this resource is defined
   * @param id    - scoped id of the resource
   * @param props - resource properties
   */
  constructor(scope: constructs.Construct, id: string, props: CfnDocumentDbModuleProps) {
    super(scope, id, { type: CfnDocumentDbModule.CFN_RESOURCE_TYPE_NAME, properties: toJson_CfnDocumentDbModuleProps(props)! });

    this.props = props;

  }
}