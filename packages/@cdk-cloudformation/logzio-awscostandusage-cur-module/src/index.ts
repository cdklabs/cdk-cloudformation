// Generated by cdk-import
import * as cdk from 'aws-cdk-lib';
import * as constructs from 'constructs';

/**
 * Schema for Module Fragment of type Logzio::awsCostAndUsage::cur::MODULE
 *
 * @schema CfnCurModuleProps
 */
export interface CfnCurModuleProps {
  /**
   * @schema CfnCurModuleProps#Parameters
   */
  readonly parameters?: CfnCurModulePropsParameters;

  /**
   * @schema CfnCurModuleProps#Resources
   */
  readonly resources?: CfnCurModulePropsResources;

}

/**
 * Converts an object of type 'CfnCurModuleProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnCurModuleProps(obj: CfnCurModuleProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Parameters': toJson_CfnCurModulePropsParameters(obj.parameters),
    'Resources': toJson_CfnCurModulePropsResources(obj.resources),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnCurModulePropsParameters
 */
export interface CfnCurModulePropsParameters {
  /**
   * The name for the bucket which will contain the report files. The bucket name must contain only lowercase letters, numbers, periods (.), and dashes (-), and must follow Amazon S3 bucket restrictions and limitations.
   *
   * @schema CfnCurModulePropsParameters#S3BucketName
   */
  readonly s3BucketName?: CfnCurModulePropsParametersS3BucketName;

  /**
   * The name of report that you want to create. The name must be unique, is case sensitive and can't include spaces.
   *
   * @schema CfnCurModulePropsParameters#ReportName
   */
  readonly reportName?: CfnCurModulePropsParametersReportName;

  /**
   * The prefix that AWS adds to the report name when AWS delivers the report. Your prefix can't include spaces.
   *
   * @schema CfnCurModulePropsParameters#ReportPrefix
   */
  readonly reportPrefix?: CfnCurModulePropsParametersReportPrefix;

  /**
   * The granularity of the line items in the report. (Enabling hourly reports does not mean that a new report is generated every hour. It means that data in the report is aggregated with a granularity of one hour.)
   *
   * @schema CfnCurModulePropsParameters#ReportTimeUnit
   */
  readonly reportTimeUnit?: CfnCurModulePropsParametersReportTimeUnit;

  /**
   * Choose INCLUDE if you want AWS to include additional details about individual resources IDs in the report (This might significantly increase report size and might affect performance. AWS Lambda can run for up to 15 minutes with up to 10240 MB, and the process time for the whole file must end within this timeframe.), or DON'T INCLUDE otherwise.
   *
   * @schema CfnCurModulePropsParameters#ReportAdditionalSchemaElements
   */
  readonly reportAdditionalSchemaElements?: CfnCurModulePropsParametersReportAdditionalSchemaElements;

  /**
   * The Logz.io listener URL fot your region. (For more details, see the regions page:  https://docs.logz.io/user-guide/accounts/account-region.html)
   *
   * @schema CfnCurModulePropsParameters#LogzioURL
   */
  readonly logzioUrl?: CfnCurModulePropsParametersLogzioUrl;

  /**
   * Your Logz.io logs token. (Can be retrieved from the Manage Token page.)
   *
   * @schema CfnCurModulePropsParameters#LogzioToken
   */
  readonly logzioToken?: CfnCurModulePropsParametersLogzioToken;

  /**
   * The amount of memory available to the function at runtime. Increasing the function memory also increases its CPU allocation. The value can be multiple of 1 MB. Minimum value is 128 MB and Maximum value is 10240 MB. We recommend to start with 1024 MB.
   *
   * @schema CfnCurModulePropsParameters#LambdaMemorySize
   */
  readonly lambdaMemorySize?: CfnCurModulePropsParametersLambdaMemorySize;

  /**
   * The amount of time that Lambda allows a function to run before stopping it. Minimum value is 1 second and Maximum value is 900 seconds. We recommend to start with 300 seconds (5 minutes).
   *
   * @schema CfnCurModulePropsParameters#LambdaTimeout
   */
  readonly lambdaTimeout?: CfnCurModulePropsParametersLambdaTimeout;

  /**
   * The scheduling expression that determines when and how often the Lambda function runs. We recommend to start with 10 hour rate.
   *
   * @schema CfnCurModulePropsParameters#CloudWatchEventScheduleExpression
   */
  readonly cloudWatchEventScheduleExpression?: CfnCurModulePropsParametersCloudWatchEventScheduleExpression;

}

/**
 * Converts an object of type 'CfnCurModulePropsParameters' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnCurModulePropsParameters(obj: CfnCurModulePropsParameters | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'S3BucketName': toJson_CfnCurModulePropsParametersS3BucketName(obj.s3BucketName),
    'ReportName': toJson_CfnCurModulePropsParametersReportName(obj.reportName),
    'ReportPrefix': toJson_CfnCurModulePropsParametersReportPrefix(obj.reportPrefix),
    'ReportTimeUnit': toJson_CfnCurModulePropsParametersReportTimeUnit(obj.reportTimeUnit),
    'ReportAdditionalSchemaElements': toJson_CfnCurModulePropsParametersReportAdditionalSchemaElements(obj.reportAdditionalSchemaElements),
    'LogzioURL': toJson_CfnCurModulePropsParametersLogzioUrl(obj.logzioUrl),
    'LogzioToken': toJson_CfnCurModulePropsParametersLogzioToken(obj.logzioToken),
    'LambdaMemorySize': toJson_CfnCurModulePropsParametersLambdaMemorySize(obj.lambdaMemorySize),
    'LambdaTimeout': toJson_CfnCurModulePropsParametersLambdaTimeout(obj.lambdaTimeout),
    'CloudWatchEventScheduleExpression': toJson_CfnCurModulePropsParametersCloudWatchEventScheduleExpression(obj.cloudWatchEventScheduleExpression),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnCurModulePropsResources
 */
export interface CfnCurModulePropsResources {
  /**
   * @schema CfnCurModulePropsResources#CUR
   */
  readonly cur?: CfnCurModulePropsResourcesCur;

  /**
   * @schema CfnCurModulePropsResources#S3BucketPolicy
   */
  readonly s3BucketPolicy?: CfnCurModulePropsResourcesS3BucketPolicy;

  /**
   * @schema CfnCurModulePropsResources#S3Bucket
   */
  readonly s3Bucket?: CfnCurModulePropsResourcesS3Bucket;

  /**
   * @schema CfnCurModulePropsResources#LambdaFunction
   */
  readonly lambdaFunction?: CfnCurModulePropsResourcesLambdaFunction;

  /**
   * @schema CfnCurModulePropsResources#IAMRole
   */
  readonly iamRole?: CfnCurModulePropsResourcesIamRole;

  /**
   * @schema CfnCurModulePropsResources#EventRule
   */
  readonly eventRule?: CfnCurModulePropsResourcesEventRule;

  /**
   * @schema CfnCurModulePropsResources#LambdaPermission
   */
  readonly lambdaPermission?: CfnCurModulePropsResourcesLambdaPermission;

}

/**
 * Converts an object of type 'CfnCurModulePropsResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnCurModulePropsResources(obj: CfnCurModulePropsResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'CUR': toJson_CfnCurModulePropsResourcesCur(obj.cur),
    'S3BucketPolicy': toJson_CfnCurModulePropsResourcesS3BucketPolicy(obj.s3BucketPolicy),
    'S3Bucket': toJson_CfnCurModulePropsResourcesS3Bucket(obj.s3Bucket),
    'LambdaFunction': toJson_CfnCurModulePropsResourcesLambdaFunction(obj.lambdaFunction),
    'IAMRole': toJson_CfnCurModulePropsResourcesIamRole(obj.iamRole),
    'EventRule': toJson_CfnCurModulePropsResourcesEventRule(obj.eventRule),
    'LambdaPermission': toJson_CfnCurModulePropsResourcesLambdaPermission(obj.lambdaPermission),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The name for the bucket which will contain the report files. The bucket name must contain only lowercase letters, numbers, periods (.), and dashes (-), and must follow Amazon S3 bucket restrictions and limitations.
 *
 * @schema CfnCurModulePropsParametersS3BucketName
 */
export interface CfnCurModulePropsParametersS3BucketName {
  /**
   * @schema CfnCurModulePropsParametersS3BucketName#Type
   */
  readonly type: string;

  /**
   * @schema CfnCurModulePropsParametersS3BucketName#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnCurModulePropsParametersS3BucketName' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnCurModulePropsParametersS3BucketName(obj: CfnCurModulePropsParametersS3BucketName | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The name of report that you want to create. The name must be unique, is case sensitive and can't include spaces.
 *
 * @schema CfnCurModulePropsParametersReportName
 */
export interface CfnCurModulePropsParametersReportName {
  /**
   * @schema CfnCurModulePropsParametersReportName#Type
   */
  readonly type: string;

  /**
   * @schema CfnCurModulePropsParametersReportName#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnCurModulePropsParametersReportName' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnCurModulePropsParametersReportName(obj: CfnCurModulePropsParametersReportName | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The prefix that AWS adds to the report name when AWS delivers the report. Your prefix can't include spaces.
 *
 * @schema CfnCurModulePropsParametersReportPrefix
 */
export interface CfnCurModulePropsParametersReportPrefix {
  /**
   * @schema CfnCurModulePropsParametersReportPrefix#Type
   */
  readonly type: string;

  /**
   * @schema CfnCurModulePropsParametersReportPrefix#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnCurModulePropsParametersReportPrefix' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnCurModulePropsParametersReportPrefix(obj: CfnCurModulePropsParametersReportPrefix | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The granularity of the line items in the report. (Enabling hourly reports does not mean that a new report is generated every hour. It means that data in the report is aggregated with a granularity of one hour.)
 *
 * @schema CfnCurModulePropsParametersReportTimeUnit
 */
export interface CfnCurModulePropsParametersReportTimeUnit {
  /**
   * @schema CfnCurModulePropsParametersReportTimeUnit#Type
   */
  readonly type: string;

  /**
   * @schema CfnCurModulePropsParametersReportTimeUnit#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnCurModulePropsParametersReportTimeUnit' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnCurModulePropsParametersReportTimeUnit(obj: CfnCurModulePropsParametersReportTimeUnit | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Choose INCLUDE if you want AWS to include additional details about individual resources IDs in the report (This might significantly increase report size and might affect performance. AWS Lambda can run for up to 15 minutes with up to 10240 MB, and the process time for the whole file must end within this timeframe.), or DON'T INCLUDE otherwise.
 *
 * @schema CfnCurModulePropsParametersReportAdditionalSchemaElements
 */
export interface CfnCurModulePropsParametersReportAdditionalSchemaElements {
  /**
   * @schema CfnCurModulePropsParametersReportAdditionalSchemaElements#Type
   */
  readonly type: string;

  /**
   * @schema CfnCurModulePropsParametersReportAdditionalSchemaElements#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnCurModulePropsParametersReportAdditionalSchemaElements' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnCurModulePropsParametersReportAdditionalSchemaElements(obj: CfnCurModulePropsParametersReportAdditionalSchemaElements | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The Logz.io listener URL fot your region. (For more details, see the regions page:  https://docs.logz.io/user-guide/accounts/account-region.html)
 *
 * @schema CfnCurModulePropsParametersLogzioUrl
 */
export interface CfnCurModulePropsParametersLogzioUrl {
  /**
   * @schema CfnCurModulePropsParametersLogzioUrl#Type
   */
  readonly type: string;

  /**
   * @schema CfnCurModulePropsParametersLogzioUrl#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnCurModulePropsParametersLogzioUrl' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnCurModulePropsParametersLogzioUrl(obj: CfnCurModulePropsParametersLogzioUrl | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Your Logz.io logs token. (Can be retrieved from the Manage Token page.)
 *
 * @schema CfnCurModulePropsParametersLogzioToken
 */
export interface CfnCurModulePropsParametersLogzioToken {
  /**
   * @schema CfnCurModulePropsParametersLogzioToken#Type
   */
  readonly type: string;

  /**
   * @schema CfnCurModulePropsParametersLogzioToken#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnCurModulePropsParametersLogzioToken' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnCurModulePropsParametersLogzioToken(obj: CfnCurModulePropsParametersLogzioToken | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The amount of memory available to the function at runtime. Increasing the function memory also increases its CPU allocation. The value can be multiple of 1 MB. Minimum value is 128 MB and Maximum value is 10240 MB. We recommend to start with 1024 MB.
 *
 * @schema CfnCurModulePropsParametersLambdaMemorySize
 */
export interface CfnCurModulePropsParametersLambdaMemorySize {
  /**
   * @schema CfnCurModulePropsParametersLambdaMemorySize#Type
   */
  readonly type: string;

  /**
   * @schema CfnCurModulePropsParametersLambdaMemorySize#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnCurModulePropsParametersLambdaMemorySize' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnCurModulePropsParametersLambdaMemorySize(obj: CfnCurModulePropsParametersLambdaMemorySize | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The amount of time that Lambda allows a function to run before stopping it. Minimum value is 1 second and Maximum value is 900 seconds. We recommend to start with 300 seconds (5 minutes).
 *
 * @schema CfnCurModulePropsParametersLambdaTimeout
 */
export interface CfnCurModulePropsParametersLambdaTimeout {
  /**
   * @schema CfnCurModulePropsParametersLambdaTimeout#Type
   */
  readonly type: string;

  /**
   * @schema CfnCurModulePropsParametersLambdaTimeout#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnCurModulePropsParametersLambdaTimeout' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnCurModulePropsParametersLambdaTimeout(obj: CfnCurModulePropsParametersLambdaTimeout | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The scheduling expression that determines when and how often the Lambda function runs. We recommend to start with 10 hour rate.
 *
 * @schema CfnCurModulePropsParametersCloudWatchEventScheduleExpression
 */
export interface CfnCurModulePropsParametersCloudWatchEventScheduleExpression {
  /**
   * @schema CfnCurModulePropsParametersCloudWatchEventScheduleExpression#Type
   */
  readonly type: string;

  /**
   * @schema CfnCurModulePropsParametersCloudWatchEventScheduleExpression#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnCurModulePropsParametersCloudWatchEventScheduleExpression' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnCurModulePropsParametersCloudWatchEventScheduleExpression(obj: CfnCurModulePropsParametersCloudWatchEventScheduleExpression | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnCurModulePropsResourcesCur
 */
export interface CfnCurModulePropsResourcesCur {
  /**
   * @schema CfnCurModulePropsResourcesCur#Type
   */
  readonly type?: string;

  /**
   * @schema CfnCurModulePropsResourcesCur#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnCurModulePropsResourcesCur' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnCurModulePropsResourcesCur(obj: CfnCurModulePropsResourcesCur | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnCurModulePropsResourcesS3BucketPolicy
 */
export interface CfnCurModulePropsResourcesS3BucketPolicy {
  /**
   * @schema CfnCurModulePropsResourcesS3BucketPolicy#Type
   */
  readonly type?: string;

  /**
   * @schema CfnCurModulePropsResourcesS3BucketPolicy#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnCurModulePropsResourcesS3BucketPolicy' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnCurModulePropsResourcesS3BucketPolicy(obj: CfnCurModulePropsResourcesS3BucketPolicy | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnCurModulePropsResourcesS3Bucket
 */
export interface CfnCurModulePropsResourcesS3Bucket {
  /**
   * @schema CfnCurModulePropsResourcesS3Bucket#Type
   */
  readonly type?: string;

  /**
   * @schema CfnCurModulePropsResourcesS3Bucket#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnCurModulePropsResourcesS3Bucket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnCurModulePropsResourcesS3Bucket(obj: CfnCurModulePropsResourcesS3Bucket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnCurModulePropsResourcesLambdaFunction
 */
export interface CfnCurModulePropsResourcesLambdaFunction {
  /**
   * @schema CfnCurModulePropsResourcesLambdaFunction#Type
   */
  readonly type?: string;

  /**
   * @schema CfnCurModulePropsResourcesLambdaFunction#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnCurModulePropsResourcesLambdaFunction' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnCurModulePropsResourcesLambdaFunction(obj: CfnCurModulePropsResourcesLambdaFunction | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnCurModulePropsResourcesIamRole
 */
export interface CfnCurModulePropsResourcesIamRole {
  /**
   * @schema CfnCurModulePropsResourcesIamRole#Type
   */
  readonly type?: string;

  /**
   * @schema CfnCurModulePropsResourcesIamRole#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnCurModulePropsResourcesIamRole' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnCurModulePropsResourcesIamRole(obj: CfnCurModulePropsResourcesIamRole | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnCurModulePropsResourcesEventRule
 */
export interface CfnCurModulePropsResourcesEventRule {
  /**
   * @schema CfnCurModulePropsResourcesEventRule#Type
   */
  readonly type?: string;

  /**
   * @schema CfnCurModulePropsResourcesEventRule#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnCurModulePropsResourcesEventRule' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnCurModulePropsResourcesEventRule(obj: CfnCurModulePropsResourcesEventRule | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnCurModulePropsResourcesLambdaPermission
 */
export interface CfnCurModulePropsResourcesLambdaPermission {
  /**
   * @schema CfnCurModulePropsResourcesLambdaPermission#Type
   */
  readonly type?: string;

  /**
   * @schema CfnCurModulePropsResourcesLambdaPermission#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnCurModulePropsResourcesLambdaPermission' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnCurModulePropsResourcesLambdaPermission(obj: CfnCurModulePropsResourcesLambdaPermission | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 * A CloudFormation `Logzio::awsCostAndUsage::cur::MODULE`
 *
 * @cloudformationResource Logzio::awsCostAndUsage::cur::MODULE
 * @stability external
 * @link http://unknown-url
 */
export class CfnCurModule extends cdk.CfnResource {
  /**
  * The CloudFormation resource type name for this resource class.
  */
  public static readonly CFN_RESOURCE_TYPE_NAME = "Logzio::awsCostAndUsage::cur::MODULE";

  /**
   * Resource props.
   */
  public readonly props: CfnCurModuleProps;


  /**
   * Create a new `Logzio::awsCostAndUsage::cur::MODULE`.
   *
   * @param scope - scope in which this resource is defined
   * @param id    - scoped id of the resource
   * @param props - resource properties
   */
  constructor(scope: constructs.Construct, id: string, props: CfnCurModuleProps) {
    super(scope, id, { type: CfnCurModule.CFN_RESOURCE_TYPE_NAME, properties: toJson_CfnCurModuleProps(props)! });

    this.props = props;

  }
}