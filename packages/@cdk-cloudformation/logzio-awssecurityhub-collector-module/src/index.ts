// Generated by cdk-import
import * as cdk from 'aws-cdk-lib';
import * as constructs from 'constructs';

/**
 * Schema for Module Fragment of type logzio::awsSecurityHub::collector::MODULE
 *
 * @schema CfnCollectorModuleProps
 */
export interface CfnCollectorModuleProps {
  /**
   * @schema CfnCollectorModuleProps#Parameters
   */
  readonly parameters?: CfnCollectorModulePropsParameters;

  /**
   * @schema CfnCollectorModuleProps#Resources
   */
  readonly resources?: CfnCollectorModulePropsResources;

}

/**
 * Converts an object of type 'CfnCollectorModuleProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnCollectorModuleProps(obj: CfnCollectorModuleProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Parameters': toJson_CfnCollectorModulePropsParameters(obj.parameters),
    'Resources': toJson_CfnCollectorModulePropsResources(obj.resources),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnCollectorModulePropsParameters
 */
export interface CfnCollectorModulePropsParameters {
  /**
   * Your Logz.io operations token
   *
   * @schema CfnCollectorModulePropsParameters#logzioOperationsToken
   */
  readonly logzioOperationsToken?: CfnCollectorModulePropsParametersLogzioOperationsToken;

  /**
   * Your Logz.io listener with port 8070/8071. For example https://listener.logz.io:8071
   *
   * @schema CfnCollectorModulePropsParameters#logzioListener
   */
  readonly logzioListener?: CfnCollectorModulePropsParametersLogzioListener;

  /**
   * Log level for the function
   *
   * @schema CfnCollectorModulePropsParameters#logzioLogLevel
   */
  readonly logzioLogLevel?: CfnCollectorModulePropsParametersLogzioLogLevel;

}

/**
 * Converts an object of type 'CfnCollectorModulePropsParameters' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnCollectorModulePropsParameters(obj: CfnCollectorModulePropsParameters | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'logzioOperationsToken': toJson_CfnCollectorModulePropsParametersLogzioOperationsToken(obj.logzioOperationsToken),
    'logzioListener': toJson_CfnCollectorModulePropsParametersLogzioListener(obj.logzioListener),
    'logzioLogLevel': toJson_CfnCollectorModulePropsParametersLogzioLogLevel(obj.logzioLogLevel),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnCollectorModulePropsResources
 */
export interface CfnCollectorModulePropsResources {
  /**
   * @schema CfnCollectorModulePropsResources#logzioSecurityHubCollector
   */
  readonly logzioSecurityHubCollector?: CfnCollectorModulePropsResourcesLogzioSecurityHubCollector;

  /**
   * @schema CfnCollectorModulePropsResources#eventRule
   */
  readonly eventRule?: CfnCollectorModulePropsResourcesEventRule;

  /**
   * @schema CfnCollectorModulePropsResources#lambdaPermissions
   */
  readonly lambdaPermissions?: CfnCollectorModulePropsResourcesLambdaPermissions;

  /**
   * @schema CfnCollectorModulePropsResources#lambdaIamRole
   */
  readonly lambdaIamRole?: CfnCollectorModulePropsResourcesLambdaIamRole;

}

/**
 * Converts an object of type 'CfnCollectorModulePropsResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnCollectorModulePropsResources(obj: CfnCollectorModulePropsResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'logzioSecurityHubCollector': toJson_CfnCollectorModulePropsResourcesLogzioSecurityHubCollector(obj.logzioSecurityHubCollector),
    'eventRule': toJson_CfnCollectorModulePropsResourcesEventRule(obj.eventRule),
    'lambdaPermissions': toJson_CfnCollectorModulePropsResourcesLambdaPermissions(obj.lambdaPermissions),
    'lambdaIamRole': toJson_CfnCollectorModulePropsResourcesLambdaIamRole(obj.lambdaIamRole),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Your Logz.io operations token
 *
 * @schema CfnCollectorModulePropsParametersLogzioOperationsToken
 */
export interface CfnCollectorModulePropsParametersLogzioOperationsToken {
  /**
   * @schema CfnCollectorModulePropsParametersLogzioOperationsToken#Type
   */
  readonly type: string;

  /**
   * @schema CfnCollectorModulePropsParametersLogzioOperationsToken#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnCollectorModulePropsParametersLogzioOperationsToken' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnCollectorModulePropsParametersLogzioOperationsToken(obj: CfnCollectorModulePropsParametersLogzioOperationsToken | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Your Logz.io listener with port 8070/8071. For example https://listener.logz.io:8071
 *
 * @schema CfnCollectorModulePropsParametersLogzioListener
 */
export interface CfnCollectorModulePropsParametersLogzioListener {
  /**
   * @schema CfnCollectorModulePropsParametersLogzioListener#Type
   */
  readonly type: string;

  /**
   * @schema CfnCollectorModulePropsParametersLogzioListener#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnCollectorModulePropsParametersLogzioListener' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnCollectorModulePropsParametersLogzioListener(obj: CfnCollectorModulePropsParametersLogzioListener | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Log level for the function
 *
 * @schema CfnCollectorModulePropsParametersLogzioLogLevel
 */
export interface CfnCollectorModulePropsParametersLogzioLogLevel {
  /**
   * @schema CfnCollectorModulePropsParametersLogzioLogLevel#Type
   */
  readonly type: string;

  /**
   * @schema CfnCollectorModulePropsParametersLogzioLogLevel#Description
   */
  readonly description: string;

}

/**
 * Converts an object of type 'CfnCollectorModulePropsParametersLogzioLogLevel' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnCollectorModulePropsParametersLogzioLogLevel(obj: CfnCollectorModulePropsParametersLogzioLogLevel | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Description': obj.description,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnCollectorModulePropsResourcesLogzioSecurityHubCollector
 */
export interface CfnCollectorModulePropsResourcesLogzioSecurityHubCollector {
  /**
   * @schema CfnCollectorModulePropsResourcesLogzioSecurityHubCollector#Type
   */
  readonly type?: string;

  /**
   * @schema CfnCollectorModulePropsResourcesLogzioSecurityHubCollector#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnCollectorModulePropsResourcesLogzioSecurityHubCollector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnCollectorModulePropsResourcesLogzioSecurityHubCollector(obj: CfnCollectorModulePropsResourcesLogzioSecurityHubCollector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnCollectorModulePropsResourcesEventRule
 */
export interface CfnCollectorModulePropsResourcesEventRule {
  /**
   * @schema CfnCollectorModulePropsResourcesEventRule#Type
   */
  readonly type?: string;

  /**
   * @schema CfnCollectorModulePropsResourcesEventRule#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnCollectorModulePropsResourcesEventRule' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnCollectorModulePropsResourcesEventRule(obj: CfnCollectorModulePropsResourcesEventRule | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnCollectorModulePropsResourcesLambdaPermissions
 */
export interface CfnCollectorModulePropsResourcesLambdaPermissions {
  /**
   * @schema CfnCollectorModulePropsResourcesLambdaPermissions#Type
   */
  readonly type?: string;

  /**
   * @schema CfnCollectorModulePropsResourcesLambdaPermissions#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnCollectorModulePropsResourcesLambdaPermissions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnCollectorModulePropsResourcesLambdaPermissions(obj: CfnCollectorModulePropsResourcesLambdaPermissions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnCollectorModulePropsResourcesLambdaIamRole
 */
export interface CfnCollectorModulePropsResourcesLambdaIamRole {
  /**
   * @schema CfnCollectorModulePropsResourcesLambdaIamRole#Type
   */
  readonly type?: string;

  /**
   * @schema CfnCollectorModulePropsResourcesLambdaIamRole#Properties
   */
  readonly properties?: any;

}

/**
 * Converts an object of type 'CfnCollectorModulePropsResourcesLambdaIamRole' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnCollectorModulePropsResourcesLambdaIamRole(obj: CfnCollectorModulePropsResourcesLambdaIamRole | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Type': obj.type,
    'Properties': obj.properties,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 * A CloudFormation `logzio::awsSecurityHub::collector::MODULE`
 *
 * @cloudformationResource logzio::awsSecurityHub::collector::MODULE
 * @stability external
 * @link http://unknown-url
 */
export class CfnCollectorModule extends cdk.CfnResource {
  /**
  * The CloudFormation resource type name for this resource class.
  */
  public static readonly CFN_RESOURCE_TYPE_NAME = "logzio::awsSecurityHub::collector::MODULE";

  /**
   * Resource props.
   */
  public readonly props: CfnCollectorModuleProps;


  /**
   * Create a new `logzio::awsSecurityHub::collector::MODULE`.
   *
   * @param scope - scope in which this resource is defined
   * @param id    - scoped id of the resource
   * @param props - resource properties
   */
  constructor(scope: constructs.Construct, id: string, props: CfnCollectorModuleProps) {
    super(scope, id, { type: CfnCollectorModule.CFN_RESOURCE_TYPE_NAME, properties: toJson_CfnCollectorModuleProps(props)! });

    this.props = props;

  }
}