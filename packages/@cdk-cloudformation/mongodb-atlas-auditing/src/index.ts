// Generated by cdk-import
import * as cdk from 'aws-cdk-lib';
import * as constructs from 'constructs';

/**
 * Returns and edits database auditing settings for MongoDB Cloud projects.
 *
 * @schema CfnAuditingProps
 */
export interface CfnAuditingProps {
  /**
   * @schema CfnAuditingProps#ApiKeys
   */
  readonly apiKeys: ApiKeyDefinition;

  /**
   * Flag that indicates whether someone set auditing to track successful authentications. This only applies to the `"atype" : "authCheck"` audit filter. Setting this parameter to `true` degrades cluster performance.
   *
   * @schema CfnAuditingProps#AuditAuthorizationSuccess
   */
  readonly auditAuthorizationSuccess?: boolean;

  /**
   * JSON document that specifies which events to record. Escape any characters that may prevent parsing, such as single or double quotes, using a backslash (`\`), for more information about audit filters refer to https://www.mongodb.com/docs/manual/tutorial/configure-audit-filters/.
   *
   * @schema CfnAuditingProps#AuditFilter
   */
  readonly auditFilter?: string;

  /**
   * Human-readable label that displays how to configure the audit filter.
   *
   * @schema CfnAuditingProps#ConfigurationType
   */
  readonly configurationType?: CfnAuditingPropsConfigurationType;

  /**
   * Unique 24-hexadecimal digit string that identifies your project.
   *
   * @schema CfnAuditingProps#GroupId
   */
  readonly groupId: string;

}

/**
 * Converts an object of type 'CfnAuditingProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnAuditingProps(obj: CfnAuditingProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'ApiKeys': toJson_ApiKeyDefinition(obj.apiKeys),
    'AuditAuthorizationSuccess': obj.auditAuthorizationSuccess,
    'AuditFilter': obj.auditFilter,
    'ConfigurationType': obj.configurationType,
    'GroupId': obj.groupId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema apiKeyDefinition
 */
export interface ApiKeyDefinition {
  /**
   * @schema apiKeyDefinition#PrivateKey
   */
  readonly privateKey?: string;

  /**
   * @schema apiKeyDefinition#PublicKey
   */
  readonly publicKey?: string;

}

/**
 * Converts an object of type 'ApiKeyDefinition' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ApiKeyDefinition(obj: ApiKeyDefinition | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'PrivateKey': obj.privateKey,
    'PublicKey': obj.publicKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Human-readable label that displays how to configure the audit filter.
 *
 * @schema CfnAuditingPropsConfigurationType
 */
export enum CfnAuditingPropsConfigurationType {
  /** FILTER_BUILDER */
  FILTER_BUILDER = "FILTER_BUILDER",
  /** FILTER_JSON */
  FILTER_JSON = "FILTER_JSON",
  /** NONE */
  NONE = "NONE",
}


/**
 * A CloudFormation `MongoDB::Atlas::Auditing`
 *
 * @cloudformationResource MongoDB::Atlas::Auditing
 * @stability external
 * @link https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git
 */
export class CfnAuditing extends cdk.CfnResource {
  /**
  * The CloudFormation resource type name for this resource class.
  */
  public static readonly CFN_RESOURCE_TYPE_NAME = "MongoDB::Atlas::Auditing";

  /**
   * Resource props.
   */
  public readonly props: CfnAuditingProps;


  /**
   * Create a new `MongoDB::Atlas::Auditing`.
   *
   * @param scope - scope in which this resource is defined
   * @param id    - scoped id of the resource
   * @param props - resource properties
   */
  constructor(scope: constructs.Construct, id: string, props: CfnAuditingProps) {
    super(scope, id, { type: CfnAuditing.CFN_RESOURCE_TYPE_NAME, properties: toJson_CfnAuditingProps(props)! });

    this.props = props;

  }
}