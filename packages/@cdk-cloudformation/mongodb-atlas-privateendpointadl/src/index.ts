// Generated by cdk-import
import * as cdk from 'aws-cdk-lib';
import * as constructs from 'constructs';

/**
 * Adds one private endpoint for Federated Database Instances and Online Archives to the specified projects. To use this resource, the requesting API Key must have the Project Atlas Admin or Project Charts Admin roles. This resource doesn't require the API Key to have an Access List.
 *
 * @schema CfnPrivateEndpointAdlProps
 */
export interface CfnPrivateEndpointAdlProps {
  /**
   * Unique 24-hexadecimal digit string that identifies your project.
   *
   * @schema CfnPrivateEndpointAdlProps#GroupId
   */
  readonly groupId: string;

  /**
   * @schema CfnPrivateEndpointAdlProps#ApiKeys
   */
  readonly apiKeys?: ApiKeyDefinition;

  /**
   * Human-readable string to associate with this private endpoint.
   *
   * @schema CfnPrivateEndpointAdlProps#Comment
   */
  readonly comment?: string;

  /**
   * Human-readable label that identifies the cloud service provider. Atlas Data Lake supports Amazon Web Services only.
   *
   * @schema CfnPrivateEndpointAdlProps#Provider
   */
  readonly provider: string;

  /**
   * Human-readable label that identifies the resource type associated with this private endpoint.
   *
   * @schema CfnPrivateEndpointAdlProps#Type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'CfnPrivateEndpointAdlProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnPrivateEndpointAdlProps(obj: CfnPrivateEndpointAdlProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'GroupId': obj.groupId,
    'ApiKeys': toJson_ApiKeyDefinition(obj.apiKeys),
    'Comment': obj.comment,
    'Provider': obj.provider,
    'Type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema apiKeyDefinition
 */
export interface ApiKeyDefinition {
  /**
   * @schema apiKeyDefinition#PrivateKey
   */
  readonly privateKey?: string;

  /**
   * @schema apiKeyDefinition#PublicKey
   */
  readonly publicKey?: string;

}

/**
 * Converts an object of type 'ApiKeyDefinition' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ApiKeyDefinition(obj: ApiKeyDefinition | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'PrivateKey': obj.privateKey,
    'PublicKey': obj.publicKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 * A CloudFormation `MongoDB::Atlas::PrivateEndpointADL`
 *
 * @cloudformationResource MongoDB::Atlas::PrivateEndpointADL
 * @stability external
 * @link https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git
 */
export class CfnPrivateEndpointAdl extends cdk.CfnResource {
  /**
  * The CloudFormation resource type name for this resource class.
  */
  public static readonly CFN_RESOURCE_TYPE_NAME = "MongoDB::Atlas::PrivateEndpointADL";

  /**
   * Resource props.
   */
  public readonly props: CfnPrivateEndpointAdlProps;

  /**
   * Attribute `MongoDB::Atlas::PrivateEndpointADL.EndpointId`
   * @link https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git
   */
  public readonly attrEndpointId: string;

  /**
   * Create a new `MongoDB::Atlas::PrivateEndpointADL`.
   *
   * @param scope - scope in which this resource is defined
   * @param id    - scoped id of the resource
   * @param props - resource properties
   */
  constructor(scope: constructs.Construct, id: string, props: CfnPrivateEndpointAdlProps) {
    super(scope, id, { type: CfnPrivateEndpointAdl.CFN_RESOURCE_TYPE_NAME, properties: toJson_CfnPrivateEndpointAdlProps(props)! });

    this.props = props;

    this.attrEndpointId = cdk.Token.asString(this.getAtt('EndpointId'));
  }
}