// Generated by cdk-import
import * as cdk from 'aws-cdk-lib';
import * as constructs from 'constructs';

/**
 * Returns, adds, and edits collections of clusters and users in MongoDB Cloud.
 *
 * @schema CfnProjectInvitationProps
 */
export interface CfnProjectInvitationProps {
  /**
   * @schema CfnProjectInvitationProps#ApiKeys
   */
  readonly apiKeys?: ApiKeyDefinition;

  /**
   * Unique 24-hexadecimal digit string that identifies your project.
   *
   * @schema CfnProjectInvitationProps#ProjectId
   */
  readonly projectId?: string;

  /**
   * Number of documents returned in this response.
   *
   * @schema CfnProjectInvitationProps#TotalCount
   */
  readonly totalCount?: number;

  /**
   * Number of the page that displays the current set of the total objects that the response returns.
   *
   * @schema CfnProjectInvitationProps#PageNum
   */
  readonly pageNum?: number;

  /**
   * Unique 24-hexadecimal digit string that identifies the invitation.
   *
   * @schema CfnProjectInvitationProps#InvitationId
   */
  readonly invitationId?: string;

  /**
   * One or more organization or project level roles to assign to the MongoDB Cloud user.
   *
   * @schema CfnProjectInvitationProps#Roles
   */
  readonly roles?: CfnProjectInvitationPropsRoles[];

  /**
   * Email address of the user account invited to this project.
   *
   * @schema CfnProjectInvitationProps#Username
   */
  readonly username?: string;

}

/**
 * Converts an object of type 'CfnProjectInvitationProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnProjectInvitationProps(obj: CfnProjectInvitationProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'ApiKeys': toJson_ApiKeyDefinition(obj.apiKeys),
    'ProjectId': obj.projectId,
    'TotalCount': obj.totalCount,
    'PageNum': obj.pageNum,
    'InvitationId': obj.invitationId,
    'Roles': obj.roles?.map(y => y),
    'Username': obj.username,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema apiKeyDefinition
 */
export interface ApiKeyDefinition {
  /**
   * @schema apiKeyDefinition#PrivateKey
   */
  readonly privateKey?: string;

  /**
   * @schema apiKeyDefinition#PublicKey
   */
  readonly publicKey?: string;

}

/**
 * Converts an object of type 'ApiKeyDefinition' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ApiKeyDefinition(obj: ApiKeyDefinition | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'PrivateKey': obj.privateKey,
    'PublicKey': obj.publicKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnProjectInvitationPropsRoles
 */
export enum CfnProjectInvitationPropsRoles {
  /** GROUP_CLUSTER_MANAGER */
  GROUP_CLUSTER_MANAGER = "GROUP_CLUSTER_MANAGER",
  /** GROUP_DATA_ACCESS_ADMIN */
  GROUP_DATA_ACCESS_ADMIN = "GROUP_DATA_ACCESS_ADMIN",
  /** GROUP_DATA_ACCESS_READ_ONLY */
  GROUP_DATA_ACCESS_READ_ONLY = "GROUP_DATA_ACCESS_READ_ONLY",
  /** GROUP_DATA_ACCESS_READ_WRITE */
  GROUP_DATA_ACCESS_READ_WRITE = "GROUP_DATA_ACCESS_READ_WRITE",
  /** GROUP_OWNER */
  GROUP_OWNER = "GROUP_OWNER",
  /** GROUP_READ_ONLY */
  GROUP_READ_ONLY = "GROUP_READ_ONLY",
}


/**
 * A CloudFormation `MongoDB::Atlas::ProjectInvitation`
 *
 * @cloudformationResource MongoDB::Atlas::ProjectInvitation
 * @stability external
 * @link https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git
 */
export class CfnProjectInvitation extends cdk.CfnResource {
  /**
  * The CloudFormation resource type name for this resource class.
  */
  public static readonly CFN_RESOURCE_TYPE_NAME = "MongoDB::Atlas::ProjectInvitation";

  /**
   * Resource props.
   */
  public readonly props: CfnProjectInvitationProps;

  /**
   * Attribute `MongoDB::Atlas::ProjectInvitation.ExpiresAt`
   * @link https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git
   */
  public readonly attrExpiresAt: string;
  /**
   * Attribute `MongoDB::Atlas::ProjectInvitation.Id`
   * @link https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git
   */
  public readonly attrId: string;
  /**
   * Attribute `MongoDB::Atlas::ProjectInvitation.CreatedAt`
   * @link https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git
   */
  public readonly attrCreatedAt: string;
  /**
   * Attribute `MongoDB::Atlas::ProjectInvitation.InviterUsername`
   * @link https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git
   */
  public readonly attrInviterUsername: string;

  /**
   * Create a new `MongoDB::Atlas::ProjectInvitation`.
   *
   * @param scope - scope in which this resource is defined
   * @param id    - scoped id of the resource
   * @param props - resource properties
   */
  constructor(scope: constructs.Construct, id: string, props: CfnProjectInvitationProps) {
    super(scope, id, { type: CfnProjectInvitation.CFN_RESOURCE_TYPE_NAME, properties: toJson_CfnProjectInvitationProps(props)! });

    this.props = props;

    this.attrExpiresAt = cdk.Token.asString(this.getAtt('ExpiresAt'));
    this.attrId = cdk.Token.asString(this.getAtt('Id'));
    this.attrCreatedAt = cdk.Token.asString(this.getAtt('CreatedAt'));
    this.attrInviterUsername = cdk.Token.asString(this.getAtt('InviterUsername'));
  }
}