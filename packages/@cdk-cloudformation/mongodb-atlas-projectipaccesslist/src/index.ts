// Generated by cdk-import
import * as cdk from '@aws-cdk/core';

/**
 * An example resource schema demonstrating some basic constructs and validation rules.
 *
 * @schema CfnProjectipaccesslistProps
 */
export interface CfnProjectipaccesslistProps {
  /**
   * @schema CfnProjectipaccesslistProps#AccessList
   */
  readonly accessList: AccessListDefinition[];

  /**
   * @schema CfnProjectipaccesslistProps#ApiKeys
   */
  readonly apiKeys: ApiKeyDefinition;

  /**
   * The unique identifier for the project to which you want to add one or more ip access list entries.
   *
   * @schema CfnProjectipaccesslistProps#ProjectId
   */
  readonly projectId: string;

  /**
   * The unique identifier for the Project ip access list rules.
   *
   * @schema CfnProjectipaccesslistProps#TotalCount
   */
  readonly totalCount?: number;

}

/**
 * Converts an object of type 'CfnProjectipaccesslistProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnProjectipaccesslistProps(obj: CfnProjectipaccesslistProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'AccessList': obj.accessList?.map(y => toJson_AccessListDefinition(y)),
    'ApiKeys': toJson_ApiKeyDefinition(obj.apiKeys),
    'ProjectId': obj.projectId,
    'TotalCount': obj.totalCount,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema accessListDefinition
 */
export interface AccessListDefinition {
  /**
   * ID of the AWS security group to allow access. Mutually exclusive with CIDRBlock and IPAddress.
   *
   * @schema accessListDefinition#AwsSecurityGroup
   */
  readonly awsSecurityGroup?: string;

  /**
   * Accessable entry in Classless Inter-Domain Routing (CIDR) notation. Mutually exclusive with ipAddress and AwsSecurityGroup.
   *
   * @schema accessListDefinition#CIDRBlock
   */
  readonly cidrBlock?: string;

  /**
   * Comment associated with the ip access list entry.
   *
   * @schema accessListDefinition#Comment
   */
  readonly comment?: string;

  /**
   * Accessable IP address. Mutually exclusive with CIDRBlock and AwsSecurityGroup.
   *
   * @schema accessListDefinition#IPAddress
   */
  readonly ipAddress?: string;

  /**
   * The unique identifier for the project to which you want to add one or more ip access list entries.
   *
   * @schema accessListDefinition#ProjectId
   */
  readonly projectId?: string;

}

/**
 * Converts an object of type 'AccessListDefinition' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessListDefinition(obj: AccessListDefinition | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'AwsSecurityGroup': obj.awsSecurityGroup,
    'CIDRBlock': obj.cidrBlock,
    'Comment': obj.comment,
    'IPAddress': obj.ipAddress,
    'ProjectId': obj.projectId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema apiKeyDefinition
 */
export interface ApiKeyDefinition {
  /**
   * @schema apiKeyDefinition#PrivateKey
   */
  readonly privateKey?: string;

  /**
   * @schema apiKeyDefinition#PublicKey
   */
  readonly publicKey?: string;

}

/**
 * Converts an object of type 'ApiKeyDefinition' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ApiKeyDefinition(obj: ApiKeyDefinition | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'PrivateKey': obj.privateKey,
    'PublicKey': obj.publicKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 * A CloudFormation `MongoDB::Atlas::ProjectIpAccessList`
 *
 * @cloudformationResource MongoDB::Atlas::ProjectIpAccessList
 * @stability external
 * @link https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git
 */
export class CfnProjectipaccesslist extends cdk.CfnResource {
  /**
  * The CloudFormation resource type name for this resource class.
  */
  public static readonly CFN_RESOURCE_TYPE_NAME = "MongoDB::Atlas::ProjectIpAccessList";

  /**
   * `MongoDB::Atlas::ProjectIpAccessList.AccessList`
   * @link https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git
   */
  public readonly accessList: accessListDefinition[];
  /**
   * `MongoDB::Atlas::ProjectIpAccessList.ApiKeys`
   * @link https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git
   */
  public readonly apiKeys: apiKeyDefinition;
  /**
   * `MongoDB::Atlas::ProjectIpAccessList.ProjectId`
   * The unique identifier for the project to which you want to add one or more ip access list entries.
   * @link https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git
   */
  public readonly projectId: string;
  /**
   * Attribute `MongoDB::Atlas::ProjectIpAccessList.Id`
   * @link https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git
   */
  public readonly attrId: string;

  /**
   * Create a new `MongoDB::Atlas::ProjectIpAccessList`.
   *
   * @param scope - scope in which this resource is defined
   * @param id    - scoped id of the resource
   * @param props - resource properties
   */
  constructor(scope: cdk.Construct, id: string, props: CfnProjectipaccesslistProps) {
    super(scope, id, { type: CfnProjectipaccesslist.CFN_RESOURCE_TYPE_NAME, properties: toJson_CfnProjectipaccesslistProps(props)! });

    this.accessList = props.accessList;
    this.apiKeys = props.apiKeys;
    this.projectId = props.projectId;
    this.attrId = cdk.Token.asString(this.getAtt('Id'));
  }
}