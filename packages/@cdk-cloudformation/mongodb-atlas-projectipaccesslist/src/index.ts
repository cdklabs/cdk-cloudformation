// Generated by cdk-import
import * as cdk from 'aws-cdk-lib';
import * as constructs from 'constructs';

/**
 * Returns, adds, edits, and removes network access limits to database deployments in MongoDB Cloud.
 *
 * @schema CfnProjectIpAccessListProps
 */
export interface CfnProjectIpAccessListProps {
  /**
   * @schema CfnProjectIpAccessListProps#AccessList
   */
  readonly accessList: AccessListDefinition[];

  /**
   * @schema CfnProjectIpAccessListProps#ApiKeys
   */
  readonly apiKeys: ApiKeyDefinition;

  /**
   * Unique 24-hexadecimal digit string that identifies your project.
   *
   * @schema CfnProjectIpAccessListProps#ProjectId
   */
  readonly projectId: string;

  /**
   * @schema CfnProjectIpAccessListProps#ListOptions
   */
  readonly listOptions?: ListOptions;

}

/**
 * Converts an object of type 'CfnProjectIpAccessListProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnProjectIpAccessListProps(obj: CfnProjectIpAccessListProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'AccessList': obj.accessList?.map(y => toJson_AccessListDefinition(y)),
    'ApiKeys': toJson_ApiKeyDefinition(obj.apiKeys),
    'ProjectId': obj.projectId,
    'ListOptions': toJson_ListOptions(obj.listOptions),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema accessListDefinition
 */
export interface AccessListDefinition {
  /**
   * Date and time after which MongoDB Cloud deletes the temporary access list entry. This parameter expresses its value in the ISO 8601 timestamp format in UTC and can include the time zone designation. The date must be later than the current date but no later than one week after you submit this request. The resource returns this parameter if you specified an expiration date when creating this IP access list entry.
   *
   * @schema accessListDefinition#DeleteAfterDate
   */
  readonly deleteAfterDate?: string;

  /**
   * Unique string of the Amazon Web Services (AWS) security group that you want to add to the project's IP access list. Your IP access list entry can be one awsSecurityGroup, one cidrBlock, or one ipAddress. You must configure Virtual Private Connection (VPC) peering for your project before you can add an AWS security group to an IP access list. You cannot set AWS security groups as temporary access list entries. Don't set this parameter if you set cidrBlock or ipAddress.
   *
   * @schema accessListDefinition#AwsSecurityGroup
   */
  readonly awsSecurityGroup?: string;

  /**
   * Range of IP addresses in Classless Inter-Domain Routing (CIDR) notation that you want to add to the project's IP access list. Your IP access list entry can be one awsSecurityGroup, one cidrBlock, or one ipAddress. Don't set this parameter if you set awsSecurityGroup or ipAddress
   *
   * @schema accessListDefinition#CIDRBlock
   */
  readonly cidrBlock?: string;

  /**
   * Remark that explains the purpose or scope of this IP access list entry.
   *
   * @schema accessListDefinition#Comment
   */
  readonly comment?: string;

  /**
   * IP address that you want to add to the project's IP access list. Your IP access list entry can be one awsSecurityGroup, one cidrBlock, or one ipAddress. Don't set this parameter if you set awsSecurityGroup or cidrBlock.
   *
   * @schema accessListDefinition#IPAddress
   */
  readonly ipAddress?: string;

  /**
   * Unique 24-hexadecimal digit string that identifies your project.
   *
   * @schema accessListDefinition#ProjectId
   */
  readonly projectId?: string;

}

/**
 * Converts an object of type 'AccessListDefinition' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessListDefinition(obj: AccessListDefinition | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'DeleteAfterDate': obj.deleteAfterDate,
    'AwsSecurityGroup': obj.awsSecurityGroup,
    'CIDRBlock': obj.cidrBlock,
    'Comment': obj.comment,
    'IPAddress': obj.ipAddress,
    'ProjectId': obj.projectId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema apiKeyDefinition
 */
export interface ApiKeyDefinition {
  /**
   * @schema apiKeyDefinition#PrivateKey
   */
  readonly privateKey?: string;

  /**
   * @schema apiKeyDefinition#PublicKey
   */
  readonly publicKey?: string;

}

/**
 * Converts an object of type 'ApiKeyDefinition' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ApiKeyDefinition(obj: ApiKeyDefinition | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'PrivateKey': obj.privateKey,
    'PublicKey': obj.publicKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema listOptions
 */
export interface ListOptions {
  /**
   * Number of the page that displays the current set of the total objects that the response returns.
   *
   * @schema listOptions#PageNum
   */
  readonly pageNum?: number;

  /**
   * Number of items that the response returns per page.
   *
   * @schema listOptions#ItemsPerPage
   */
  readonly itemsPerPage?: number;

  /**
   * Flag that indicates whether the response returns the total number of items (totalCount) in the response.
   *
   * @schema listOptions#IncludeCount
   */
  readonly includeCount?: boolean;

}

/**
 * Converts an object of type 'ListOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ListOptions(obj: ListOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'PageNum': obj.pageNum,
    'ItemsPerPage': obj.itemsPerPage,
    'IncludeCount': obj.includeCount,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 * A CloudFormation `MongoDB::Atlas::ProjectIpAccessList`
 *
 * @cloudformationResource MongoDB::Atlas::ProjectIpAccessList
 * @stability external
 * @link https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git
 */
export class CfnProjectIpAccessList extends cdk.CfnResource {
  /**
  * The CloudFormation resource type name for this resource class.
  */
  public static readonly CFN_RESOURCE_TYPE_NAME = "MongoDB::Atlas::ProjectIpAccessList";

  /**
   * Resource props.
   */
  public readonly props: CfnProjectIpAccessListProps;

  /**
   * Attribute `MongoDB::Atlas::ProjectIpAccessList.Id`
   * @link https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git
   */
  public readonly attrId: string;
  /**
   * Attribute `MongoDB::Atlas::ProjectIpAccessList.TotalCount`
   * @link https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git
   */
  public readonly attrTotalCount: number;

  /**
   * Create a new `MongoDB::Atlas::ProjectIpAccessList`.
   *
   * @param scope - scope in which this resource is defined
   * @param id    - scoped id of the resource
   * @param props - resource properties
   */
  constructor(scope: constructs.Construct, id: string, props: CfnProjectIpAccessListProps) {
    super(scope, id, { type: CfnProjectIpAccessList.CFN_RESOURCE_TYPE_NAME, properties: toJson_CfnProjectIpAccessListProps(props)! });

    this.props = props;

    this.attrId = cdk.Token.asString(this.getAtt('Id'));
    this.attrTotalCount = cdk.Token.asNumber(this.getAtt('TotalCount'));
  }
}