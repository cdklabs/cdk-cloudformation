// Generated by cdk-import
import * as cdk from 'aws-cdk-lib';
import * as constructs from 'constructs';

/**
 * Manage New Relic AlertsPolicy
 *
 * @schema CfnAlertsPolicyProps
 */
export interface CfnAlertsPolicyProps {
  /**
   * Account ID the alerts policy should belong to.
   *
   * @schema CfnAlertsPolicyProps#AccountId
   */
  readonly accountId: number;

  /**
   * @schema CfnAlertsPolicyProps#AlertsPolicy
   */
  readonly alertsPolicy: AlertsPolicyInput;

}

/**
 * Converts an object of type 'CfnAlertsPolicyProps' to JSON representation.
 */
/* eslint-disable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */
export function toJson_CfnAlertsPolicyProps(obj: CfnAlertsPolicyProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'AccountId': obj.accountId,
    'AlertsPolicy': toJson_AlertsPolicyInput(obj.alertsPolicy),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */

/**
 * @schema AlertsPolicyInput
 */
export interface AlertsPolicyInput {
  /**
   * Name of the alerts policy.
   *
   * @schema AlertsPolicyInput#Name
   */
  readonly name?: string;

  /**
   * @schema AlertsPolicyInput#IncidentPreference
   */
  readonly incidentPreference?: AlertsPolicyInputIncidentPreference;

}

/**
 * Converts an object of type 'AlertsPolicyInput' to JSON representation.
 */
/* eslint-disable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */
export function toJson_AlertsPolicyInput(obj: AlertsPolicyInput | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Name': obj.name,
    'IncidentPreference': obj.incidentPreference,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */

/**
 * @schema AlertsPolicyInputIncidentPreference
 */
export enum AlertsPolicyInputIncidentPreference {
  /** PER_CONDITION */
  PER_UNDERSCORE_CONDITION = "PER_CONDITION",
  /** PER_CONDITION_AND_TARGET */
  PER_UNDERSCORE_CONDITION_UNDERSCORE_AND_UNDERSCORE_TARGET = "PER_CONDITION_AND_TARGET",
  /** PER_POLICY */
  PER_UNDERSCORE_POLICY = "PER_POLICY",
}


/**
 * A CloudFormation `NewRelic::Alert::AlertsPolicy`
 *
 * @cloudformationResource NewRelic::Alert::AlertsPolicy
 * @stability external
 * @link https://github.com/aws-ia/cloudformation-newrelic-resource-providers.git
 */
export class CfnAlertsPolicy extends cdk.CfnResource {
  /**
  * The CloudFormation resource type name for this resource class.
  */
  public static readonly CFN_RESOURCE_TYPE_NAME = "NewRelic::Alert::AlertsPolicy";

  /**
   * Resource props.
   */
  public readonly props: CfnAlertsPolicyProps;

  /**
   * Attribute `NewRelic::Alert::AlertsPolicy.AlertsPolicyId`
   * @link https://github.com/aws-ia/cloudformation-newrelic-resource-providers.git
   */
  public readonly attrAlertsPolicyId: number;

  /**
   * Create a new `NewRelic::Alert::AlertsPolicy`.
   *
   * @param scope - scope in which this resource is defined
   * @param id    - scoped id of the resource
   * @param props - resource properties
   */
  constructor(scope: constructs.Construct, id: string, props: CfnAlertsPolicyProps) {
    super(scope, id, { type: CfnAlertsPolicy.CFN_RESOURCE_TYPE_NAME, properties: toJson_CfnAlertsPolicyProps(props)! });

    this.props = props;

    this.attrAlertsPolicyId = cdk.Token.asNumber(this.getAtt('AlertsPolicyId'));
  }
}