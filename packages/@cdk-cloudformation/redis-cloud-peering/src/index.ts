// Generated by cdk-import
import * as cdk from 'aws-cdk-lib';
import * as constructs from 'constructs';

/**
 * CloudFormation template for Subscription Peering.
 *
 * @schema CfnPeeringProps
 */
export interface CfnPeeringProps {
  /**
   * [Required]. The Base URL where the API calls are sent.
   *
   * @schema CfnPeeringProps#BaseUrl
   */
  readonly baseUrl?: string;

  /**
   * [Required]. The ID of the Pro Subscription that will make a peering connection. Example: 163199
   *
   * @schema CfnPeeringProps#SubscriptionID
   */
  readonly subscriptionId: string;

  /**
   * [Optional]. Cloud provider. Example: AWS. Default: 'AWS'
   *
   * @schema CfnPeeringProps#Provider
   */
  readonly provider?: string;

  /**
   * [Required for AWS]. Deployment region as defined by cloud provider. Example: us-east-1
   *
   * @schema CfnPeeringProps#Region
   */
  readonly region?: string;

  /**
   * [Required for AWS]. AWS Account uid. Example: 178919255286
   *
   * @schema CfnPeeringProps#AwsAccountId
   */
  readonly awsAccountId?: string;

  /**
   * [Required for AWS]. VPC uid. Example: vpc-00e1a8cdca658ce8c
   *
   * @schema CfnPeeringProps#VpcId
   */
  readonly vpcId?: string;

  /**
   * [Optional]. VPC CIDR. Example:  '10.10.10.0/24'
   *
   * @schema CfnPeeringProps#VpcCidr
   */
  readonly vpcCidr?: string;

  /**
   * [Optional]. List of VPC CIDRs. Example: '[10.10.10.0/24,10.10.20.0/24]'
   *
   * @schema CfnPeeringProps#VpcCidrs
   */
  readonly vpcCidrs?: string[];

  /**
   * [Required for GCP]. VPC project uid.
   *
   * @schema CfnPeeringProps#VpcProjectUid
   */
  readonly vpcProjectUid?: string;

  /**
   * [Required for GCP]. VPC network name.
   *
   * @schema CfnPeeringProps#VpcNetworkName
   */
  readonly vpcNetworkName?: string;

}

/**
 * Converts an object of type 'CfnPeeringProps' to JSON representation.
 */
/* eslint-disable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */
export function toJson_CfnPeeringProps(obj: CfnPeeringProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'BaseUrl': obj.baseUrl,
    'SubscriptionID': obj.subscriptionId,
    'Provider': obj.provider,
    'Region': obj.region,
    'AwsAccountId': obj.awsAccountId,
    'VpcId': obj.vpcId,
    'VpcCidr': obj.vpcCidr,
    'VpcCidrs': obj.vpcCidrs?.map(y => y),
    'VpcProjectUid': obj.vpcProjectUid,
    'VpcNetworkName': obj.vpcNetworkName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */


/**
 * A CloudFormation `Redis::Cloud::Peering`
 *
 * @cloudformationResource Redis::Cloud::Peering
 * @stability external
 * @link http://unknown-url
 */
export class CfnPeering extends cdk.CfnResource {
  /**
  * The CloudFormation resource type name for this resource class.
  */
  public static readonly CFN_RESOURCE_TYPE_NAME = "Redis::Cloud::Peering";

  /**
   * Resource props.
   */
  public readonly props: CfnPeeringProps;

  /**
   * Attribute `Redis::Cloud::Peering.PeeringID`
   * @link http://unknown-url
   */
  public readonly attrPeeringID: string;

  /**
   * Create a new `Redis::Cloud::Peering`.
   *
   * @param scope - scope in which this resource is defined
   * @param id    - scoped id of the resource
   * @param props - resource properties
   */
  constructor(scope: constructs.Construct, id: string, props: CfnPeeringProps) {
    super(scope, id, { type: CfnPeering.CFN_RESOURCE_TYPE_NAME, properties: toJson_CfnPeeringProps(props)! });

    this.props = props;

    this.attrPeeringID = cdk.Token.asString(this.getAtt('PeeringID'));
  }
}