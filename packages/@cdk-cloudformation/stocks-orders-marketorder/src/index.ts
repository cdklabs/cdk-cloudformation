// Generated by cdk-import
import * as cdk from 'aws-cdk-lib';
import * as constructs from 'constructs';

/**
 * A market order is a request to buy or sell a security at the currently available market price. The order to buy a security will be submitted on resource creation and the security will be sold (or the unfilled order cancelled) on resource deletion. Supported exchanges are AMEX, ARCA, BATS, NYSE, NASDAQ and NYSEARCA.
 *
 * @schema CfnMarketOrderProps
 */
export interface CfnMarketOrderProps {
  /**
   * The number of shares to buy.
   *
   * @schema CfnMarketOrderProps#Quantity
   */
  readonly quantity: number;

  /**
   * The stock symbol to buy.
   *
   * @schema CfnMarketOrderProps#Symbol
   */
  readonly symbol: string;

  /**
   * A fields for notes about the order. This field may also be used to force a resource update in order to retrieve the latest market value of the position.
   *
   * @schema CfnMarketOrderProps#Notes
   */
  readonly notes?: string;

}

/**
 * Converts an object of type 'CfnMarketOrderProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnMarketOrderProps(obj: CfnMarketOrderProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Quantity': obj.quantity,
    'Symbol': obj.symbol,
    'Notes': obj.notes,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 * A CloudFormation `Stocks::Orders::MarketOrder`
 *
 * @cloudformationResource Stocks::Orders::MarketOrder
 * @stability external
 * @link https://github.com/iann0036/cfn-types/tree/master/stocks-orders-marketorder
 */
export class CfnMarketOrder extends cdk.CfnResource {
  /**
  * The CloudFormation resource type name for this resource class.
  */
  public static readonly CFN_RESOURCE_TYPE_NAME = "Stocks::Orders::MarketOrder";

  /**
   * Resource props.
   */
  public readonly props: CfnMarketOrderProps;

  /**
   * Attribute `Stocks::Orders::MarketOrder.Id`
   * @link https://github.com/iann0036/cfn-types/tree/master/stocks-orders-marketorder
   */
  public readonly attrId: string;
  /**
   * Attribute `Stocks::Orders::MarketOrder.FilledQuantity`
   * @link https://github.com/iann0036/cfn-types/tree/master/stocks-orders-marketorder
   */
  public readonly attrFilledQuantity: string;
  /**
   * Attribute `Stocks::Orders::MarketOrder.FilledValue`
   * @link https://github.com/iann0036/cfn-types/tree/master/stocks-orders-marketorder
   */
  public readonly attrFilledValue: string;
  /**
   * Attribute `Stocks::Orders::MarketOrder.CurrentValue`
   * @link https://github.com/iann0036/cfn-types/tree/master/stocks-orders-marketorder
   */
  public readonly attrCurrentValue: string;
  /**
   * Attribute `Stocks::Orders::MarketOrder.FilledAt`
   * @link https://github.com/iann0036/cfn-types/tree/master/stocks-orders-marketorder
   */
  public readonly attrFilledAt: string;

  /**
   * Create a new `Stocks::Orders::MarketOrder`.
   *
   * @param scope - scope in which this resource is defined
   * @param id    - scoped id of the resource
   * @param props - resource properties
   */
  constructor(scope: constructs.Construct, id: string, props: CfnMarketOrderProps) {
    super(scope, id, { type: CfnMarketOrder.CFN_RESOURCE_TYPE_NAME, properties: toJson_CfnMarketOrderProps(props)! });

    this.props = props;

    this.attrId = cdk.Token.asString(this.getAtt('Id'));
    this.attrFilledQuantity = cdk.Token.asString(this.getAtt('FilledQuantity'));
    this.attrFilledValue = cdk.Token.asString(this.getAtt('FilledValue'));
    this.attrCurrentValue = cdk.Token.asString(this.getAtt('CurrentValue'));
    this.attrFilledAt = cdk.Token.asString(this.getAtt('FilledAt'));
  }
}