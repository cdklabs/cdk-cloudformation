// Generated by cdk-import
import * as cdk from 'aws-cdk-lib';
import * as constructs from 'constructs';

/**
 * Generates an API key to access a SvectorDB serverless vector database, sign up at https://svectordb.com to get started
 *
 * @schema CfnApiKeyProps
 */
export interface CfnApiKeyProps {
  /**
   * (Advanced use cases only) - Custom endpoint URL for contacting the SvectorDB API
   *
   * @schema CfnApiKeyProps#EndpointUrl
   */
  readonly endpointUrl?: string;

  /**
   * Integration ID
   *
   * @schema CfnApiKeyProps#IntegrationId
   */
  readonly integrationId: string;

  /**
   * Database ID
   *
   * @schema CfnApiKeyProps#DatabaseId
   */
  readonly databaseId: string;

}

/**
 * Converts an object of type 'CfnApiKeyProps' to JSON representation.
 */
/* eslint-disable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */
export function toJson_CfnApiKeyProps(obj: CfnApiKeyProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'EndpointUrl': obj.endpointUrl,
    'IntegrationId': obj.integrationId,
    'DatabaseId': obj.databaseId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */


/**
 * A CloudFormation `SvectorDB::VectorDatabase::ApiKey`
 *
 * @cloudformationResource SvectorDB::VectorDatabase::ApiKey
 * @stability external
 * @link http://unknown-url
 */
export class CfnApiKey extends cdk.CfnResource {
  /**
  * The CloudFormation resource type name for this resource class.
  */
  public static readonly CFN_RESOURCE_TYPE_NAME = "SvectorDB::VectorDatabase::ApiKey";

  /**
   * Resource props.
   */
  public readonly props: CfnApiKeyProps;

  /**
   * Attribute `SvectorDB::VectorDatabase::ApiKey.ApiKey`
   * @link http://unknown-url
   */
  public readonly attrApiKey: string;

  /**
   * Create a new `SvectorDB::VectorDatabase::ApiKey`.
   *
   * @param scope - scope in which this resource is defined
   * @param id    - scoped id of the resource
   * @param props - resource properties
   */
  constructor(scope: constructs.Construct, id: string, props: CfnApiKeyProps) {
    super(scope, id, { type: CfnApiKey.CFN_RESOURCE_TYPE_NAME, properties: toJson_CfnApiKeyProps(props)! });

    this.props = props;

    this.attrApiKey = cdk.Token.asString(this.getAtt('ApiKey'));
  }
}