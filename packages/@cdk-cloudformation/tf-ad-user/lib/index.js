"use strict";
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.CfnUser = exports.toJson_CfnUserProps = void 0;
const JSII_RTTI_SYMBOL_1 = Symbol.for("jsii.rtti");
// Generated by cdk-import
const cdk = require("@aws-cdk/core");
/**
 * Converts an object of type 'CfnUserProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
function toJson_CfnUserProps(obj) {
    if (obj === undefined) {
        return undefined;
    }
    const result = {
        'CannotChangePassword': obj.cannotChangePassword,
        'City': obj.city,
        'Company': obj.company,
        'Container': obj.container,
        'Country': obj.country,
        'CustomAttributes': obj.customAttributes,
        'Department': obj.department,
        'Description': obj.description,
        'DisplayName': obj.displayName,
        'Division': obj.division,
        'EmailAddress': obj.emailAddress,
        'EmployeeId': obj.employeeId,
        'EmployeeNumber': obj.employeeNumber,
        'Enabled': obj.enabled,
        'Fax': obj.fax,
        'GivenName': obj.givenName,
        'HomeDirectory': obj.homeDirectory,
        'HomeDrive': obj.homeDrive,
        'HomePage': obj.homePage,
        'HomePhone': obj.homePhone,
        'InitialPassword': obj.initialPassword,
        'Initials': obj.initials,
        'MobilePhone': obj.mobilePhone,
        'Office': obj.office,
        'OfficePhone': obj.officePhone,
        'Organization': obj.organization,
        'OtherName': obj.otherName,
        'PasswordNeverExpires': obj.passwordNeverExpires,
        'PoBox': obj.poBox,
        'PostalCode': obj.postalCode,
        'PrincipalName': obj.principalName,
        'SamAccountName': obj.samAccountName,
        'SmartCardLogonRequired': obj.smartCardLogonRequired,
        'State': obj.state,
        'StreetAddress': obj.streetAddress,
        'Surname': obj.surname,
        'Title': obj.title,
        'TrustedForDelegation': obj.trustedForDelegation,
    };
    // filter undefined values
    return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
exports.toJson_CfnUserProps = toJson_CfnUserProps;
/**
 * A CloudFormation `TF::AD::User`.
 *
 * @external
 * @cloudformationResource TF::AD::User
 * @link https://github.com/iann0036/cfn-tf-custom-types.git
 */
class CfnUser extends cdk.CfnResource {
    /**
     * Create a new `TF::AD::User`.
     *
     * @param scope - scope in which this resource is defined.
     * @param id - scoped id of the resource.
     * @param props - resource properties.
     * @external
     */
    constructor(scope, id, props) {
        super(scope, id, { type: CfnUser.CFN_RESOURCE_TYPE_NAME, properties: toJson_CfnUserProps(props) });
        this.cannotChangePassword = props.cannotChangePassword;
        this.city = props.city;
        this.company = props.company;
        this.container = props.container;
        this.country = props.country;
        this.customAttributes = props.customAttributes;
        this.department = props.department;
        this.description = props.description;
        this.displayName = props.displayName;
        this.division = props.division;
        this.emailAddress = props.emailAddress;
        this.employeeId = props.employeeId;
        this.employeeNumber = props.employeeNumber;
        this.enabled = props.enabled;
        this.fax = props.fax;
        this.givenName = props.givenName;
        this.homeDirectory = props.homeDirectory;
        this.homeDrive = props.homeDrive;
        this.homePage = props.homePage;
        this.homePhone = props.homePhone;
        this.initialPassword = props.initialPassword;
        this.initials = props.initials;
        this.mobilePhone = props.mobilePhone;
        this.office = props.office;
        this.officePhone = props.officePhone;
        this.organization = props.organization;
        this.otherName = props.otherName;
        this.passwordNeverExpires = props.passwordNeverExpires;
        this.poBox = props.poBox;
        this.postalCode = props.postalCode;
        this.principalName = props.principalName;
        this.samAccountName = props.samAccountName;
        this.smartCardLogonRequired = props.smartCardLogonRequired;
        this.state = props.state;
        this.streetAddress = props.streetAddress;
        this.surname = props.surname;
        this.title = props.title;
        this.trustedForDelegation = props.trustedForDelegation;
        this.attrTfcfnid = cdk.Token.asString(this.getAtt('tfcfnid'));
        this.attrId = cdk.Token.asString(this.getAtt('Id'));
        this.attrSid = cdk.Token.asString(this.getAtt('Sid'));
    }
}
exports.CfnUser = CfnUser;
_a = JSII_RTTI_SYMBOL_1;
CfnUser[_a] = { fqn: "@cdk-cloudformation/tf-ad-user.CfnUser", version: "0.0.0" };
/**
 * The CloudFormation resource type name for this resource class.
 *
 * @external
 */
CfnUser.CFN_RESOURCE_TYPE_NAME = "TF::AD::User";
//# sourceMappingURL=data:application/json;base64,