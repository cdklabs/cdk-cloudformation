// Generated by cdk-import
import * as cdk from '@aws-cdk/core';

/**
 * Use the `akamai_dns_record` resource to configure a DNS record that can integrate with your existing DNS infrastructure.
 *
 * @schema CfnDnsrecordProps
 */
export interface CfnDnsrecordProps {
  /**
   * @schema CfnDnsrecordProps#Active
   */
  readonly active?: boolean;

  /**
   * @schema CfnDnsrecordProps#Algorithm
   */
  readonly algorithm?: number;

  /**
   * @schema CfnDnsrecordProps#Certificate
   */
  readonly certificate?: string;

  /**
   * @schema CfnDnsrecordProps#Digest
   */
  readonly digest?: string;

  /**
   * @schema CfnDnsrecordProps#DigestType
   */
  readonly digestType?: number;

  /**
   * @schema CfnDnsrecordProps#EmailAddress
   */
  readonly emailAddress?: string;

  /**
   * @schema CfnDnsrecordProps#Expiration
   */
  readonly expiration?: string;

  /**
   * @schema CfnDnsrecordProps#Expiry
   */
  readonly expiry?: number;

  /**
   * @schema CfnDnsrecordProps#Fingerprint
   */
  readonly fingerprint?: string;

  /**
   * @schema CfnDnsrecordProps#FingerprintType
   */
  readonly fingerprintType?: number;

  /**
   * @schema CfnDnsrecordProps#Flags
   */
  readonly flags?: number;

  /**
   * @schema CfnDnsrecordProps#Flagsnaptr
   */
  readonly flagsnaptr?: string;

  /**
   * @schema CfnDnsrecordProps#Hardware
   */
  readonly hardware?: string;

  /**
   * @schema CfnDnsrecordProps#Inception
   */
  readonly inception?: string;

  /**
   * @schema CfnDnsrecordProps#Iterations
   */
  readonly iterations?: number;

  /**
   * @schema CfnDnsrecordProps#Key
   */
  readonly key?: string;

  /**
   * @schema CfnDnsrecordProps#Keytag
   */
  readonly keytag?: number;

  /**
   * @schema CfnDnsrecordProps#Labels
   */
  readonly labels?: number;

  /**
   * @schema CfnDnsrecordProps#Mailbox
   */
  readonly mailbox?: string;

  /**
   * @schema CfnDnsrecordProps#MatchType
   */
  readonly matchType?: number;

  /**
   * @schema CfnDnsrecordProps#Name
   */
  readonly name: string;

  /**
   * @schema CfnDnsrecordProps#NameServer
   */
  readonly nameServer?: string;

  /**
   * @schema CfnDnsrecordProps#NextHashedOwnerName
   */
  readonly nextHashedOwnerName?: string;

  /**
   * @schema CfnDnsrecordProps#NxdomainTtl
   */
  readonly nxdomainTtl?: number;

  /**
   * @schema CfnDnsrecordProps#Order
   */
  readonly order?: number;

  /**
   * @schema CfnDnsrecordProps#OriginalTtl
   */
  readonly originalTtl?: number;

  /**
   * @schema CfnDnsrecordProps#Port
   */
  readonly port?: number;

  /**
   * @schema CfnDnsrecordProps#Preference
   */
  readonly preference?: number;

  /**
   * @schema CfnDnsrecordProps#Priority
   */
  readonly priority?: number;

  /**
   * @schema CfnDnsrecordProps#PriorityIncrement
   */
  readonly priorityIncrement?: number;

  /**
   * @schema CfnDnsrecordProps#Protocol
   */
  readonly protocol?: number;

  /**
   * @schema CfnDnsrecordProps#Recordtype
   */
  readonly recordtype: string;

  /**
   * @schema CfnDnsrecordProps#Refresh
   */
  readonly refresh?: number;

  /**
   * @schema CfnDnsrecordProps#Regexp
   */
  readonly regexp?: string;

  /**
   * @schema CfnDnsrecordProps#Replacement
   */
  readonly replacement?: string;

  /**
   * @schema CfnDnsrecordProps#Retry
   */
  readonly retry?: number;

  /**
   * @schema CfnDnsrecordProps#Salt
   */
  readonly salt?: string;

  /**
   * @schema CfnDnsrecordProps#Selector
   */
  readonly selector?: number;

  /**
   * @schema CfnDnsrecordProps#Service
   */
  readonly service?: string;

  /**
   * @schema CfnDnsrecordProps#Signature
   */
  readonly signature?: string;

  /**
   * @schema CfnDnsrecordProps#Signer
   */
  readonly signer?: string;

  /**
   * @schema CfnDnsrecordProps#Software
   */
  readonly software?: string;

  /**
   * @schema CfnDnsrecordProps#Subtype
   */
  readonly subtype?: number;

  /**
   * @schema CfnDnsrecordProps#SvcParams
   */
  readonly svcParams?: string;

  /**
   * @schema CfnDnsrecordProps#SvcPriority
   */
  readonly svcPriority?: number;

  /**
   * @schema CfnDnsrecordProps#Target
   */
  readonly target?: string[];

  /**
   * @schema CfnDnsrecordProps#TargetName
   */
  readonly targetName?: string;

  /**
   * @schema CfnDnsrecordProps#Ttl
   */
  readonly ttl: number;

  /**
   * @schema CfnDnsrecordProps#Txt
   */
  readonly txt?: string;

  /**
   * @schema CfnDnsrecordProps#TypeBitmaps
   */
  readonly typeBitmaps?: string;

  /**
   * @schema CfnDnsrecordProps#TypeCovered
   */
  readonly typeCovered?: string;

  /**
   * @schema CfnDnsrecordProps#TypeMnemonic
   */
  readonly typeMnemonic?: string;

  /**
   * @schema CfnDnsrecordProps#TypeValue
   */
  readonly typeValue?: number;

  /**
   * @schema CfnDnsrecordProps#Usage
   */
  readonly usage?: number;

  /**
   * @schema CfnDnsrecordProps#Weight
   */
  readonly weight?: number;

  /**
   * @schema CfnDnsrecordProps#Zone
   */
  readonly zone: string;

}

/**
 * Converts an object of type 'CfnDnsrecordProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnDnsrecordProps(obj: CfnDnsrecordProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Active': obj.active,
    'Algorithm': obj.algorithm,
    'Certificate': obj.certificate,
    'Digest': obj.digest,
    'DigestType': obj.digestType,
    'EmailAddress': obj.emailAddress,
    'Expiration': obj.expiration,
    'Expiry': obj.expiry,
    'Fingerprint': obj.fingerprint,
    'FingerprintType': obj.fingerprintType,
    'Flags': obj.flags,
    'Flagsnaptr': obj.flagsnaptr,
    'Hardware': obj.hardware,
    'Inception': obj.inception,
    'Iterations': obj.iterations,
    'Key': obj.key,
    'Keytag': obj.keytag,
    'Labels': obj.labels,
    'Mailbox': obj.mailbox,
    'MatchType': obj.matchType,
    'Name': obj.name,
    'NameServer': obj.nameServer,
    'NextHashedOwnerName': obj.nextHashedOwnerName,
    'NxdomainTtl': obj.nxdomainTtl,
    'Order': obj.order,
    'OriginalTtl': obj.originalTtl,
    'Port': obj.port,
    'Preference': obj.preference,
    'Priority': obj.priority,
    'PriorityIncrement': obj.priorityIncrement,
    'Protocol': obj.protocol,
    'Recordtype': obj.recordtype,
    'Refresh': obj.refresh,
    'Regexp': obj.regexp,
    'Replacement': obj.replacement,
    'Retry': obj.retry,
    'Salt': obj.salt,
    'Selector': obj.selector,
    'Service': obj.service,
    'Signature': obj.signature,
    'Signer': obj.signer,
    'Software': obj.software,
    'Subtype': obj.subtype,
    'SvcParams': obj.svcParams,
    'SvcPriority': obj.svcPriority,
    'Target': obj.target?.map(y => y),
    'TargetName': obj.targetName,
    'Ttl': obj.ttl,
    'Txt': obj.txt,
    'TypeBitmaps': obj.typeBitmaps,
    'TypeCovered': obj.typeCovered,
    'TypeMnemonic': obj.typeMnemonic,
    'TypeValue': obj.typeValue,
    'Usage': obj.usage,
    'Weight': obj.weight,
    'Zone': obj.zone,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 * A CloudFormation `TF::Akamai::DnsRecord`
 *
 * @cloudformationResource TF::Akamai::DnsRecord
 * @stability external
 * @link https://github.com/iann0036/cfn-tf-custom-types.git
 */
export class CfnDnsrecord extends cdk.CfnResource {
  /**
  * The CloudFormation resource type name for this resource class.
  */
  public static readonly CFN_RESOURCE_TYPE_NAME = "TF::Akamai::DnsRecord";

  /**
   * Resource props.
   */
  public readonly props: CfnDnsrecordProps;

  /**
   * Attribute `TF::Akamai::DnsRecord.tfcfnid`
   * @link https://github.com/iann0036/cfn-tf-custom-types.git
   */
  public readonly attrTfcfnid: string;
  /**
   * Attribute `TF::Akamai::DnsRecord.AnswerType`
   * @link https://github.com/iann0036/cfn-tf-custom-types.git
   */
  public readonly attrAnswerType: string;
  /**
   * Attribute `TF::Akamai::DnsRecord.DnsName`
   * @link https://github.com/iann0036/cfn-tf-custom-types.git
   */
  public readonly attrDnsName: string;
  /**
   * Attribute `TF::Akamai::DnsRecord.Id`
   * @link https://github.com/iann0036/cfn-tf-custom-types.git
   */
  public readonly attrId: string;
  /**
   * Attribute `TF::Akamai::DnsRecord.RecordSha`
   * @link https://github.com/iann0036/cfn-tf-custom-types.git
   */
  public readonly attrRecordSha: string;
  /**
   * Attribute `TF::Akamai::DnsRecord.Serial`
   * @link https://github.com/iann0036/cfn-tf-custom-types.git
   */
  public readonly attrSerial: number;

  /**
   * Create a new `TF::Akamai::DnsRecord`.
   *
   * @param scope - scope in which this resource is defined
   * @param id    - scoped id of the resource
   * @param props - resource properties
   */
  constructor(scope: cdk.Construct, id: string, props: CfnDnsrecordProps) {
    super(scope, id, { type: CfnDnsrecord.CFN_RESOURCE_TYPE_NAME, properties: toJson_CfnDnsrecordProps(props)! });

    this.props = props;

    this.attrTfcfnid = cdk.Token.asString(this.getAtt('tfcfnid'));
    this.attrAnswerType = cdk.Token.asString(this.getAtt('AnswerType'));
    this.attrDnsName = cdk.Token.asString(this.getAtt('DnsName'));
    this.attrId = cdk.Token.asString(this.getAtt('Id'));
    this.attrRecordSha = cdk.Token.asString(this.getAtt('RecordSha'));
    this.attrSerial = cdk.Token.asNumber(this.getAtt('Serial'));
  }
}