// Generated by cdk-import
import * as cdk from 'aws-cdk-lib';
import * as constructs from 'constructs';

/**
 * Creates a new bucket in Google cloud storage service (GCS).
 * Once a bucket has been created, its location can't be changed.
 *
 * For more information see
 * [the official documentation](https://cloud.google.com/storage/docs/overview)
 * and
 * [API](https://cloud.google.com/storage/docs/json_api/v1/buckets).
 *
 * **Note**: If the project id is not set on the resource or in the provider block it will be dynamically
 * determined which will require enabling the compute api.
 *
 * @schema CfnStorageBucketProps
 */
export interface CfnStorageBucketProps {
  /**
   * Enables [Bucket Policy Only](https://cloud.google.com/storage/docs/bucket-policy-only) access to a bucket. This field will be removed in the next major release of the provider.
   *
   * @schema CfnStorageBucketProps#BucketPolicyOnly
   */
  readonly bucketPolicyOnly?: boolean;

  /**
   * @schema CfnStorageBucketProps#DefaultEventBasedHold
   */
  readonly defaultEventBasedHold?: boolean;

  /**
   * When deleting a bucket, this
   * boolean option will delete all contained objects. If you try to delete a
   * bucket that contains objects, Terraform will fail that run.
   *
   * @schema CfnStorageBucketProps#ForceDestroy
   */
  readonly forceDestroy?: boolean;

  /**
   * A map of key/value label pairs to assign to the bucket.
   *
   * @schema CfnStorageBucketProps#Labels
   */
  readonly labels?: LabelsDefinition[];

  /**
   * The [GCS location](https://cloud.google.com/storage/docs/bucket-locations).
   *
   * @schema CfnStorageBucketProps#Location
   */
  readonly location?: string;

  /**
   * The name of the bucket.
   *
   * @schema CfnStorageBucketProps#Name
   */
  readonly name: string;

  /**
   * The ID of the project in which the resource belongs. If it
   * is not provided, the provider project is used.
   *
   * @schema CfnStorageBucketProps#Project
   */
  readonly project?: string;

  /**
   * Enables [Requester Pays](https://cloud.google.com/storage/docs/requester-pays) on a storage bucket.
   *
   * @schema CfnStorageBucketProps#RequesterPays
   */
  readonly requesterPays?: boolean;

  /**
   * The [Storage Class](https://cloud.google.com/storage/docs/storage-classes) of the new bucket. Supported values include: `STANDARD`, `MULTI_REGIONAL`, `REGIONAL`, `NEARLINE`, `COLDLINE`, `ARCHIVE`.
   *
   * @schema CfnStorageBucketProps#StorageClass
   */
  readonly storageClass?: string;

  /**
   * Enables [Uniform bucket-level access](https://cloud.google.com/storage/docs/uniform-bucket-level-access) access to a bucket.
   *
   * @schema CfnStorageBucketProps#UniformBucketLevelAccess
   */
  readonly uniformBucketLevelAccess?: boolean;

  /**
   * @schema CfnStorageBucketProps#Cors
   */
  readonly cors?: CorsDefinition[];

  /**
   * @schema CfnStorageBucketProps#Encryption
   */
  readonly encryption?: EncryptionDefinition[];

  /**
   * @schema CfnStorageBucketProps#LifecycleRule
   */
  readonly lifecycleRule?: LifecycleRuleDefinition[];

  /**
   * @schema CfnStorageBucketProps#Logging
   */
  readonly logging?: LoggingDefinition[];

  /**
   * @schema CfnStorageBucketProps#RetentionPolicy
   */
  readonly retentionPolicy?: RetentionPolicyDefinition[];

  /**
   * @schema CfnStorageBucketProps#Versioning
   */
  readonly versioning?: VersioningDefinition[];

  /**
   * @schema CfnStorageBucketProps#Website
   */
  readonly website?: WebsiteDefinition[];

}

/**
 * Converts an object of type 'CfnStorageBucketProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnStorageBucketProps(obj: CfnStorageBucketProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'BucketPolicyOnly': obj.bucketPolicyOnly,
    'DefaultEventBasedHold': obj.defaultEventBasedHold,
    'ForceDestroy': obj.forceDestroy,
    'Labels': obj.labels?.map(y => toJson_LabelsDefinition(y)),
    'Location': obj.location,
    'Name': obj.name,
    'Project': obj.project,
    'RequesterPays': obj.requesterPays,
    'StorageClass': obj.storageClass,
    'UniformBucketLevelAccess': obj.uniformBucketLevelAccess,
    'Cors': obj.cors?.map(y => toJson_CorsDefinition(y)),
    'Encryption': obj.encryption?.map(y => toJson_EncryptionDefinition(y)),
    'LifecycleRule': obj.lifecycleRule?.map(y => toJson_LifecycleRuleDefinition(y)),
    'Logging': obj.logging?.map(y => toJson_LoggingDefinition(y)),
    'RetentionPolicy': obj.retentionPolicy?.map(y => toJson_RetentionPolicyDefinition(y)),
    'Versioning': obj.versioning?.map(y => toJson_VersioningDefinition(y)),
    'Website': obj.website?.map(y => toJson_WebsiteDefinition(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema LabelsDefinition
 */
export interface LabelsDefinition {
  /**
   * @schema LabelsDefinition#MapKey
   */
  readonly mapKey: string;

  /**
   * @schema LabelsDefinition#MapValue
   */
  readonly mapValue: string;

}

/**
 * Converts an object of type 'LabelsDefinition' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_LabelsDefinition(obj: LabelsDefinition | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'MapKey': obj.mapKey,
    'MapValue': obj.mapValue,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CorsDefinition
 */
export interface CorsDefinition {
  /**
   * The value, in seconds, to return in the [Access-Control-Max-Age header](https://www.w3.org/TR/cors/#access-control-max-age-response-header) used in preflight responses.
   *
   * @schema CorsDefinition#MaxAgeSeconds
   */
  readonly maxAgeSeconds?: number;

  /**
   * The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc) Note: "*" is permitted in the list of methods, and means "any method".
   *
   * @schema CorsDefinition#Method
   */
  readonly method?: string[];

  /**
   * The list of [Origins](https://tools.ietf.org/html/rfc6454) eligible to receive CORS response headers. Note: "*" is permitted in the list of origins, and means "any Origin".
   *
   * @schema CorsDefinition#Origin
   */
  readonly origin?: string[];

  /**
   * The list of HTTP headers other than the [simple response headers](https://www.w3.org/TR/cors/#simple-response-header) to give permission for the user-agent to share across domains.
   *
   * @schema CorsDefinition#ResponseHeader
   */
  readonly responseHeader?: string[];

}

/**
 * Converts an object of type 'CorsDefinition' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CorsDefinition(obj: CorsDefinition | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'MaxAgeSeconds': obj.maxAgeSeconds,
    'Method': obj.method?.map(y => y),
    'Origin': obj.origin?.map(y => y),
    'ResponseHeader': obj.responseHeader?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema EncryptionDefinition
 */
export interface EncryptionDefinition {
  /**
   * @schema EncryptionDefinition#DefaultKmsKeyName
   */
  readonly defaultKmsKeyName: string;

}

/**
 * Converts an object of type 'EncryptionDefinition' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_EncryptionDefinition(obj: EncryptionDefinition | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'DefaultKmsKeyName': obj.defaultKmsKeyName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema LifecycleRuleDefinition
 */
export interface LifecycleRuleDefinition {
  /**
   * @schema LifecycleRuleDefinition#Action
   */
  readonly action?: ActionDefinition[];

  /**
   * @schema LifecycleRuleDefinition#Condition
   */
  readonly condition?: ConditionDefinition[];

}

/**
 * Converts an object of type 'LifecycleRuleDefinition' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_LifecycleRuleDefinition(obj: LifecycleRuleDefinition | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Action': obj.action?.map(y => toJson_ActionDefinition(y)),
    'Condition': obj.condition?.map(y => toJson_ConditionDefinition(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema LoggingDefinition
 */
export interface LoggingDefinition {
  /**
   * The bucket that will receive log objects.
   *
   * @schema LoggingDefinition#LogBucket
   */
  readonly logBucket: string;

  /**
   * The object prefix for log objects. If it's not provided,
   * by default GCS sets this to this bucket's name.
   *
   * @schema LoggingDefinition#LogObjectPrefix
   */
  readonly logObjectPrefix?: string;

}

/**
 * Converts an object of type 'LoggingDefinition' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_LoggingDefinition(obj: LoggingDefinition | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'LogBucket': obj.logBucket,
    'LogObjectPrefix': obj.logObjectPrefix,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema RetentionPolicyDefinition
 */
export interface RetentionPolicyDefinition {
  /**
   * If set to `true`, the bucket will be [locked](https://cloud.google.com/storage/docs/using-bucket-lock#lock-bucket) and permanently restrict edits to the bucket's retention policy.  Caution: Locking a bucket is an irreversible action.
   *
   * @schema RetentionPolicyDefinition#IsLocked
   */
  readonly isLocked?: boolean;

  /**
   * The period of time, in seconds, that objects in the bucket must be retained and cannot be deleted, overwritten, or archived. The value must be less than 2,147,483,647 seconds.
   *
   * @schema RetentionPolicyDefinition#RetentionPeriod
   */
  readonly retentionPeriod: number;

}

/**
 * Converts an object of type 'RetentionPolicyDefinition' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RetentionPolicyDefinition(obj: RetentionPolicyDefinition | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'IsLocked': obj.isLocked,
    'RetentionPeriod': obj.retentionPeriod,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema VersioningDefinition
 */
export interface VersioningDefinition {
  /**
   * While set to `true`, versioning is fully enabled for this bucket.
   *
   * @schema VersioningDefinition#Enabled
   */
  readonly enabled: boolean;

}

/**
 * Converts an object of type 'VersioningDefinition' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_VersioningDefinition(obj: VersioningDefinition | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Enabled': obj.enabled,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema WebsiteDefinition
 */
export interface WebsiteDefinition {
  /**
   * Behaves as the bucket's directory index where
   * missing objects are treated as potential directories.
   *
   * @schema WebsiteDefinition#MainPageSuffix
   */
  readonly mainPageSuffix?: string;

  /**
   * The custom object to return when a requested
   * resource is not found.
   *
   * @schema WebsiteDefinition#NotFoundPage
   */
  readonly notFoundPage?: string;

}

/**
 * Converts an object of type 'WebsiteDefinition' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_WebsiteDefinition(obj: WebsiteDefinition | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'MainPageSuffix': obj.mainPageSuffix,
    'NotFoundPage': obj.notFoundPage,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema ActionDefinition
 */
export interface ActionDefinition {
  /**
   * The target [Storage Class](https://cloud.google.com/storage/docs/storage-classes) of objects affected by this Lifecycle Rule. Supported values include: `STANDARD`, `MULTI_REGIONAL`, `REGIONAL`, `NEARLINE`, `COLDLINE`, `ARCHIVE`.
   *
   * @schema ActionDefinition#StorageClass
   */
  readonly storageClass?: string;

  /**
   * The type of the action of this Lifecycle Rule. Supported values include: `Delete` and `SetStorageClass`.
   *
   * @schema ActionDefinition#Type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'ActionDefinition' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ActionDefinition(obj: ActionDefinition | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'StorageClass': obj.storageClass,
    'Type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema ConditionDefinition
 */
export interface ConditionDefinition {
  /**
   * Minimum age of an object in days to satisfy this condition.
   *
   * @schema ConditionDefinition#Age
   */
  readonly age?: number;

  /**
   * A date in the RFC 3339 format YYYY-MM-DD. This condition is satisfied when an object is created before midnight of the specified date in UTC.
   *
   * @schema ConditionDefinition#CreatedBefore
   */
  readonly createdBefore?: string;

  /**
   * A date in the RFC 3339 format YYYY-MM-DD. This condition is satisfied when the customTime metadata for the object is set to an earlier date than the date used in this lifecycle condition.
   *
   * @schema ConditionDefinition#CustomTimeBefore
   */
  readonly customTimeBefore?: string;

  /**
   * Days since the date set in the `customTime` metadata for the object. This condition is satisfied when the current date and time is at least the specified number of days after the `customTime`.
   *
   * @schema ConditionDefinition#DaysSinceCustomTime
   */
  readonly daysSinceCustomTime?: number;

  /**
   * Relevant only for versioned objects. Number of days elapsed since the noncurrent timestamp of an object.
   *
   * @schema ConditionDefinition#DaysSinceNoncurrentTime
   */
  readonly daysSinceNoncurrentTime?: number;

  /**
   * [Storage Class](https://cloud.google.com/storage/docs/storage-classes) of objects to satisfy this condition. Supported values include: `STANDARD`, `MULTI_REGIONAL`, `REGIONAL`, `NEARLINE`, `COLDLINE`, `ARCHIVE`, `DURABLE_REDUCED_AVAILABILITY`.
   *
   * @schema ConditionDefinition#MatchesStorageClass
   */
  readonly matchesStorageClass?: string[];

  /**
   * Relevant only for versioned objects. The date in RFC 3339 (e.g. `2017-06-13`) when the object became nonconcurrent.
   *
   * @schema ConditionDefinition#NoncurrentTimeBefore
   */
  readonly noncurrentTimeBefore?: string;

  /**
   * Relevant only for versioned objects. The number of newer versions of an object to satisfy this condition.
   *
   * @schema ConditionDefinition#NumNewerVersions
   */
  readonly numNewerVersions?: number;

  /**
   * Match to live and/or archived objects. Unversioned buckets have only live objects. Supported values include: `"LIVE"`, `"ARCHIVED"`, `"ANY"`.
   *
   * @schema ConditionDefinition#WithState
   */
  readonly withState?: string;

}

/**
 * Converts an object of type 'ConditionDefinition' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ConditionDefinition(obj: ConditionDefinition | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Age': obj.age,
    'CreatedBefore': obj.createdBefore,
    'CustomTimeBefore': obj.customTimeBefore,
    'DaysSinceCustomTime': obj.daysSinceCustomTime,
    'DaysSinceNoncurrentTime': obj.daysSinceNoncurrentTime,
    'MatchesStorageClass': obj.matchesStorageClass?.map(y => y),
    'NoncurrentTimeBefore': obj.noncurrentTimeBefore,
    'NumNewerVersions': obj.numNewerVersions,
    'WithState': obj.withState,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 * A CloudFormation `TF::Google::StorageBucket`
 *
 * @cloudformationResource TF::Google::StorageBucket
 * @stability external
 * @link https://github.com/iann0036/cfn-tf-custom-types.git
 */
export class CfnStorageBucket extends cdk.CfnResource {
  /**
  * The CloudFormation resource type name for this resource class.
  */
  public static readonly CFN_RESOURCE_TYPE_NAME = "TF::Google::StorageBucket";

  /**
   * Resource props.
   */
  public readonly props: CfnStorageBucketProps;

  /**
   * Attribute `TF::Google::StorageBucket.tfcfnid`
   * @link https://github.com/iann0036/cfn-tf-custom-types.git
   */
  public readonly attrTfcfnid: string;
  /**
   * Attribute `TF::Google::StorageBucket.Id`
   * @link https://github.com/iann0036/cfn-tf-custom-types.git
   */
  public readonly attrId: string;
  /**
   * Attribute `TF::Google::StorageBucket.SelfLink`
   * @link https://github.com/iann0036/cfn-tf-custom-types.git
   */
  public readonly attrSelfLink: string;
  /**
   * Attribute `TF::Google::StorageBucket.Url`
   * @link https://github.com/iann0036/cfn-tf-custom-types.git
   */
  public readonly attrUrl: string;

  /**
   * Create a new `TF::Google::StorageBucket`.
   *
   * @param scope - scope in which this resource is defined
   * @param id    - scoped id of the resource
   * @param props - resource properties
   */
  constructor(scope: constructs.Construct, id: string, props: CfnStorageBucketProps) {
    super(scope, id, { type: CfnStorageBucket.CFN_RESOURCE_TYPE_NAME, properties: toJson_CfnStorageBucketProps(props)! });

    this.props = props;

    this.attrTfcfnid = cdk.Token.asString(this.getAtt('tfcfnid'));
    this.attrId = cdk.Token.asString(this.getAtt('Id'));
    this.attrSelfLink = cdk.Token.asString(this.getAtt('SelfLink'));
    this.attrUrl = cdk.Token.asString(this.getAtt('Url'));
  }
}