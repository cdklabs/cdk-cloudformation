// Generated by cdk-import
import * as cdk from '@aws-cdk/core';

/**
 * CloudFormation equivalent of random_string
 *
 * @schema CfnStringProps
 */
export interface CfnStringProps {
  /**
   * @schema CfnStringProps#Keepers
   */
  readonly keepers?: KeepersDefinition[];

  /**
   * @schema CfnStringProps#Length
   */
  readonly length: number;

  /**
   * @schema CfnStringProps#Lower
   */
  readonly lower?: boolean;

  /**
   * @schema CfnStringProps#MinLower
   */
  readonly minLower?: number;

  /**
   * @schema CfnStringProps#MinNumeric
   */
  readonly minNumeric?: number;

  /**
   * @schema CfnStringProps#MinSpecial
   */
  readonly minSpecial?: number;

  /**
   * @schema CfnStringProps#MinUpper
   */
  readonly minUpper?: number;

  /**
   * @schema CfnStringProps#Number
   */
  readonly number?: boolean;

  /**
   * @schema CfnStringProps#OverrideSpecial
   */
  readonly overrideSpecial?: string;

  /**
   * @schema CfnStringProps#Special
   */
  readonly special?: boolean;

  /**
   * @schema CfnStringProps#Upper
   */
  readonly upper?: boolean;

}

/**
 * Converts an object of type 'CfnStringProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnStringProps(obj: CfnStringProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Keepers': obj.keepers?.map(y => toJson_KeepersDefinition(y)),
    'Length': obj.length,
    'Lower': obj.lower,
    'MinLower': obj.minLower,
    'MinNumeric': obj.minNumeric,
    'MinSpecial': obj.minSpecial,
    'MinUpper': obj.minUpper,
    'Number': obj.number,
    'OverrideSpecial': obj.overrideSpecial,
    'Special': obj.special,
    'Upper': obj.upper,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema KeepersDefinition
 */
export interface KeepersDefinition {
  /**
   * @schema KeepersDefinition#MapKey
   */
  readonly mapKey: string;

  /**
   * @schema KeepersDefinition#MapValue
   */
  readonly mapValue: string;

}

/**
 * Converts an object of type 'KeepersDefinition' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_KeepersDefinition(obj: KeepersDefinition | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'MapKey': obj.mapKey,
    'MapValue': obj.mapValue,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 * A CloudFormation `TF::Random::String`
 *
 * @cloudformationResource TF::Random::String
 * @stability external
 * @link https://github.com/iann0036/cfn-tf-custom-types.git
 */
export class CfnString extends cdk.CfnResource {
  /**
  * The CloudFormation resource type name for this resource class.
  */
  public static readonly CFN_RESOURCE_TYPE_NAME = "TF::Random::String";

  /**
   * `TF::Random::String.Keepers`
   * @link https://github.com/iann0036/cfn-tf-custom-types.git
   */
  public readonly keepers: KeepersDefinition[] | undefined;
  /**
   * `TF::Random::String.Length`
   * @link https://github.com/iann0036/cfn-tf-custom-types.git
   */
  public readonly length: number;
  /**
   * `TF::Random::String.Lower`
   * @link https://github.com/iann0036/cfn-tf-custom-types.git
   */
  public readonly lower: any | undefined;
  /**
   * `TF::Random::String.MinLower`
   * @link https://github.com/iann0036/cfn-tf-custom-types.git
   */
  public readonly minLower: number | undefined;
  /**
   * `TF::Random::String.MinNumeric`
   * @link https://github.com/iann0036/cfn-tf-custom-types.git
   */
  public readonly minNumeric: number | undefined;
  /**
   * `TF::Random::String.MinSpecial`
   * @link https://github.com/iann0036/cfn-tf-custom-types.git
   */
  public readonly minSpecial: number | undefined;
  /**
   * `TF::Random::String.MinUpper`
   * @link https://github.com/iann0036/cfn-tf-custom-types.git
   */
  public readonly minUpper: number | undefined;
  /**
   * `TF::Random::String.Number`
   * @link https://github.com/iann0036/cfn-tf-custom-types.git
   */
  public readonly number: any | undefined;
  /**
   * `TF::Random::String.OverrideSpecial`
   * @link https://github.com/iann0036/cfn-tf-custom-types.git
   */
  public readonly overrideSpecial: string | undefined;
  /**
   * `TF::Random::String.Special`
   * @link https://github.com/iann0036/cfn-tf-custom-types.git
   */
  public readonly special: any | undefined;
  /**
   * `TF::Random::String.Upper`
   * @link https://github.com/iann0036/cfn-tf-custom-types.git
   */
  public readonly upper: any | undefined;
  /**
   * Attribute `TF::Random::String.tfcfnid`
   * @link https://github.com/iann0036/cfn-tf-custom-types.git
   */
  public readonly attrTfcfnid: string;
  /**
   * Attribute `TF::Random::String.Id`
   * @link https://github.com/iann0036/cfn-tf-custom-types.git
   */
  public readonly attrId: string;
  /**
   * Attribute `TF::Random::String.Result`
   * @link https://github.com/iann0036/cfn-tf-custom-types.git
   */
  public readonly attrResult: string;

  /**
   * Create a new `TF::Random::String`.
   *
   * @param scope - scope in which this resource is defined
   * @param id    - scoped id of the resource
   * @param props - resource properties
   */
  constructor(scope: cdk.Construct, id: string, props: CfnStringProps) {
    super(scope, id, { type: CfnString.CFN_RESOURCE_TYPE_NAME, properties: toJson_CfnStringProps(props)! });

    this.keepers = props.keepers;
    this.length = props.length;
    this.lower = props.lower;
    this.minLower = props.minLower;
    this.minNumeric = props.minNumeric;
    this.minSpecial = props.minSpecial;
    this.minUpper = props.minUpper;
    this.number = props.number;
    this.overrideSpecial = props.overrideSpecial;
    this.special = props.special;
    this.upper = props.upper;
    this.attrTfcfnid = cdk.Token.asString(this.getAtt('tfcfnid'));
    this.attrId = cdk.Token.asString(this.getAtt('Id'));
    this.attrResult = cdk.Token.asString(this.getAtt('Result'));
  }
}