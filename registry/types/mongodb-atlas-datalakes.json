{
  "Arn": "arn:aws:cloudformation:us-east-1::type/resource/bb989456c78c398a858fef18f2ca1bfc1fbba082/MongoDB-Atlas-DataLakes",
  "Type": "RESOURCE",
  "TypeName": "MongoDB::Atlas::DataLakes",
  "Description": "Returns, adds, edits, and removes Federated Database Instances.",
  "Schema": "{\n  \"additionalProperties\": false,\n  \"definitions\": {\n    \"DataLakeAWSCloudProviderConfigView\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"ExternalId\": {\n          \"type\": \"string\",\n          \"description\": \"Unique identifier associated with the Identity and Access Management (IAM) role that the data lake assumes when accessing the data stores.\"\n        },\n        \"IamAssumedRoleARN\": {\n          \"type\": \"string\",\n          \"description\": \"Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role that the data lake assumes when accessing data stores.\",\n          \"maxLength\": 2048,\n          \"minLength\": 20\n        },\n        \"IamUserARN\": {\n          \"type\": \"string\",\n          \"description\": \"Amazon Resource Name (ARN) of the user that the data lake assumes when accessing data stores.\"\n        },\n        \"RoleId\": {\n          \"type\": \"string\",\n          \"description\": \"Unique identifier of the role that the data lake can use to access the data stores.Required if specifying cloudProviderConfig.\"\n        },\n\n        \"TestS3Bucket\": {\n          \"type\": \"string\",\n          \"description\": \"Name of the S3 data bucket that the provided role ID is authorized to access.Required if specifying cloudProviderConfig.\"\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"DataLakeCloudProviderConfigView\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"Aws\": {\n          \"type\": \"object\",\n          \"description\": \"Name of the cloud service that hosts the data lake's data stores.\",\n          \"$ref\": \"#/definitions/DataLakeAWSCloudProviderConfigView\"\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"DataLakeDataProcessRegionView\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"CloudProvider\": {\n          \"type\": \"string\",\n          \"description\": \"Name of the cloud service that hosts the data lake's data stores.\",\n          \"enum\": [\"AWS\", \"GCP\", \"AZURE\", \"TENANT\", \"SERVERLESS\"]\n        },\n        \"Region\": {\n          \"type\": \"string\",\n          \"description\": \"Name of the region to which the data lake routes client connections.\",\n          \"enum\": [\n            \"DUBLIN_IRL\",\n            \"FRANKFURT_DEU\",\n            \"LONDON_GBR\",\n            \"MUMBAI_IND\",\n            \"OREGON_USA\",\n            \"SYDNEY_AUS\",\n            \"VIRGINIA_USA\"\n          ]\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"DataLakeDatabaseCollectionView\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"DataSources\": {\n          \"type\": \"array\",\n          \"insertionOrder\": false,\n          \"description\": \"Array that contains the data stores that map to a collection for this data lake.\",\n          \"items\": {\n            \"$ref\": \"#/definitions/DataLakeDatabaseDataSourceView\",\n            \"type\": \"object\"\n          }\n        },\n        \"Name\": {\n          \"type\": \"string\",\n          \"description\": \"Human-readable label that identifies the collection to which MongoDB Cloud maps the data in the data stores.\"\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"DataLakeDatabaseDataSourceView\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"AllowInsecure\": {\n          \"type\": \"boolean\",\n          \"description\": \"Flag that validates the scheme in the specified URLs. If `true`, allows insecure `HTTP` scheme, doesn't verify the server's certificate chain and hostname, and accepts any certificate with any hostname presented by the server. If `false`, allows secure `HTTPS` scheme only.\"\n        },\n        \"Collection\": {\n          \"type\": \"string\",\n          \"description\": \"Human-readable label that identifies the collection in the database. For creating a wildcard (`*`) collection, you must omit this parameter.\"\n        },\n        \"CollectionRegex\": {\n          \"type\": \"string\",\n          \"description\": \"Regex pattern to use for creating the wildcard (*) collection. To learn more about the regex syntax, see [Go programming language](https://pkg.go.dev/regexp).\"\n        },\n        \"Database\": {\n          \"type\": \"string\",\n          \"description\": \"Human-readable label that identifies the database, which contains the collection in the cluster. You must omit this parameter to generate wildcard (`*`) collections for dynamically generated databases.\"\n        },\n        \"DefaultFormat\": {\n          \"type\": \"string\",\n          \"description\": \"File format that MongoDB Cloud uses if it encounters a file without a file extension while searching **storeName**.\",\n          \"enum\": [\n            \".avro\",\n            \".avro.gz\",\n            \".bson\",\n            \".bson.gz\",\n            \".csv\",\n            \".json\",\n            \".json.gz\",\n            \".orc\",\n            \".tsv\",\n            \".tsv.gz\"\n          ]\n        },\n        \"Path\": {\n          \"type\": \"string\",\n          \"description\": \"File path that controls how MongoDB Cloud searches for and parses files in the **storeName** before mapping them to a collection.Specify ``/`` to capture all files and folders from the ``prefix`` path.\"\n        },\n        \"StoreName\": {\n          \"type\": \"string\",\n          \"description\": \"Human-readable label that identifies the data store that MongoDB Cloud maps to the collection.\"\n        },\n        \"Urls\": {\n          \"type\": \"array\",\n          \"insertionOrder\": false,\n          \"description\": \"URLs of the publicly accessible data files. You can't specify URLs that require authentication. Atlas Data Lake creates a partition for each URL. If empty or omitted, Data Lake uses the URLs from the store specified in the **dataSources.storeName** parameter.\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"DataLakeDatabaseView\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"Collections\": {\n          \"type\": \"array\",\n          \"insertionOrder\": false,\n          \"description\": \"Array of collections and data sources that map to a ``stores`` data store.\",\n          \"items\": {\n            \"$ref\": \"#/definitions/DataLakeDatabaseCollectionView\",\n            \"type\": \"object\"\n          }\n        },\n        \"MaxWildcardCollections\": {\n          \"type\": \"integer\",\n          \"description\": \"Maximum number of wildcard collections in the database. This only applies to S3 data sources.\"\n        },\n        \"Name\": {\n          \"type\": \"string\",\n          \"description\": \"Human-readable label that identifies the database to which the data lake maps data.\"\n        },\n        \"Views\": {\n          \"type\": \"array\",\n          \"insertionOrder\": false,\n          \"description\": \"Array of aggregation pipelines that apply to the collection. This only applies to S3 data sources.\",\n          \"items\": {\n            \"$ref\": \"#/definitions/DataLakeViewView\",\n            \"type\": \"object\"\n          }\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"DataLakeStorageView\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"Databases\": {\n          \"type\": \"array\",\n          \"insertionOrder\": false,\n          \"description\": \"Array that contains the queryable databases and collections for this data lake.\",\n          \"items\": {\n            \"$ref\": \"#/definitions/DataLakeDatabaseView\",\n            \"type\": \"object\"\n          }\n        },\n        \"Stores\": {\n          \"type\": \"array\",\n          \"insertionOrder\": false,\n          \"description\": \"Array that contains the data stores for the data lake.\",\n          \"items\": {\n            \"$ref\": \"#/definitions/StoreDetail\",\n            \"type\": \"object\"\n          }\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"StoreDetail\":{\n      \"type\":\"object\",\n      \"description\": \"Configuration information for each data store and its mapping to MongoDB Cloud databases.\",\n      \"properties\":{\n        \"Name\":{\n          \"description\": \"Human-readable label that identifies the data store.\",\n          \"type\":\"string\"\n        },\n        \"Provider\":{\n          \"description\": \"Human-readable label that identifies the Federated Database to update.\",\n          \"type\":\"string\"\n        },\n        \"Region\": {\n          \"description\": \"Human-readable label that identifies the Federated Database to update.\",\n          \"type\": \"string\"\n\n        },\n        \"Bucket\": {\n          \"description\": \"Human-readable label that identifies the Federated Database to update.\",\n          \"type\": \"string\"\n\n        },\n        \"Prefix\": {\n          \"description\": \"Human-readable label that identifies the Federated Database to update.\",\n          \"type\": \"string\"\n\n        },\n        \"Delimiter\": {\n          \"description\": \"Human-readable label that identifies the Federated Database to update.\",\n          \"type\": \"string\"\n\n        },\n        \"IncludeTags\": {\n          \"description\": \"Human-readable label that identifies the Federated Database to update.\",\n          \"type\": \"boolean\"\n\n        },\n        \"AdditionalStorageClasses\": {\n          \"type\":\"array\",\n          \"insertionOrder\": false,\n          \"description\": \"Human-readable label that identifies the Federated Database to update.\",\n          \"items\":\n          {\n            \"type\": \"string\"\n\n          }\n        }\n      },\n      \"additionalProperties\":false\n    },\n    \"DataLakeViewView\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"Name\": {\n          \"type\": \"string\",\n          \"description\": \"Human-readable label that identifies the view, which corresponds to an aggregation pipeline on a collection.\"\n        },\n        \"Pipeline\": {\n          \"type\": \"string\",\n          \"description\": \"Aggregation pipeline stages to apply to the source collection.\"\n        },\n        \"Source\": {\n          \"type\": \"string\",\n          \"description\": \"Human-readable label that identifies the source collection for the view.\"\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"NDSDataLakeAWSCloudProviderConfigView\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"RoleId\": {\n          \"type\": \"string\",\n          \"description\": \"Unique identifier of the role that the data lake can use to access the data stores.Required if specifying cloudProviderConfig.\"\n        },\n        \"TestS3Bucket\": {\n          \"type\": \"string\",\n          \"description\": \"Name of the S3 data bucket that the provided role ID is authorized to access.Required if specifying cloudProviderConfig.\"\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"NDSDataLakeCloudProviderConfigView\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"Aws\": {\n          \"type\": \"object\",\n          \"description\": \"Name of the cloud service that hosts the data lake's data stores.\",\n          \"$ref\": \"#/definitions/NDSDataLakeAWSCloudProviderConfigView\"\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"NDSDataLakeDataProcessRegionView\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"CloudProvider\": {\n          \"type\": \"string\",\n          \"description\": \"Name of the cloud service that hosts the data lake's data stores.\",\n          \"enum\": [\"NONE\", \"AWS\", \"GCP\", \"AZURE\", \"FREE\", \"SERVERLESS\"]\n        },\n        \"Region\": {\n          \"type\": \"string\",\n          \"description\": \"Name of the region to which the data lake routes connections for data processing.\",\n          \"enum\": [\n            \"DUBLIN_IRL\",\n            \"FRANKFURT_DEU\",\n            \"LONDON_GBR\",\n            \"MUMBAI_IND\",\n            \"OREGON_USA\",\n            \"SYDNEY_AUS\",\n            \"VIRGINIA_USA\"\n          ]\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"NDSDataLakeDatabaseCollectionView\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"DataSources\": {\n          \"type\": \"array\",\n          \"insertionOrder\": false,\n          \"description\": \"Array that contains the data stores that map to a collection for this data lake.\",\n          \"items\": {\n            \"$ref\": \"#/definitions/NDSDataLakeDatabaseDataSourceView\",\n            \"type\": \"object\"\n          }\n        },\n        \"Name\": {\n          \"type\": \"string\",\n          \"description\": \"Human-readable label that identifies the collection to which MongoDB Cloud maps the data in the data stores.\"\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"NDSDataLakeDatabaseDataSourceView\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"AllowInsecure\": {\n          \"type\": \"boolean\",\n          \"description\": \"Flag that validates the scheme in the specified URLs. If `true`, allows insecure `HTTP` scheme, doesn't verify the server's certificate chain and hostname, and accepts any certificate with any hostname presented by the server. If `false`, allows secure `HTTPS` scheme only.\"\n        },\n        \"Collection\": {\n          \"type\": \"string\",\n          \"description\": \"Human-readable label that identifies the collection in the database. For creating a wildcard (`*`) collection, you must omit this parameter.\"\n        },\n        \"CollectionRegex\": {\n          \"type\": \"string\",\n          \"description\": \"Regex pattern to use for creating the wildcard (*) collection. To learn more about the regex syntax, see [Go programming language](https://pkg.go.dev/regexp).\"\n        },\n        \"Database\": {\n          \"type\": \"string\",\n          \"description\": \"Human-readable label that identifies the database, which contains the collection in the cluster. You must omit this parameter to generate wildcard (`*`) collections for dynamically generated databases.\"\n        },\n        \"DefaultFormat\": {\n          \"type\": \"string\",\n          \"description\": \"File format that MongoDB Cloud uses if it encounters a file without a file extension while searching **storeName**.\",\n          \"enum\": [\n            \".avro\",\n            \".avro.gz\",\n            \".bson\",\n            \".bson.gz\",\n            \".csv\",\n            \".json\",\n            \".json.gz\",\n            \".orc\",\n            \".tsv\",\n            \".tsv.gz\"\n          ]\n        },\n        \"Path\": {\n          \"type\": \"string\",\n          \"description\": \"File path that controls how MongoDB Cloud searches for and parses files in the **storeName** before mapping them to a collection.Specify ``/`` to capture all files and folders from the ``prefix`` path.\"\n        },\n        \"StoreName\": {\n          \"type\": \"string\",\n          \"description\": \"Human-readable label that identifies the data store to map to the **collection**. Must match the **name** of an object in the **stores** array.\"\n        },\n        \"Urls\": {\n          \"type\": \"array\",\n          \"insertionOrder\": false,\n          \"description\": \"URLs of the publicly accessible data files. You can't specify URLs that require authentication. Atlas Data Lake creates a partition for each URL. If empty or omitted, Data Lake uses the URLs from the store specified in the **dataSources.storeName** parameter.\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"NDSDataLakeDatabaseView\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"Collections\": {\n          \"type\": \"array\",\n          \"insertionOrder\": false,\n          \"description\": \"Array of collections and data sources that map to a ``stores`` data store.\",\n          \"items\": {\n            \"$ref\": \"#/definitions/NDSDataLakeDatabaseCollectionView\",\n            \"type\": \"object\"\n          }\n        },\n        \"MaxWildcardCollections\": {\n          \"type\": \"integer\",\n          \"description\": \"Maximum number of wildcard collections in the database.\"\n        },\n        \"Name\": {\n          \"type\": \"string\",\n          \"description\": \"Human-readable label that identifies the database to which the data lake maps data.\"\n        },\n        \"Views\": {\n          \"type\": \"array\",\n          \"insertionOrder\": false,\n          \"description\": \"Array of aggregation pipelines that apply to the collection.\",\n          \"items\": {\n            \"$ref\": \"#/definitions/NDSDataLakeViewView\",\n            \"type\": \"object\"\n          }\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"NDSDataLakeStorageView\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"Databases\": {\n          \"type\": \"array\",\n          \"insertionOrder\": false,\n          \"description\": \"Array that contains the queryable databases and collections for this data lake.\",\n          \"items\": {\n            \"$ref\": \"#/definitions/NDSDataLakeDatabaseView\",\n            \"type\": \"object\"\n          }\n        },\n        \"Stores\": {\n          \"type\": \"array\",\n          \"insertionOrder\": false,\n          \"description\": \"Array that contains the data stores for the data lake.\",\n          \"items\": {\n            \"$ref\": \"#/definitions/StoreDetail\",\n            \"type\": \"object\"\n          }\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"NDSDataLakeViewView\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"Name\": {\n          \"type\": \"string\",\n          \"description\": \"Human-readable label that identifies the view, which corresponds to an aggregation pipeline on a collection.\"\n        },\n        \"Pipeline\": {\n          \"type\": \"string\",\n          \"description\": \"Aggregation pipeline stages to apply to the source collection.\"\n        },\n        \"Source\": {\n          \"type\": \"string\",\n          \"description\": \"Human-readable label that identifies the source collection for the view.\"\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"Provider\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"Name\": {\n          \"type\": \"string\",\n          \"description\": \"Human-readable label that identifies the data store. The **databases.[n].collections.[n].dataSources.[n].storeName** field references this values as part of the mapping configuration. To use MongoDB Cloud as a data store, the data lake requires a serverless instance or an `M10` or higher cluster.\"\n        },\n        \"Provider\": {\n          \"type\": \"string\"\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"apiKeyDefinition\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"PrivateKey\": {\n          \"type\": \"string\"\n        },\n        \"PublicKey\": {\n          \"type\": \"string\"\n        }\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"description\": \"Returns, adds, edits, and removes Federated Database Instances.\",\n  \"handlers\": {\n    \"create\": {\n      \"permissions\": []\n    },\n    \"read\": {\n      \"permissions\": []\n    },\n    \"update\": {\n      \"permissions\": []\n    },\n    \"delete\": {\n      \"permissions\": []\n    }\n  },\n  \"primaryIdentifier\": [\n    \"/properties/GroupId\"\n  ],\n  \"properties\": {\n    \"ApiKeys\": {\n      \"$ref\": \"#/definitions/apiKeyDefinition\"\n    },\n    \"CloudProviderConfig\": {\n      \"type\": \"object\",\n      \"description\": \"Cloud provider linked to this data lake.\",\n      \"$ref\": \"#/definitions/DataLakeCloudProviderConfigView\"\n    },\n    \"DataProcessRegion\": {\n      \"type\": \"object\",\n      \"description\": \"Information about the cloud provider region to which the data lake routes client connections. MongoDB Cloud supports AWS only.\",\n      \"$ref\": \"#/definitions/DataLakeDataProcessRegionView\"\n    },\n    \"EndDate\": {\n      \"type\": \"number\",\n      \"description\": \"Timestamp that specifies the end point for the range of log messages to download.  MongoDB Cloud expresses this timestamp in the number of seconds that have elapsed since the UNIX epoch.\"\n    },\n    \"GroupId\": {\n      \"type\": \"string\",\n      \"description\": \"Unique 24-hexadecimal digit string that identifies your project.\",\n      \"maxLength\": 24,\n      \"minLength\": 24,\n      \"pattern\": \"^([a-f0-9]{24})$\"\n    },\n    \"SkipRoleValidation\": {\n      \"type\": \"boolean\",\n      \"description\": \"Flag that indicates whether this request should check if the requesting IAM role can read from the S3 bucket. AWS checks if the role can list the objects in the bucket before writing to it. Some IAM roles only need write permissions. This flag allows you to skip that check.\"\n    },\n    \"StartDate\": {\n      \"type\": \"number\",\n      \"description\": \"Timestamp that specifies the starting point for the range of log messages to download. MongoDB Cloud expresses this timestamp in the number of seconds that have elapsed since the UNIX epoch.\"\n    },\n    \"Storage\": {\n      \"type\": \"object\",\n      \"description\": \"Configuration information for each data store and its mapping to MongoDB Cloud databases.\",\n      \"$ref\": \"#/definitions/DataLakeStorageView\"\n    },\n    \"TenantName\": {\n      \"type\": \"string\",\n      \"description\": \"Human-readable label that identifies the Federated Database to remove.\"\n    },\n    \"Hostnames\":{\n      \"type\":\"array\",\n      \"insertionOrder\": false,\n      \"description\": \"Human-readable label that identifies the Federated Database to update.\",\n      \"items\":{\n        \"type\":\"string\"\n      }\n    },\n    \"State\":{\n      \"type\":\"string\",\n      \"description\": \"Human-readable label that identifies the Federated Database to update.\"\n    }\n\n  },\n  \"readOnlyProperties\": [\n    \"/properties/GroupId\",\n    \"/properties/DataProcessRegion\",\n    \"/properties/TenantName\",\n    \"/properties/Storage\",\n    \"/properties/SkipRoleValidation\",\n    \"/properties/StartDate\",\n    \"/properties/Hostnames\",\n    \"/properties/State\",\n    \"/properties/EndDate\",\n    \"/properties/CloudProviderConfig/Aws/TestS3Bucket\",\n    \"/properties/NDSDataLakeDatabaseCollectionView\",\n    \"/properties/DataLakeDatabaseDataSourceView\",\n    \"/properties/DataLakeDatabaseView\",\n    \"/properties/NDSDataLakeDatabaseView\",\n    \"/properties/DataLakeAWSCloudProviderConfigView\",\n    \"/properties/DataLakeStorageView\",\n    \"/properties/ApiKeys\"\n  ],\n  \"typeName\": \"MongoDB::Atlas::DataLakes\",\n  \"sourceUrl\": \"https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git\"\n}\n",
  "ProvisioningType": "FULLY_MUTABLE",
  "DeprecatedStatus": "LIVE",
  "RequiredActivatedTypes": [],
  "Visibility": "PUBLIC",
  "SourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git",
  "TimeCreated": "2022-12-22T04:44:16.146Z",
  "PublisherId": "bb989456c78c398a858fef18f2ca1bfc1fbba082",
  "LatestPublicVersion": "1.0.0",
  "IsActivated": false
}